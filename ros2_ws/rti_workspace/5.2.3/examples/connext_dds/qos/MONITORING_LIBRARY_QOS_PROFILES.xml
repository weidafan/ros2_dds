<?xml version="1.0"?>

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/5.2.3/5.2.0/rti_dds_qos_profiles.xsd" 
    version="5.2.3">
    
    <!--
        Overview:
           This file contains 2 QoS profiles. The first profile:
           
           - CustomerExampleMonitoringLibrary::CustomerExampleMonitoringProfile
           
        is an example that shows how to enable monitoring data for customer
        applications.
        
           The second profile:
           
           - RTIMonitoringQosLibrary::RTIMonitoringQosProfile
         
        documents the QoS used internally by the Monitoring Library if no other
        QoS is requested. It also provides a good starting point if you want to
        customize the QoS for the Monitoring Library. Typical use cases for 
        doing this are to send monitoring data on a separate network and to set 
        some specific QoS such as initial peers or transport properties. This
        profile can also be used to subscribe to the topics published by the 
        Monitoring Library.
    -->
    
    
    <!--
        This QoS Library and Profile is intended to be used by customers
        either directly or as an example of how to enable the Monitoring Library
        in their own applications.
        
        NOTE: The Baseline.Monitoring QoS profile contains the two properties to
        enable the Monitoring Library for dynamically linked applications. All
        Java and .Net Connext applications are dynamic. If you have a C or C++ 
        application which is statically linked, please refer to the Getting 
        Started Guide for instructions on how to enable monitoring.
    -->
    <qos_library name="CustomerExampleMonitoringLibrary">
        <qos_profile name="CustomerExampleMonitoringProfile"
            base_name="BuiltinQosLib::Generic.Monitoring.Common">

            <participant_qos>
                <property>
                    <value>
                        <!-- ========================= -->
                        <!-- monitoring configurations -->
                        <!-- ========================= -->

                        <!--
                            How often to sample and publish monitoring
                            topics in seconds.
                            Default: 5 (seconds)
                        -->
                        <!--element>
                            <name>rti.monitor.config.publish_period</name>
                            <value>5</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Monitoring topics that to be sent out.
                            Default: * (all of them, i.e. no filter)
                        -->
                        <!--element>
                            <name>rti.monitor.config.topics</name>
                            <value>*</value>
                            <propagate>false</propagate>
                        </element-->

                        <!-- 
                            User topics to be monitoring.
                            Default: * (no filter)
                        -->
                        <!--element>
                            <name>rti.monitor.config.usertopics</name>
                            <value>*</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Uncomment this if you want statistics to be
                            published by a new separate participant, with
                            the specified domain ID. 
                            Default: not specified (use user participant for
                            publishing monitoring data)
                        -->
                        <!--element>
                            <name>rti.monitor.config.new_participant_domain_id</name>
                            <value>10</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Uncomment the next two properties if you want 
                            to use specific QoS profile for entities created
                            by monitoring.
                            Default: not specified (use internal QoS values)
                        -->
                        <!--element>
                            <name>rti.monitor.config.qos_library</name>
                            <value>RTIMonitoringQosLibrary</value>
                            <propagate>false</propagate> </element>
                        <element>
                            <name>rti.monitor.config.qos_profile</name>
                            <value>RTIMonitoringQosProfile</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Uncomment this if you want to control the
                            property of the thread that sample and
                            publish monitoring data.
                        -->
                        <!-- Default: -2 for windows, -999999 for linux -->
                        <!--element>
                            <name>rti.monitor.config.publish_thread_priority</name>
                            <value>-2</value>
                            <propagate>false</propagate>
                        </element-->
                        
                        <!-- Default: 0 for windows, -1 for linux -->
                        <!--element>
                            <name>rti.monitor.config.publish_thread_stacksize</name>
                            <value>0</value>
                            <propagate>false</propagate>
                        </element-->
                        
                        <!-- Default: FLOATING_POINT | STDIO -->
                        <!--element>
                            <name>rti.monitor.config.publish_thread_options</name>
                            <value>FLOATING_POINT | STDIO</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Monitor memory and CPU usage?
                            Default: true
                        -->
                        <!--element>
                            <name>rti.monitor.config.get_process_statistics</name>
                            <value>true</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Do we want to skip monitoring internal entities and
                            not include them in entity counts?
                            Default: true
                        -->
                        <!--element>
                            <name>rti.monitor.config.skip_monitor_entities</name>
                            <value>true</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Do you want monitoring library to reset status 
                            change count after access.
                            Default: false
                        -->
                        <!--element>
                            <name>rti.monitor.config.reset_status_change_counts</name>
                            <value>false</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            The monitoring library verbosity for internal
                            debugging purpose. 
                            Default: 1
                        -->
                        <!--element>
                            <name>rti.monitor.config.verbosity</name>
                            <value>1</value>
                            <propagate>false</propagate>
                        </element-->

                        <!--
                            Maximum size of the preallocated buffer. If sample 
                            serialized size is larger than this value (unless 
                            the value is -1), dynamic memory allocation will be
                            used. 
                            Default -1 (preallocated buffer is set according to 
                            max size serialized of the data type, no dynamic
                            memory allocation)
                        -->
                        <!--element>
                            <name>rti.monitor.config.writer_pool_buffer_max_size</name>
                            <value>-1</value>
                            <propagate>false</propagate>
                        </element-->

                    </value>
                </property>

            </participant_qos>

        </qos_profile>

    </qos_library>

    
    <!-- ****************************************************************** -->
    <!-- *                                                                * -->
    <!-- *                                                                * -->
    <!-- *                    Monitoring QoS Profile                      * -->
    <!-- *                                                                * -->
    <!-- *                                                                * -->
    <!-- ****************************************************************** -->
    <!--
        Overview:
        This profile is intended to document the internal QoS used by the 
        monitoring library and to provide a starting point for customizing this
        QoS as needed for customer applications. It is NOT intended to be used
        as customer application QoS. If that is what you are looking for, use
        CustomerExampleMonitoringLibrary::CustomerExampleMonitoringProfile from
        this file.
        
        This profile can also to be used by customer applications that want to
        subscribe to the monitoring library topics directly (rather than using
        the RTI Monitor UI to view the data).
        
        Usage:
        The typical usage for this profile is to specify that the monitoring 
        data be sent on a separate participant by using the 
        rti.monitor.config.new_participant_domain_id property. To specify one
        of the profiles use the rti.monitor.config.qos_library and
        rti.monitor.config.qos_profile properties. Here's an example:

        <element>
            <name>rti.monitor.config.qos_library</name>
            <value>RTIMonitoringQosLibrary</value>
            <propagate>false</propagate>
        </element>
        <element>
            <name>rti.monitor.config.qos_profile</name>
            <value>RTIMonitoringQosProfile</value>
            <propagate>false</propagate>
        </element>
    -->
    <qos_library name="RTIMonitoringQosLibrary">
        <qos_profile name="RTIMonitoringQosProfile">

            <!-- published at startup with occasional updates if QoS changes -->
            <datawriter_qos topic_filter="rti/dds/monitoring/*Description">
                <durability>
                    <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                </durability>

                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                    <max_blocking_time>
                        <sec>DURATION_ZERO_SEC</sec>
                        <nanosec>100000000</nanosec>
                    </max_blocking_time>
                </reliability>

                <publish_mode>
                    <kind>ASYNCHRONOUS_PUBLISH_MODE_QOS</kind>
                </publish_mode>
            </datawriter_qos>

            <!-- published periodically -->
            <datawriter_qos topic_filter="rti/dds/monitoring/*Entity*Statistics">

                <durability>
                    <kind>VOLATILE_DURABILITY_QOS</kind>
                </durability>

                <reliability>
                    <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
                </reliability>
            </datawriter_qos>

            <!-- received at startup with occasional updates if QoS changes -->
            <datareader_qos topic_filter="rti/dds/monitoring/*Description">
                <durability>
                    <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                </durability>

                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
            </datareader_qos>

            <!-- received periodically -->
            <datareader_qos topic_filter="rti/dds/monitoring/*Entity*Statistics">
                <durability>
                    <kind>VOLATILE_DURABILITY_QOS</kind>
                </durability>

                <reliability>
                    <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
                </reliability>
            </datareader_qos>

        </qos_profile>

    </qos_library>
    
</dds>
