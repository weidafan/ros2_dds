<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="group">
    <name>NDDSClockSelectionModule</name>
    <title>Clock Selection</title>
    <filename>group__NDDSClockSelectionModule.html</filename>
    <docanchor file="group__NDDSClockSelectionModule">NDDSClockSelectionAvailable</docanchor>
    <docanchor file="group__NDDSClockSelectionModule">NDDSClockSelectionStrategy</docanchor>
    <docanchor file="group__NDDSClockSelectionModule">NDDSClockSelectionConfiguration</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSDomainModule</name>
    <title>Domain Module</title>
    <filename>group__DDSDomainModule.html</filename>
    <subgroup>DDSDomainParticipantModule</subgroup>
    <subgroup>DDSBuiltInTopicModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSDomainParticipantModule</name>
    <title>DomainParticipants</title>
    <filename>group__DDSDomainParticipantModule.html</filename>
    <class kind="class">dds::domain::DomainParticipant</class>
    <class kind="class">rti::domain::DomainParticipantConfigParams</class>
    <class kind="class">dds::domain::qos::DomainParticipantFactoryQos</class>
    <class kind="class">dds::domain::qos::DomainParticipantQos</class>
    <member kind="function">
      <type>std::string</type>
      <name>sql_filter_name</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga738e559c23a9b74e82d467448018b650</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stringmatch_filter_name</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga55506ecc9d692d1c6379914a12b1e422</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBuiltInTopicModule</name>
    <title>Built-in Topics</title>
    <filename>group__DDSBuiltInTopicModule.html</filename>
    <subgroup>DDSParticipantBuiltInTopicModule</subgroup>
    <subgroup>DDSTopicBuiltInTopicModule</subgroup>
    <subgroup>DDSPublicationBuiltInTopicModule</subgroup>
    <subgroup>DDSSubscriptionBuiltInTopicModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSTopicModule</name>
    <title>Topic Module</title>
    <filename>group__DDSTopicModule.html</filename>
    <subgroup>DDSTopicEntityModule</subgroup>
    <subgroup>DDSBuiltInTypesModule</subgroup>
    <subgroup>DDSTopicTraitsModule</subgroup>
    <subgroup>DDSCustomContentFilterModule</subgroup>
    <class kind="class">dds::topic::AnyTopic</class>
    <class kind="class">dds::topic::TopicListener</class>
    <class kind="class">dds::topic::NoOpTopicListener</class>
  </compound>
  <compound kind="group">
    <name>DDSTopicEntityModule</name>
    <title>Topics</title>
    <filename>group__DDSTopicEntityModule.html</filename>
    <class kind="class">dds::core::status::InconsistentTopicStatus</class>
    <class kind="class">dds::topic::ContentFilteredTopic</class>
    <class kind="class">dds::topic::Filter</class>
    <class kind="class">dds::topic::TopicInstance</class>
    <class kind="class">dds::topic::TopicListener</class>
    <class kind="class">dds::topic::Topic</class>
    <class kind="class">dds::topic::TopicDescription</class>
    <class kind="class">rti::topic::ExpressionProperty</class>
    <class kind="class">rti::topic::FilterSampleInfo</class>
    <class kind="class">dds::topic::qos::TopicQos</class>
  </compound>
  <compound kind="group">
    <name>DDSBuiltInTypesModule</name>
    <title>Built-in Types</title>
    <filename>group__DDSBuiltInTypesModule.html</filename>
    <class kind="class">dds::core::BytesTopicType</class>
    <class kind="class">dds::core::StringTopicType</class>
    <class kind="class">dds::core::KeyedStringTopicType</class>
    <class kind="class">dds::core::KeyedBytesTopicType</class>
    <docanchor file="group__DDSBuiltInTypesModule">BuiltinTypeMemoryManagement</docanchor>
    <docanchor file="group__DDSBuiltInTypesModule">BuiltinTypeTypeCode</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSPublicationModule</name>
    <title>Publication Module</title>
    <filename>group__DDSPublicationModule.html</filename>
    <subgroup>DDSPublisherModule</subgroup>
    <subgroup>DDSWriterModule</subgroup>
    <subgroup>DDSFlowControllerModule</subgroup>
    <subgroup>NDDSMultichannelConfigurationModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSPublisherModule</name>
    <title>Publishers</title>
    <filename>group__DDSPublisherModule.html</filename>
    <class kind="class">dds::pub::PublisherListener</class>
    <class kind="class">dds::pub::CoherentSet</class>
    <class kind="class">dds::pub::Publisher</class>
    <class kind="class">dds::pub::SuspendedPublication</class>
    <class kind="class">dds::pub::qos::PublisherQos</class>
  </compound>
  <compound kind="group">
    <name>DDSWriterModule</name>
    <title>Data Writers</title>
    <filename>group__DDSWriterModule.html</filename>
    <class kind="class">dds::core::status::LivelinessLostStatus</class>
    <class kind="class">dds::core::status::OfferedDeadlineMissedStatus</class>
    <class kind="class">dds::core::status::OfferedIncompatibleQosStatus</class>
    <class kind="class">dds::core::status::PublicationMatchedStatus</class>
    <class kind="class">dds::pub::AnyDataWriter</class>
    <class kind="class">dds::pub::AnyDataWriterListener</class>
    <class kind="class">dds::pub::DataWriterListener</class>
    <class kind="class">dds::pub::NoOpDataWriterListener</class>
    <class kind="class">dds::pub::DataWriter</class>
    <class kind="class">rti::core::status::DataWriterCacheStatus</class>
    <class kind="class">rti::core::status::ReliableWriterCacheChangedStatus</class>
    <class kind="class">rti::core::status::ReliableReaderActivityChangedStatus</class>
    <class kind="class">rti::core::status::DataWriterProtocolStatus</class>
    <class kind="class">rti::pub::AcknowledgmentInfo</class>
    <class kind="class">dds::pub::qos::DataWriterQos</class>
    <class kind="class">rti::pub::WriteParams</class>
  </compound>
  <compound kind="group">
    <name>DDSFlowControllerModule</name>
    <title>Flow Controllers</title>
    <filename>group__DDSFlowControllerModule.html</filename>
    <class kind="struct">rti::pub::FlowControllerSchedulingPolicy_def</class>
    <class kind="class">rti::pub::FlowControllerTokenBucketProperty</class>
    <class kind="class">rti::pub::FlowControllerProperty</class>
    <class kind="class">rti::pub::FlowController</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; FlowControllerSchedulingPolicy_def &gt;</type>
      <name>FlowControllerSchedulingPolicy</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga32728f3fc282900d82d425909b3b0576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>DEFAULT_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>gaacf221b25839ecbf67b5b140e8ea08f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>FIXED_RATE_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga38faae12cb0ec150f1b4e774f04c6da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>ON_DEMAND_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga6e2d5f82bb73055a69f94a67016d7cdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSubscriptionModule</name>
    <title>Subscription Module</title>
    <filename>group__DDSSubscriptionModule.html</filename>
    <subgroup>DDSSubscriberModule</subgroup>
    <subgroup>DDSReaderModule</subgroup>
    <subgroup>DDSDataSampleModule</subgroup>
    <docanchor file="group__DDSSubscriptionModule">Subscription_access_samples</docanchor>
    <docanchor file="group__DDSSubscriptionModule">Data_access_patterns</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSSubscriberModule</name>
    <title>Subscribers</title>
    <filename>group__DDSSubscriberModule.html</filename>
    <class kind="class">dds::sub::SubscriberListener</class>
    <class kind="class">dds::sub::CoherentAccess</class>
    <class kind="class">dds::sub::Subscriber</class>
    <class kind="class">dds::sub::qos::SubscriberQos</class>
  </compound>
  <compound kind="group">
    <name>DDSReaderModule</name>
    <title>DataReaders</title>
    <filename>group__DDSReaderModule.html</filename>
    <subgroup>DDSReadConditionModule</subgroup>
    <subgroup>DDSQueryConditionModule</subgroup>
    <class kind="class">dds::core::status::SampleRejectedState</class>
    <class kind="class">dds::core::status::SampleLostStatus</class>
    <class kind="class">dds::core::status::SampleRejectedStatus</class>
    <class kind="class">dds::core::status::LivelinessChangedStatus</class>
    <class kind="class">dds::core::status::RequestedDeadlineMissedStatus</class>
    <class kind="class">dds::core::status::RequestedIncompatibleQosStatus</class>
    <class kind="class">dds::core::status::SubscriptionMatchedStatus</class>
    <class kind="class">dds::sub::AnyDataReader</class>
    <class kind="class">dds::sub::AnyDataReaderListener</class>
    <class kind="class">dds::sub::DataReaderListener</class>
    <class kind="class">dds::sub::NoOpDataReaderListener</class>
    <class kind="class">dds::sub::DataReader</class>
    <class kind="class">dds::sub::DataReader::Selector</class>
    <class kind="class">dds::sub::DataReader::ManipulatorSelector</class>
    <class kind="class">rti::core::status::SampleLostState</class>
    <class kind="class">rti::core::status::DataReaderCacheStatus</class>
    <class kind="class">rti::core::status::DataReaderProtocolStatus</class>
    <class kind="class">dds::sub::qos::DataReaderQos</class>
  </compound>
  <compound kind="group">
    <name>DDSReadConditionModule</name>
    <title>Read Conditions</title>
    <filename>group__DDSReadConditionModule.html</filename>
    <class kind="class">dds::sub::cond::ReadCondition</class>
  </compound>
  <compound kind="group">
    <name>DDSQueryConditionModule</name>
    <title>Query Conditions</title>
    <filename>group__DDSQueryConditionModule.html</filename>
    <class kind="class">dds::sub::cond::dds::sub::cond::QueryCondition</class>
    <class kind="class">dds::sub::Query</class>
  </compound>
  <compound kind="group">
    <name>DDSDataSampleModule</name>
    <title>Data Samples</title>
    <filename>group__DDSDataSampleModule.html</filename>
    <subgroup>DDSSampleInfoModule</subgroup>
    <subgroup>DDSDataStateModule</subgroup>
    <class kind="class">dds::sub::SharedSamples</class>
    <class kind="class">dds::sub::Sample</class>
    <class kind="class">dds::sub::SampleInfo</class>
    <class kind="class">rti::sub::LoanedSample</class>
    <class kind="class">dds::sub::LoanedSamples</class>
    <class kind="struct">rti::sub::IsValidData</class>
    <class kind="class">rti::sub::SampleIterator</class>
    <class kind="class">rti::sub::ValidSampleIterator</class>
  </compound>
  <compound kind="group">
    <name>DDSSampleInfoModule</name>
    <title>Sample Information</title>
    <filename>group__DDSSampleInfoModule.html</filename>
    <class kind="class">dds::sub::GenerationCount</class>
    <class kind="class">dds::sub::Rank</class>
    <class kind="class">dds::sub::SampleInfo</class>
  </compound>
  <compound kind="group">
    <name>DDSDataStateModule</name>
    <title>Data State</title>
    <filename>group__DDSDataStateModule.html</filename>
    <class kind="class">dds::sub::status::SampleState</class>
    <class kind="class">dds::sub::status::ViewState</class>
    <class kind="class">dds::sub::status::InstanceState</class>
    <class kind="class">dds::sub::status::DataState</class>
  </compound>
  <compound kind="group">
    <name>DDSInfrastructureModule</name>
    <title>Infrastructure Module</title>
    <filename>group__DDSInfrastructureModule.html</filename>
    <subgroup>NDDSClockSelectionModule</subgroup>
    <subgroup>DDSConditionsModule</subgroup>
    <subgroup>DDSTimeSupportModule</subgroup>
    <subgroup>DDSException</subgroup>
    <subgroup>SafeEnumModule</subgroup>
    <subgroup>DDSStatusTypesModule</subgroup>
    <subgroup>DDSCPP2SupportingTypes</subgroup>
    <subgroup>DDSXTypesModule</subgroup>
    <subgroup>DDSBuiltinQosProfilesModule</subgroup>
    <subgroup>DDSQosTypesModule</subgroup>
    <class kind="class">dds::core::Entity</class>
    <class kind="class">rti::core::Cookie</class>
    <class kind="class">rti::core::Guid</class>
    <class kind="class">rti::core::SampleFlag</class>
    <class kind="class">rti::core::SampleIdentity</class>
    <class kind="class">rti::core::SequenceNumber</class>
  </compound>
  <compound kind="group">
    <name>NDDSMultichannelConfigurationModule</name>
    <title>Multi-channel DataWriters</title>
    <filename>group__NDDSMultichannelConfigurationModule.html</filename>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriter</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterWriterConfiguration</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReaderConfiguration</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReliability</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReliableDelivery</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReliableProtocol</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSTransportModule</name>
    <title>Pluggable Transports</title>
    <filename>group__NDDSTransportModule.html</filename>
    <subgroup>NDDSTransportUserModule</subgroup>
    <subgroup>NDDS_TransportBuiltinsComponent</subgroup>
    <subgroup>NDDS_Transport_ClassId_t</subgroup>
    <subgroup>NDDS_Transport_Address_t</subgroup>
    <subgroup>NDDS_Transport_Property_t</subgroup>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_overview</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_aliases</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_lifecycle</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_class_attributes</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_instance_attributes</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_net_address</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_send_route</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_send_route_table</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_recv_route</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_receive_route_table</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSTransportUserModule</name>
    <title>Using Transport Plugins</title>
    <filename>group__NDDSTransportUserModule.html</filename>
    <docanchor file="group__NDDSTransportUserModule">NDDSTransportLoadPluginModule</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDS_TransportBuiltinsComponent</name>
    <title>Built-in Transport Plugins</title>
    <filename>group__NDDS__TransportBuiltinsComponent.html</filename>
    <subgroup>NDDS_Transport_Shmem_Plugin</subgroup>
    <subgroup>NDDS_Transport_UDPv4_Plugin</subgroup>
    <subgroup>NDDS_Transport_UDPv6_Plugin</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSQueryAndFilterSyntaxModule</name>
    <title>Queries and Filters Syntax</title>
    <filename>group__DDSQueryAndFilterSyntaxModule.html</filename>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">query_and_filter_syntax</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">sql_grammar_in_BNF</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">token_expression</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">string_parameters</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">type_compatibility</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">sql_extension</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">query_and_filter_example</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSConfigModule</name>
    <title>Configuration Utilities</title>
    <filename>group__NDDSConfigModule.html</filename>
    <class kind="struct">rti::config::Verbosity_def</class>
    <class kind="struct">rti::config::LogCategory_def</class>
    <class kind="struct">rti::config::PrintFormat_def</class>
    <class kind="class">rti::config::Logger</class>
    <class kind="class">rti::config::ScopedLoggerVerbosity</class>
    <class kind="class">rti::config::LibraryVersion</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; Verbosity_def &gt;</type>
      <name>Verbosity</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gabdf11dc8ae0483b9343bd479f531f84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; LogCategory_def &gt;</type>
      <name>LogCategory</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga30a7d85a0befb3d5e9d36e2d65b6c575</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; PrintFormat_def &gt;</type>
      <name>PrintFormat</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga1fadb354cac13a99d67e5d8cc78fa8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>LibraryVersion</type>
      <name>core_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga04789ae393049e20275488dd8d3caa9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>core_build_number</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga5f1b0a897203910c741c32373c2996b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LibraryVersion</type>
      <name>c_api_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gaa8f61326baa35d0a99347ffedb069cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>c_build_number</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga475cfdec026fc2ad5a5e416faaa013ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LibraryVersion</type>
      <name>cpp_api_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga4ff6bfba9694530d37cb897c96488798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cpp_build_number</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gad39bd970a8d65ff413c7ad0b462292ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::ProductVersion</type>
      <name>product_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga45aa793251a9e896c9fe6492cb84c532</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDSUtilityModule</name>
    <title>Unsupported Utilities</title>
    <filename>group__NDDSUtilityModule.html</filename>
    <member kind="function">
      <type>void</type>
      <name>sleep</name>
      <anchorfile>group__NDDSUtilityModule.html</anchorfile>
      <anchor>ga7bc6f194e1f771e8e0b55e66a393827d</anchor>
      <arglist>(const dds::core::Duration &amp;durationIn)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDSDurabilityAndPersistenceModule</name>
    <title>Durability and Persistence</title>
    <filename>group__NDDSDurabilityAndPersistenceModule.html</filename>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableWriterHistory</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableReaderState</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDataDurability</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSVirtualGuid</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableWriterConfiguration</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableReaderConfiguration</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDataDurabilityConfiguration</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSSystemPropertiesModule</name>
    <title>System Properties</title>
    <filename>group__NDDSSystemPropertiesModule.html</filename>
    <docanchor file="group__NDDSSystemPropertiesModule">NDDSSystemPropertiesList</docanchor>
    <docanchor file="group__NDDSSystemPropertiesModule">NDDSSystemPropertiesResources</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSXmlConfigurationModule</name>
    <title>Configuring QoS Profiles with XML</title>
    <filename>group__NDDSXmlConfigurationModule.html</filename>
    <class kind="class">dds::core::QosProvider</class>
    <class kind="class">rti::core::QosProviderParams</class>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLResourceConfiguration</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLUrl</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLUrlGroups</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLEnvironmentVariable</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">BuiltinQoSProfiles</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSProducerExampleModule</name>
    <title>Publication Example</title>
    <filename>group__DDSProducerExampleModule.html</filename>
    <docanchor file="group__DDSProducerExampleModule">DDSProducerExampleModule_publication</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSConsumerExampleModule</name>
    <title>Subscription Example</title>
    <filename>group__DDSConsumerExampleModule.html</filename>
    <docanchor file="group__DDSConsumerExampleModule">DDSConsumerExampleModule_subscription</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSParticipantExampleModule</name>
    <title>Participant Use Cases</title>
    <filename>group__DDSParticipantExampleModule.html</filename>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_no_autoenable</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_setup</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_lookup</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_participant_teardown</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_finalize_factory</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSTopicExampleModule</name>
    <title>Topic Use Cases</title>
    <filename>group__DDSTopicExampleModule.html</filename>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_registertype</docanchor>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_setup</docanchor>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_lookup</docanchor>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSPublisherExampleModule</name>
    <title>Publisher Use Cases</title>
    <filename>group__DDSPublisherExampleModule.html</filename>
    <docanchor file="group__DDSPublisherExampleModule">DDSPublisherExampleModule_publisher_setup</docanchor>
    <docanchor file="group__DDSPublisherExampleModule">DDSPublisherExampleModule_lookup_publishers</docanchor>
    <docanchor file="group__DDSPublisherExampleModule">DDSPublisherExampleModule_publihser_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSWriterExampleModule</name>
    <title>DataWriter Use Cases</title>
    <filename>group__DDSWriterExampleModule.html</filename>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_writer_setup</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_writer_instances</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_send</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_listeners</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_lookup</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_matched_subscriptions</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_writer_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSSubscriberExampleModule</name>
    <title>Subscriber Use Cases</title>
    <filename>group__DDSSubscriberExampleModule.html</filename>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_subscriber_setup</docanchor>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_lookup</docanchor>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_subscriber_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSReaderExampleModule</name>
    <title>DataReader Use Cases</title>
    <filename>group__DDSReaderExampleModule.html</filename>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_setup</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_instances</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_receive_setup</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_receive</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_read_samples</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_select_samples</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_coherent_access</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_listeners</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_lookup</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_matched_publications</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_builtin_readers</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_any_reader</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSEntityExampleModuleForCpp2</name>
    <title>Entity Use Cases</title>
    <filename>group__DDSEntityExampleModuleForCpp2.html</filename>
    <docanchor file="group__DDSEntityExampleModuleForCpp2">DDSEntityExampleModule_qos</docanchor>
    <docanchor file="group__DDSEntityExampleModuleForCpp2">DDSEntityExampleModule_listener</docanchor>
    <docanchor file="group__DDSEntityExampleModuleForCpp2">DDSEntityExampleModule_statuscondition</docanchor>
    <docanchor file="group__DDSEntityExampleModuleForCpp2">DDSEntityExampleModule_ignore</docanchor>
    <docanchor file="group__DDSEntityExampleModuleForCpp2">DDSEntityExampleModule_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSWaitsetExampleModule</name>
    <title>Waitset Use Cases</title>
    <filename>group__DDSWaitsetExampleModule.html</filename>
    <docanchor file="group__DDSWaitsetExampleModule">DDSWaitsetExampleModule_setup</docanchor>
    <docanchor file="group__DDSWaitsetExampleModule">DDSWaitsetExampleModule_trigger</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSFilterExampleModule</name>
    <title>Filter Use Cases</title>
    <filename>group__NDDSFilterExampleModule.html</filename>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_intro</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_examples</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_content_filtered_topic</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_query_conditions</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSCustomFilterExampleModuleForCpp2</name>
    <title>Creating Custom Content Filters</title>
    <filename>group__NDDSCustomFilterExampleModuleForCpp2.html</filename>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_intro</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_anatomy</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_compile</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_evaluate</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_finalize</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_writer_attach</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_writer_compile</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_writer_evaluate</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_writer_detach</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_writer_return_loan</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_writer_finalize</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_compile</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_evaluate</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_finalize</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_writer_attach</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_writer_compile</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_writer_evaluate</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_writer_detach</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_writer_return_loan</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_example_writer_finalize</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_create1</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_register</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_unregister</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_create2</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModuleForCpp2">NDDSCustomFilterExampleModuleForCpp2_lookup</docanchor>
  </compound>
  <compound kind="group">
    <name>XMLAppCreationExampleModule</name>
    <title>XML Application Creation</title>
    <filename>group__XMLAppCreationExampleModule.html</filename>
    <docanchor file="group__XMLAppCreationExampleModule">XMLAppCreationExampleModule_intro</docanchor>
    <docanchor file="group__XMLAppCreationExampleModule">XMLAppCreationExampleModule_example_setup</docanchor>
    <docanchor file="group__XMLAppCreationExampleModule">XMLAppCreationExampleModule_example</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSUserGuideModule</name>
    <title>Documentation Roadmap</title>
    <filename>group__DDSUserGuideModule.html</filename>
  </compound>
  <compound kind="group">
    <name>DDSCpp2Conventions</name>
    <title>Conventions</title>
    <filename>group__DDSCpp2Conventions.html</filename>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_doxygen</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Extensions</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_ext</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Experimental</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_exp</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Types</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Types_value</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_value_type</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Types_ref</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_ref_type</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Types_move</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_move_type</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_Cpp11</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_cpp11</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_stereotypes_methods</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_in</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_out</docanchor>
    <docanchor file="group__DDSCpp2Conventions">a_st_inout</docanchor>
    <docanchor file="group__DDSCpp2Conventions">doc_guide_exceptions</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSNamespaceModule</name>
    <title>Namespaces and headers</title>
    <filename>group__DDSNamespaceModule.html</filename>
    <docanchor file="group__DDSNamespaceModule">header_files</docanchor>
    <docanchor file="group__DDSNamespaceModule">namespace_guide_naming</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSDcpsModule</name>
    <title>RTI Connext DDS API Reference</title>
    <filename>group__DDSDcpsModule.html</filename>
    <subgroup>DDSDomainModule</subgroup>
    <subgroup>DDSTopicModule</subgroup>
    <subgroup>DDSPublicationModule</subgroup>
    <subgroup>DDSSubscriptionModule</subgroup>
    <subgroup>DDSInfrastructureModule</subgroup>
    <subgroup>NDDSTransportModule</subgroup>
    <subgroup>DDSQueryAndFilterSyntaxModule</subgroup>
    <subgroup>NDDSConfigModule</subgroup>
    <subgroup>NDDSUtilityModule</subgroup>
    <subgroup>NDDSDurabilityAndPersistenceModule</subgroup>
    <subgroup>NDDSSystemPropertiesModule</subgroup>
    <subgroup>NDDSXmlConfigurationModule</subgroup>
    <docanchor file="group__DDSDcpsModule">DDSDcps_overview</docanchor>
    <docanchor file="group__DDSDcpsModule">DDSDcps_model</docanchor>
    <docanchor file="group__DDSDcpsModule">DDSDcps_packages</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSHowToModule</name>
    <title>Programming How-To&apos;s</title>
    <filename>group__DDSHowToModule.html</filename>
    <subgroup>DDSProducerExampleModule</subgroup>
    <subgroup>DDSConsumerExampleModule</subgroup>
    <subgroup>DDSParticipantExampleModule</subgroup>
    <subgroup>DDSTopicExampleModule</subgroup>
    <subgroup>DDSPublisherExampleModule</subgroup>
    <subgroup>DDSWriterExampleModule</subgroup>
    <subgroup>DDSSubscriberExampleModule</subgroup>
    <subgroup>DDSReaderExampleModule</subgroup>
    <subgroup>DDSEntityExampleModuleForCpp2</subgroup>
    <subgroup>DDSWaitsetExampleModule</subgroup>
    <subgroup>NDDSFilterExampleModule</subgroup>
    <subgroup>NDDSCustomFilterExampleModuleForCpp2</subgroup>
    <subgroup>XMLAppCreationExampleModule</subgroup>
    <subgroup>DDSBuiltinTypesExampleModule</subgroup>
    <subgroup>DDSErrorModule</subgroup>
    <subgroup>DDSQosExampleModule</subgroup>
    <subgroup>DDSQosProviderExampleModule</subgroup>
    <subgroup>DDSTypesModule</subgroup>
    <subgroup>DDSXTypesExampleModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSToolModule</name>
    <title>Programming Tools</title>
    <filename>group__DDSToolModule.html</filename>
    <subgroup>DDSNddsgenModule</subgroup>
    <subgroup>DDSNddspingModule</subgroup>
    <subgroup>DDSNddsspyModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSNddsgenModule</name>
    <title>rtiddsgen</title>
    <filename>group__DDSNddsgenModule.html</filename>
    <docanchor file="group__DDSNddsgenModule">Usage</docanchor>
    <docanchor file="group__DDSNddsgenModule">a_rtiddsgen_language_option</docanchor>
    <docanchor file="group__DDSNddsgenModule">Description</docanchor>
    <docanchor file="group__DDSNddsgenModule">CPPExample</docanchor>
    <docanchor file="group__DDSNddsgenModule">IDLLanguage</docanchor>
    <docanchor file="group__DDSNddsgenModule">XMLLanguage</docanchor>
    <docanchor file="group__DDSNddsgenModule">Standalone</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSNddspingModule</name>
    <title>rtiddsping</title>
    <filename>group__DDSNddspingModule.html</filename>
  </compound>
  <compound kind="group">
    <name>DDSNddsspyModule</name>
    <title>rtiddsspy</title>
    <filename>group__DDSNddsspyModule.html</filename>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_ClassId_t</name>
    <title>Class Id</title>
    <filename>group__NDDS__Transport__ClassId__t.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_INVALID</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga8efd354afca81cfb0316b26bd5a3b0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_DTLS</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaa9475cd64622efaa6cab5d61ec1aa71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaf85fdd5e31279ee00a25f83901c43472</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TCPV4_LAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga7dad1954eb64c8c234f85d298ed21965</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TCPV4_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaa5adf7348c32089e3080b0a8faa4a58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSNAME_TCPV4_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gada4dfd5428c5d7b864e507679d892a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TLSV4_LAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga7e8dfdb798b6de440c5afa28ee0a2d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TLSV4_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga5f7601d31b7d72528a2754407ce170c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_PCIE</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaf073d9a74e0b09099bca4e306ef6639f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_ITP</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga98960ae0b5c7536b493794e730dd3a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_RESERVED_RANGE</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga8ee9872476ea317426a43836ea847bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_ClassId_t</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gae693c14746a142d41452bf4911fd923a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_Address_t</name>
    <title>Address</title>
    <filename>group__NDDS__Transport__Address__t.html</filename>
    <class kind="struct">NDDS_Transport_Address_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_ADDRESS_INVALID</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga1dc33ff13f6cc78ccd6425bc4f5d90f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_ADDRESS_STRING_BUFFER_SIZE</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga0a4aa417eadb52b891ebc3f9b7cf5321</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_to_string</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>gaa1d7b053383690a4871581d7674a7c91</anchor>
      <arglist>(const NDDS_Transport_Address_t *self, char *buffer_inout, RTI_INT32 buffer_length_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_from_string</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga6570d1fc049815b44016961024894cbc</anchor>
      <arglist>(NDDS_Transport_Address_t *address_out, const char *address_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NDDS_Transport_Address_print</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>gab99006a5001f216c1e83e8012fb470b8</anchor>
      <arglist>(const NDDS_Transport_Address_t *address_in, const char *desc_in, RTI_INT32 indent_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_is_ipv4</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga6221ab12bfe74d8a3e47415725cd414d</anchor>
      <arglist>(const NDDS_Transport_Address_t *address_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_is_multicast</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>gaa3c4206d0aa1669b08e84fdff0a41768</anchor>
      <arglist>(const NDDS_Transport_Address_t *address_in)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_Property_t</name>
    <title>Attributes</title>
    <filename>group__NDDS__Transport__Property__t.html</filename>
    <class kind="struct">NDDS_Transport_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_PROPERTY_BIT_BUFFER_ALWAYS_LOANED</name>
      <anchorfile>group__NDDS__Transport__Property__t.html</anchorfile>
      <anchor>ga099cc5d8911cbf822b2885df441a7d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_PROPERTY_GATHER_SEND_BUFFER_COUNT_MIN</name>
      <anchorfile>group__NDDS__Transport__Property__t.html</anchorfile>
      <anchor>gac31e17a163368b00672a7fa8670304e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_Shmem_Plugin</name>
    <title>Shared Memory Transport</title>
    <filename>group__NDDS__Transport__Shmem__Plugin.html</filename>
    <class kind="struct">NDDS_Transport_Shmem_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_SHMEM</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga919ce9101d78fe359c03f813be2c6369</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_SHMEM_510</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga5e9cb36926742a006823c87911bc9bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_ADDRESS_BIT_COUNT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga35cfedd492afcf0252b31c8b98151278</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_PROPERTIES_BITMAP_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gae18a8a8166ece7b6e6370051acdcd987</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_GATHER_SEND_BUFFER_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gaf251fea27c4351dfb13f46c19a23f922</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_MESSAGE_SIZE_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gaf4b9589b7eb1e891a925af3f59eee51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_RECEIVED_MESSAGE_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gac5d6855abc3bcacebe67b0c221830d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_RECEIVE_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gaf1826abf2f3c8fe2b16ebda60bdea22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_PROPERTY_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga65efdcaf595c921c233ac1b4febec582</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_Shmem_new</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga56bbb55e11d7fa68003cf3a5d9cc0c43</anchor>
      <arglist>(const struct NDDS_Transport_Shmem_Property_t *property_in)</arglist>
    </member>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_compatibility</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_crash</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_keys</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_register</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">TransportSHMEMPropertyNameModule</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_UDPv4_Plugin</name>
    <title>UDPv4 Transport</title>
    <filename>group__NDDS__Transport__UDPv4__Plugin.html</filename>
    <class kind="struct">NDDS_Transport_UDPv4_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_UDPv4</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga7afaa46b01e74c8c5c726440d6efa056</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_ADDRESS_BIT_COUNT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>gac5e6793b609612a5a839d3f05b354b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_PROPERTIES_BITMAP_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga328d5f718791a81b0a4bcdac28f77ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_GATHER_SEND_BUFFER_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga65b9ad9f4f683066a0ea97befc085f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_SOCKET_BUFFER_SIZE_OS_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>gaeec49238b766ba44d3eec5a1c13359b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_SEND_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga516e6bd8029f30ea3ca2012901dc218f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_RECV_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga73e7bbacb030a7ac1d0b36041adaa5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_PAYLOAD_SIZE_MAX</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga0ebd7c6f96784bec4b53e09dbc2bfbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_MESSAGE_SIZE_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga6dee1bddde300ccc3d5afb8f8f4f1551</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_MULTICAST_TTL_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga8cf6485247268838cf7a32a90878087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_BLOCKING_NEVER</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga63a6dad194cdf511cf38a6fabc12328d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_BLOCKING_ALWAYS</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga6a45b6ed6e90d2b535d988dda5a3282b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_BLOCKING_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga4ba5719417a579c9158e66e7fc4ce32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_PROPERTY_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga95428077c0c9307a8ca3f942e837666f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_UDPv4_new</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga43415754deca794f2970631f6b0f21fb</anchor>
      <arglist>(const struct NDDS_Transport_UDPv4_Property_t *property_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv4_string_to_address_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga81ae856667bd6e9e4ee452fdae951b6b</anchor>
      <arglist>(NDDS_Transport_Plugin *self, NDDS_Transport_Address_t *address_out, const char *address_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv4_get_receive_interfaces_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga8dbb284faa9502d7ac25156cb5122809</anchor>
      <arglist>(NDDS_Transport_Plugin *self, RTI_INT32 *found_more_than_provided_for_out, RTI_INT32 *interface_reported_count_out, NDDS_Transport_Interface_t interface_array_inout[], RTI_INT32 interface_array_size_in)</arglist>
    </member>
    <docanchor file="group__NDDS__Transport__UDPv4__Plugin">TransportUDPv4PropertyNameModule</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_UDPv6_Plugin</name>
    <title>UDPv6 Transport</title>
    <filename>group__NDDS__Transport__UDPv6__Plugin.html</filename>
    <class kind="struct">NDDS_Transport_UDPv6_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_UDPv6</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga004554cf2b01c232a1ef3c1bb098a6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_UDPv6_510</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga97d29855c5f177222291cf998713d7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_ADDRESS_BIT_COUNT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaa859beb339ce51eecad562e710cc1a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_PROPERTIES_BITMAP_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaac585139e9495a77605c986caad1735d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_GATHER_SEND_BUFFER_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaf6621d4d965eea3c429690c1a6d82b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_SOCKET_BUFFER_SIZE_OS_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gada1885fcf4b44be38f5e2ebf553f24f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_SEND_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaedff34929be9f611877e133c74238d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_RECV_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga8c9f6a74336af5885ff34fc72701d469</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_MESSAGE_SIZE_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gab06690762fd722e0885e7d3f1151a837</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_MULTICAST_TTL_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaddbf125ade0e33e5c60e0b953452d591</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_BLOCKING_NEVER</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gab601035adf6fa11b207897f88afe4119</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_BLOCKING_ALWAYS</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gabb5064864b34809c954a44b4a277c2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_PROPERTY_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gad8528636a325708010826a4cdd532bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_UDPv6_new</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gad2a0af107bfda142d1b03f6f97b2c482</anchor>
      <arglist>(const struct NDDS_Transport_UDPv6_Property_t *property_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv6_string_to_address_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga4b8dbba12b59f3c7e73e57de7f0e9f43</anchor>
      <arglist>(NDDS_Transport_Plugin *self, NDDS_Transport_Address_t *address_out, const char *address_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv6_get_receive_interfaces_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gae7ded9461bec0b980ee7b76438e9fc75</anchor>
      <arglist>(NDDS_Transport_Plugin *self, RTI_INT32 *found_more_than_provided_for_out, RTI_INT32 *interface_reported_count_out, NDDS_Transport_Interface_t interface_array_inout[], RTI_INT32 interface_array_size_in)</arglist>
    </member>
    <docanchor file="group__NDDS__Transport__UDPv6__Plugin">TransportUDPv6PropertyNameModule</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSConditionsModule</name>
    <title>Conditions and WaitSets</title>
    <filename>group__DDSConditionsModule.html</filename>
    <class kind="class">dds::core::cond::Condition</class>
    <class kind="class">dds::core::cond::GuardCondition</class>
    <class kind="class">dds::core::cond::StatusCondition</class>
    <class kind="class">dds::core::cond::WaitSet</class>
    <class kind="class">rti::core::cond::WaitSetProperty</class>
  </compound>
  <compound kind="group">
    <name>DDSTimeSupportModule</name>
    <title>Time Support</title>
    <filename>group__DDSTimeSupportModule.html</filename>
    <class kind="class">dds::core::Duration</class>
    <class kind="class">dds::core::Time</class>
  </compound>
  <compound kind="group">
    <name>DDSException</name>
    <title>Exceptions</title>
    <filename>group__DDSException.html</filename>
    <class kind="class">dds::core::Exception</class>
    <class kind="class">dds::core::Error</class>
    <class kind="class">dds::core::AlreadyClosedError</class>
    <class kind="class">dds::core::IllegalOperationError</class>
    <class kind="class">dds::core::ImmutablePolicyError</class>
    <class kind="class">dds::core::InconsistentPolicyError</class>
    <class kind="class">dds::core::InvalidArgumentError</class>
    <class kind="class">dds::core::NotEnabledError</class>
    <class kind="class">dds::core::OutOfResourcesError</class>
    <class kind="class">dds::core::PreconditionNotMetError</class>
    <class kind="class">dds::core::TimeoutError</class>
    <class kind="class">dds::core::UnsupportedError</class>
    <class kind="class">dds::core::InvalidDowncastError</class>
    <docanchor file="group__DDSException">DDSReturnTypesModule_std_retcodes</docanchor>
    <docanchor file="group__DDSException">Catching_exceptions</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSQosTraitsModule</name>
    <title>QoS Policy Traits</title>
    <filename>group__DDSQosTraitsModule.html</filename>
    <class kind="class">dds::core::policy::policy_id</class>
    <class kind="class">dds::core::policy::policy_name</class>
  </compound>
  <compound kind="group">
    <name>SafeEnumModule</name>
    <title>Safe Enumeration</title>
    <filename>group__SafeEnumModule.html</filename>
    <class kind="class">dds::core::safe_enum</class>
  </compound>
  <compound kind="group">
    <name>DDSStatusTypesModule</name>
    <title>Status Kinds</title>
    <filename>group__DDSStatusTypesModule.html</filename>
    <class kind="class">dds::core::status::StatusMask</class>
    <class kind="class">dds::core::status::InconsistentTopicStatus</class>
    <class kind="class">dds::core::status::SampleLostStatus</class>
    <class kind="class">dds::core::status::SampleRejectedStatus</class>
    <class kind="class">dds::core::status::LivelinessLostStatus</class>
    <class kind="class">dds::core::status::LivelinessChangedStatus</class>
    <class kind="class">dds::core::status::OfferedDeadlineMissedStatus</class>
    <class kind="class">dds::core::status::RequestedDeadlineMissedStatus</class>
    <class kind="class">dds::core::status::OfferedIncompatibleQosStatus</class>
    <class kind="class">dds::core::status::RequestedIncompatibleQosStatus</class>
    <class kind="class">dds::core::status::PublicationMatchedStatus</class>
    <class kind="class">dds::core::status::SubscriptionMatchedStatus</class>
    <class kind="class">rti::core::status::EventCount</class>
    <class kind="class">rti::core::status::DataReaderCacheStatus</class>
    <class kind="class">rti::core::status::DataReaderProtocolStatus</class>
    <class kind="class">rti::core::status::DataWriterCacheStatus</class>
    <class kind="class">rti::core::status::ReliableWriterCacheChangedStatus</class>
    <class kind="class">rti::core::status::ReliableReaderActivityChangedStatus</class>
    <class kind="class">rti::core::status::DataWriterProtocolStatus</class>
    <docanchor file="group__DDSStatusTypesModule">Status_changes</docanchor>
    <docanchor file="group__DDSStatusTypesModule">Status_changes_plain</docanchor>
    <docanchor file="group__DDSStatusTypesModule">Status_changes_read</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSCPP2SupportingTypes</name>
    <title>Supporting Types and Constants</title>
    <filename>group__DDSCPP2SupportingTypes.html</filename>
    <class kind="class">dds::core::basic_string</class>
    <class kind="class">rti::core::ListenerBinder</class>
    <class kind="class">rti::core::LongDouble</class>
    <class kind="class">dds::core::optional</class>
    <class kind="class">rti::core::optional_value</class>
    <class kind="class">dds::core::vector</class>
    <member kind="typedef">
      <type>boost_or_std_array</type>
      <name>array</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga85d4779b39fc9ba023dba5b6aa332372</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_string&lt; char, rti::core::memory::OsapiAllocator&lt; char &gt; &gt;</type>
      <name>string</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gad310659fde3bf0bf1bf71a0a50abbfa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_string&lt; DDS_Wchar, rti::core::memory::OsapiAllocator&lt; DDS_Wchar &gt; &gt;</type>
      <name>wstring</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga86afc558d7bcf7996b8a5acd4aff1ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>ByteSeq</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gaf64219b65f7ff337e91052779680aef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringSeq</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gaf41924828eff7595b676d2196b993482</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::nullptr_t</type>
      <name>null_type</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga9d8ae837436dd837c8e1930737b745cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::std::true_type</type>
      <name>true_type</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gaaa1e5f340cbc01016635ecb2aeb6427a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::std::false_type</type>
      <name>false_type</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga654380210e3ba60b33b78e94ec519259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32_t</type>
      <name>LENGTH_UNLIMITED</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga7f73c3110972d4a0180c20434664f661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const null_type</type>
      <name>null</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga22c3217bb51dfe3db2887417da74d917</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSXTypesModule</name>
    <title>DynamicType and DynamicData</title>
    <filename>group__DDSXTypesModule.html</filename>
    <class kind="struct">dds::core::xtypes::TypeKind_def</class>
    <class kind="class">dds::core::xtypes::AliasType</class>
    <class kind="class">dds::core::xtypes::CollectionType</class>
    <class kind="class">dds::core::xtypes::UnidimensionalCollectionType</class>
    <class kind="class">dds::core::xtypes::SequenceType</class>
    <class kind="class">dds::core::xtypes::StringType</class>
    <class kind="class">dds::core::xtypes::WStringType</class>
    <class kind="class">dds::core::xtypes::ArrayType</class>
    <class kind="class">dds::core::xtypes::DynamicData</class>
    <class kind="class">rti::core::xtypes::LoanedDynamicData</class>
    <class kind="class">rti::core::xtypes::DynamicDataInfo</class>
    <class kind="class">rti::core::xtypes::DynamicDataMemberInfo</class>
    <class kind="class">rti::core::xtypes::DynamicDataTypeSerializationProperty</class>
    <class kind="class">dds::core::xtypes::DynamicType</class>
    <class kind="class">dds::core::xtypes::EnumType</class>
    <class kind="class">dds::core::xtypes::Member</class>
    <class kind="class">dds::core::xtypes::UnionMember</class>
    <class kind="class">dds::core::xtypes::EnumMember</class>
    <class kind="class">dds::core::xtypes::PrimitiveType</class>
    <class kind="class">dds::core::xtypes::StructType</class>
    <class kind="class">dds::core::xtypes::UnionType</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; TypeKind_def &gt;</type>
      <name>TypeKind</name>
      <anchorfile>group__DDSXTypesModule.html</anchorfile>
      <anchor>gad03741c8b8380d1b7734e75797773f8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSParticipantBuiltInTopicModule</name>
    <title>Participant Built-in Topics</title>
    <filename>group__DDSParticipantBuiltInTopicModule.html</filename>
    <class kind="class">dds::topic::ParticipantBuiltinTopicData</class>
    <member kind="function">
      <type>std::string</type>
      <name>participant_topic_name</name>
      <anchorfile>group__DDSParticipantBuiltInTopicModule.html</anchorfile>
      <anchor>ga7fec452b46f2dad47e00d10b53c9bc32</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTopicBuiltInTopicModule</name>
    <title>Topic Built-in Topics</title>
    <filename>group__DDSTopicBuiltInTopicModule.html</filename>
    <class kind="class">dds::topic::TopicBuiltinTopicData</class>
    <member kind="function">
      <type>std::string</type>
      <name>topic_topic_name</name>
      <anchorfile>group__DDSTopicBuiltInTopicModule.html</anchorfile>
      <anchor>ga972cf41f2731a1c76418cd0860999e89</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPublicationBuiltInTopicModule</name>
    <title>Publication Built-in Topics</title>
    <filename>group__DDSPublicationBuiltInTopicModule.html</filename>
    <class kind="class">dds::topic::PublicationBuiltinTopicData</class>
    <member kind="function">
      <type>std::string</type>
      <name>publication_topic_name</name>
      <anchorfile>group__DDSPublicationBuiltInTopicModule.html</anchorfile>
      <anchor>ga361f4a40ddaaba2f1b5f963f92ca9121</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSubscriptionBuiltInTopicModule</name>
    <title>Subscription Built-in Topics</title>
    <filename>group__DDSSubscriptionBuiltInTopicModule.html</filename>
    <class kind="class">dds::topic::SubscriptionBuiltinTopicData</class>
    <member kind="function">
      <type>std::string</type>
      <name>subscription_topic_name</name>
      <anchorfile>group__DDSSubscriptionBuiltInTopicModule.html</anchorfile>
      <anchor>ga0421bff6abf9f32307fd02dc6b4ef2e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTopicTraitsModule</name>
    <title>Topic traits and data-type support</title>
    <filename>group__DDSTopicTraitsModule.html</filename>
    <subgroup>DDSTopicCdrModule</subgroup>
    <class kind="struct">dds::topic::is_topic_type</class>
    <class kind="struct">dds::topic::topic_type_support</class>
    <class kind="struct">dds::topic::topic_type_name</class>
    <class kind="struct">rti::topic::topic_type_has_pointer_members</class>
    <class kind="struct">rti::topic::dynamic_type</class>
  </compound>
  <compound kind="group">
    <name>DDSBuiltinQosProfilesModule</name>
    <title>Builtin Qos Profiles</title>
    <filename>group__DDSBuiltinQosProfilesModule.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>library_name</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gab82d311dfc92a2f46a7ba5e3626c313f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga59809488ef455e9ae3595544d23067b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline_5_0_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga0d88b7b0a66ac9703fefba94aa550c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline_5_1_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga6298527152f0cc8313e88bdd218ebde6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline_5_2_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga2e40b3c7cf527e4487e4763b2a16dfc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_common</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaf927520e5486f34d1f612d6f305833a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_monitoring_common</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga64ea20ea386769f101a7696cc8bbb34c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_connext_micro_compatibility</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga500cbaace2e81eb83b2de6f1bca0f2e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_other_dds_vendor_compatibility</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9d872c7eb5b6c9e4daa3cf2594f490cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_510_transport_compatibility</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaaeb1900a685cdda3fd7528f932bb58f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>library_name</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga299a4715ed82e3775542b1451299e1d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga60fd12b920c5278b5b35a5d222f68185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga58788ffe9bd4a9cb1c7a11c1d1d37386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_best_effort</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gab1e9dd6db55a361b1c5929b2dd52aa06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_high_throughput</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga34dfe5c4bb8edd906d93c54882e7d172</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_low_latency</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga475e062f20bbe95fc1900603e0e5da88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_participant_large_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa0223237b3b1a6e7a10e7759fcb6c01e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_participant_large_data_monitoring</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga214a1ef8a7ac7b3c31979e5a132749d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga49f34509fffb1b18a2c1d071ea3c6cb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga30c594c606b6658c2cc4a3eef2fb378e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data_fast_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga276200c8e8ab61a0f47186413ff4c477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data_medium_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga280bcbe56c75c058a7dfe3cb101fcf81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data_slow_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae17499c375337b34852e2c09c524839e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data_fast_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga2b5fb624526e18eb64c87b9701ddb313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data_medium_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga5616c11302f6a2e551b31f52d74e336a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data_slow_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga2c84c225b7fe2b3636c26b5a257998bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_transient_local</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9b7f8bdb91277a61bd1555f6f66c1fe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_transient</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gadd7a7ed58dc0d341cc3072bf672442be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_persistent</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga7a3d7f406776bee3a59f3f1434fab16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_auto_tuning</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa8785882cfd165d62bafb570ed4bd43e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_periodic_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga6a692e98d73e921e3a7026bd35b4d2ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_streaming</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae07146a98e377b638ab77bbfb10d45cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_reliable_streaming</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga74c8f9f10590fec49ab2b764041c3ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_event</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaac25508caf9da8d3584ed874e8a4e716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_alarm_event</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaaaa2a7607b8c989dd1ded7a5933e4ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_status</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga373546b64a4b2236ae8cd2e86a3e9316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_alarm_status</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gac2999e918ebc26a6333ecc96fecc4ab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_last_value_cache</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaeb296fb16729b4c87d5acf1b62c250d8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSQosTypesModule</name>
    <title>QoS Policies</title>
    <filename>group__DDSQosTypesModule.html</filename>
    <subgroup>DDSQosTraitsModule</subgroup>
    <subgroup>DDSAsynchronousPublisherQosModule</subgroup>
    <subgroup>DDSAvailabilityQosModule</subgroup>
    <subgroup>DDSBatchQosModule</subgroup>
    <subgroup>DDSDatabaseQosModule</subgroup>
    <subgroup>DDSDataReaderProtocolQosModule</subgroup>
    <subgroup>DDSDataReaderResourceLimitsQosModule</subgroup>
    <subgroup>DDSDataWriterProtocolQosModule</subgroup>
    <subgroup>DDSDataWriterResourceLimitsQosModule</subgroup>
    <subgroup>DDSDeadlineQosModule</subgroup>
    <subgroup>DDSDestinationOrderQosModule</subgroup>
    <subgroup>DDSDiscoveryQosModule</subgroup>
    <subgroup>DDSDiscoveryConfigQosModule</subgroup>
    <subgroup>DDSDomainParticipantResourceLimitsQosModule</subgroup>
    <subgroup>DDSDurabilityQosModule</subgroup>
    <subgroup>DDSDurabilityServiceQosModule</subgroup>
    <subgroup>DDSEntityFactoryQosModule</subgroup>
    <subgroup>DDSEntityNameQosModule</subgroup>
    <subgroup>DDSEventQosModule</subgroup>
    <subgroup>DDSExclusiveAreaQosModule</subgroup>
    <subgroup>DDSHistoryQosModule</subgroup>
    <subgroup>DDSGroupDataQosModule</subgroup>
    <subgroup>DDSLatencyBudgetQosModule</subgroup>
    <subgroup>DDSLifespanQosModule</subgroup>
    <subgroup>DDSLivelinessQosModule</subgroup>
    <subgroup>DDSLocatorFilterQosModule</subgroup>
    <subgroup>DDSLoggingQosModule</subgroup>
    <subgroup>DDSMultiChannelQosModule</subgroup>
    <subgroup>DDSOwnershipQosModule</subgroup>
    <subgroup>DDSOwnershipStrengthQosModule</subgroup>
    <subgroup>DDSPartitionQosModule</subgroup>
    <subgroup>DDSPresentationQosModule</subgroup>
    <subgroup>DDSProfileQosModule</subgroup>
    <subgroup>DDSPropertyQosModule</subgroup>
    <subgroup>DDSPublishModeQosModule</subgroup>
    <subgroup>DDSReaderDataLifecycleQosModule</subgroup>
    <subgroup>DDSReceiverPoolQosModule</subgroup>
    <subgroup>DDSReliabilityQosModule</subgroup>
    <subgroup>DDSResourceLimitsQosModule</subgroup>
    <subgroup>DDSServiceQosModule</subgroup>
    <subgroup>DDSSystemResourceLimitsQosModule</subgroup>
    <subgroup>DDSTimeBasedFilterQosModule</subgroup>
    <subgroup>DDSTopicDataQosModule</subgroup>
    <subgroup>DDSTransportBuiltinQosModule</subgroup>
    <subgroup>DDSTransportMulticastQosModule</subgroup>
    <subgroup>DDSTransportMulticastMappingQosModule</subgroup>
    <subgroup>DDSTransportPriorityQosModule</subgroup>
    <subgroup>DDSTransportSelectionQosModule</subgroup>
    <subgroup>DDSTransportUnicastQosModule</subgroup>
    <subgroup>DDSTypeConsistencyEnforcementQosModule</subgroup>
    <subgroup>DDSTypeSupportQosModule</subgroup>
    <subgroup>DDSUserDataQosModule</subgroup>
    <subgroup>DDSWriterDataLifecycleQosModule</subgroup>
    <subgroup>DDSWireProtocolQosModule</subgroup>
    <class kind="class">dds::core::policy::QosPolicyCount</class>
    <member kind="typedef">
      <type>std::vector&lt; QosPolicyCount &gt;</type>
      <name>QosPolicyCountSeq</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gad94fd9b6d977e7aabc9f65e16330bd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>QosPolicyId</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>ga1287279d109305ad008e2bbbd30b5955</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__DDSQosTypesModule">DDSQosTypesModule_usage</docanchor>
    <docanchor file="group__DDSQosTypesModule">DDSQosTypesModule_compatibility</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_rxo</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable_no</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable_until_enable</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable_yes</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSAsynchronousPublisherQosModule</name>
    <title>ASYNCHRONOUS_PUBLISHER</title>
    <filename>group__DDSAsynchronousPublisherQosModule.html</filename>
    <class kind="class">rti::core::policy::AsynchronousPublisher</class>
  </compound>
  <compound kind="group">
    <name>DDSAvailabilityQosModule</name>
    <title>AVAILABILITY</title>
    <filename>group__DDSAvailabilityQosModule.html</filename>
    <class kind="class">rti::core::EndpointGroup</class>
    <class kind="class">rti::core::policy::Availability</class>
    <member kind="typedef">
      <type>dds::core::vector&lt; EndpointGroup &gt;</type>
      <name>EndpointGroupSeq</name>
      <anchorfile>group__DDSAvailabilityQosModule.html</anchorfile>
      <anchor>ga0df8fa9e2c0cd5e1eb89189633873cda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBatchQosModule</name>
    <title>BATCH</title>
    <filename>group__DDSBatchQosModule.html</filename>
    <class kind="class">rti::core::policy::Batch</class>
  </compound>
  <compound kind="group">
    <name>DDSDatabaseQosModule</name>
    <title>DATABASE</title>
    <filename>group__DDSDatabaseQosModule.html</filename>
    <class kind="class">rti::core::policy::Database</class>
  </compound>
  <compound kind="group">
    <name>DDSDataReaderProtocolQosModule</name>
    <title>DATA_READER_PROTOCOL</title>
    <filename>group__DDSDataReaderProtocolQosModule.html</filename>
    <class kind="class">rti::core::policy::DataReaderProtocol</class>
    <class kind="class">rti::core::RtpsReliableReaderProtocol</class>
  </compound>
  <compound kind="group">
    <name>DDSDataReaderResourceLimitsQosModule</name>
    <title>DATA_READER_RESOURCE_LIMITS</title>
    <filename>group__DDSDataReaderResourceLimitsQosModule.html</filename>
    <class kind="class">rti::core::policy::DataReaderResourceLimits</class>
  </compound>
  <compound kind="group">
    <name>DDSDataWriterProtocolQosModule</name>
    <title>DATA_WRITER_PROTOCOL</title>
    <filename>group__DDSDataWriterProtocolQosModule.html</filename>
    <class kind="class">rti::core::policy::DataWriterProtocol</class>
  </compound>
  <compound kind="group">
    <name>DDSDataWriterResourceLimitsQosModule</name>
    <title>DATA_WRITER_RESOURCE_LIMITS</title>
    <filename>group__DDSDataWriterResourceLimitsQosModule.html</filename>
    <class kind="class">rti::core::policy::DataWriterResourceLimits</class>
    <class kind="struct">rti::core::policy::DataWriterResourceLimitsInstanceReplacementKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DataWriterResourceLimitsInstanceReplacementKind_def &gt;</type>
      <name>DataWriterResourceLimitsInstanceReplacementKind</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>ga3a0cf96d51e8abafed484fd6e32248c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDeadlineQosModule</name>
    <title>DEADLINE</title>
    <filename>group__DDSDeadlineQosModule.html</filename>
    <class kind="class">dds::core::policy::Deadline</class>
  </compound>
  <compound kind="group">
    <name>DDSDestinationOrderQosModule</name>
    <title>DESTINATION_ORDER</title>
    <filename>group__DDSDestinationOrderQosModule.html</filename>
    <class kind="struct">dds::core::policy::DestinationOrderKind_def</class>
    <class kind="class">dds::core::policy::DestinationOrder</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DestinationOrderKind_def &gt;</type>
      <name>DestinationOrderKind</name>
      <anchorfile>group__DDSDestinationOrderQosModule.html</anchorfile>
      <anchor>gaee7a3a35cff0dddc47144dd17d3d5e02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDiscoveryQosModule</name>
    <title>DISCOVERY</title>
    <filename>group__DDSDiscoveryQosModule.html</filename>
    <subgroup>NDDS_DISCOVERY_PEERS</subgroup>
    <class kind="class">rti::core::policy::Discovery</class>
  </compound>
  <compound kind="group">
    <name>DDSDiscoveryConfigQosModule</name>
    <title>DISCOVERY_CONFIG</title>
    <filename>group__DDSDiscoveryConfigQosModule.html</filename>
    <class kind="struct">rti::core::DiscoveryPluginPromiscuityKind_def</class>
    <class kind="class">rti::core::policy::BuiltinTopicReaderResourceLimits</class>
    <class kind="class">rti::core::policy::DiscoveryConfig</class>
    <class kind="class">rti::core::policy::DiscoveryConfigBuiltinPluginKindMask</class>
    <class kind="struct">rti::core::policy::RemoteParticipantPurgeKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DiscoveryPluginPromiscuityKind_def &gt;</type>
      <name>DiscoveryPluginPromiscuityKind</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>gaaf3568521f01a78e82f9f6e92bb66963</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; RemoteParticipantPurgeKind_def &gt;</type>
      <name>RemoteParticipantPurgeKind</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga548a5606b66bf11b144a06310abdde04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDomainParticipantResourceLimitsQosModule</name>
    <title>DOMAIN_PARTICIPANT_RESOURCE_LIMITS</title>
    <filename>group__DDSDomainParticipantResourceLimitsQosModule.html</filename>
    <class kind="class">rti::core::AllocationSettings</class>
    <class kind="class">rti::core::policy::DomainParticipantResourceLimits</class>
    <class kind="struct">rti::core::policy::IgnoredEntityReplacementKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; IgnoredEntityReplacementKind_def &gt;</type>
      <name>IgnoredEntityReplacementKind</name>
      <anchorfile>group__DDSDomainParticipantResourceLimitsQosModule.html</anchorfile>
      <anchor>ga81d1565af5960b83a560f0895ca21fc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDurabilityQosModule</name>
    <title>DURABILITY</title>
    <filename>group__DDSDurabilityQosModule.html</filename>
    <class kind="struct">dds::core::policy::DurabilityKind_def</class>
    <class kind="class">dds::core::policy::Durability</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DurabilityKind_def &gt;</type>
      <name>DurabilityKind</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>ga690a317c9b364d53b080918dbb2a7692</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDurabilityServiceQosModule</name>
    <title>DURABILITY_SERVICE</title>
    <filename>group__DDSDurabilityServiceQosModule.html</filename>
    <class kind="class">dds::core::policy::DurabilityService</class>
  </compound>
  <compound kind="group">
    <name>DDSEntityFactoryQosModule</name>
    <title>ENTITY_FACTORY</title>
    <filename>group__DDSEntityFactoryQosModule.html</filename>
    <class kind="class">dds::core::policy::EntityFactory</class>
  </compound>
  <compound kind="group">
    <name>DDSEntityNameQosModule</name>
    <title>ENTITY_NAME</title>
    <filename>group__DDSEntityNameQosModule.html</filename>
    <class kind="class">rti::core::policy::EntityName</class>
  </compound>
  <compound kind="group">
    <name>DDSEventQosModule</name>
    <title>EVENT</title>
    <filename>group__DDSEventQosModule.html</filename>
    <class kind="class">rti::core::policy::Event</class>
  </compound>
  <compound kind="group">
    <name>DDSExclusiveAreaQosModule</name>
    <title>EXCLUSIVE_AREA</title>
    <filename>group__DDSExclusiveAreaQosModule.html</filename>
    <class kind="class">rti::core::policy::ExclusiveArea</class>
  </compound>
  <compound kind="group">
    <name>DDSHistoryQosModule</name>
    <title>HISTORY</title>
    <filename>group__DDSHistoryQosModule.html</filename>
    <class kind="struct">dds::core::policy::HistoryKind_def</class>
    <class kind="class">dds::core::policy::History</class>
    <class kind="struct">rti::core::policy::RefilterKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; HistoryKind_def &gt;</type>
      <name>HistoryKind</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>ga2b3167c0e845a13b44f27de9edf297c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; RefilterKind_def &gt;</type>
      <name>RefilterKind</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>ga00d0f59bd366fa8f8dcaea9f1e92801d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSGroupDataQosModule</name>
    <title>GROUP_DATA</title>
    <filename>group__DDSGroupDataQosModule.html</filename>
    <class kind="class">dds::core::policy::GroupData</class>
  </compound>
  <compound kind="group">
    <name>DDSLatencyBudgetQosModule</name>
    <title>LATENCY_BUDGET</title>
    <filename>group__DDSLatencyBudgetQosModule.html</filename>
    <class kind="class">dds::core::policy::LatencyBudget</class>
  </compound>
  <compound kind="group">
    <name>DDSLifespanQosModule</name>
    <title>LIFESPAN</title>
    <filename>group__DDSLifespanQosModule.html</filename>
    <class kind="class">dds::core::policy::Lifespan</class>
  </compound>
  <compound kind="group">
    <name>DDSLivelinessQosModule</name>
    <title>LIVELINESS</title>
    <filename>group__DDSLivelinessQosModule.html</filename>
    <class kind="struct">dds::core::policy::LivelinessKind_def</class>
    <class kind="class">dds::core::policy::Liveliness</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; LivelinessKind_def &gt;</type>
      <name>LivelinessKind</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>gae90530dc4d46f1216cce07dfb8dc2a3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSLocatorFilterQosModule</name>
    <title>LOCATORFILTER</title>
    <filename>group__DDSLocatorFilterQosModule.html</filename>
    <class kind="class">rti::core::LocatorFilterElement</class>
    <class kind="class">rti::core::policy::LocatorFilter</class>
  </compound>
  <compound kind="group">
    <name>DDSLoggingQosModule</name>
    <title>LOGGING</title>
    <filename>group__DDSLoggingQosModule.html</filename>
  </compound>
  <compound kind="group">
    <name>DDSMultiChannelQosModule</name>
    <title>MULTICHANNEL</title>
    <filename>group__DDSMultiChannelQosModule.html</filename>
    <class kind="class">rti::core::policy::MultiChannel</class>
    <class kind="class">rti::core::policy::PublishMode</class>
    <class kind="class">rti::core::ChannelSettings</class>
    <member kind="typedef">
      <type>std::vector&lt; ChannelSettings &gt;</type>
      <name>ChannelSettingsSeq</name>
      <anchorfile>group__DDSMultiChannelQosModule.html</anchorfile>
      <anchor>ga784543a34566c06c1d27a62dcfd13fcb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSOwnershipQosModule</name>
    <title>OWNERSHIP</title>
    <filename>group__DDSOwnershipQosModule.html</filename>
    <class kind="struct">dds::core::policy::OwnershipKind_def</class>
    <class kind="class">dds::core::policy::Ownership</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; OwnershipKind_def &gt;</type>
      <name>OwnershipKind</name>
      <anchorfile>group__DDSOwnershipQosModule.html</anchorfile>
      <anchor>ga6ac96cea5d7e658c9deb53bec20e2bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSOwnershipStrengthQosModule</name>
    <title>OWNERSHIP_STRENGTH</title>
    <filename>group__DDSOwnershipStrengthQosModule.html</filename>
    <class kind="class">dds::core::policy::OwnershipStrength</class>
  </compound>
  <compound kind="group">
    <name>DDSPartitionQosModule</name>
    <title>PARTITION</title>
    <filename>group__DDSPartitionQosModule.html</filename>
    <class kind="class">dds::core::policy::Partition</class>
  </compound>
  <compound kind="group">
    <name>DDSPresentationQosModule</name>
    <title>PRESENTATION</title>
    <filename>group__DDSPresentationQosModule.html</filename>
    <class kind="struct">dds::core::policy::PresentationAccessScopeKind_def</class>
    <class kind="class">dds::core::policy::Presentation</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; PresentationAccessScopeKind_def &gt;</type>
      <name>PresentationAccessScopeKind</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>ga0b8fb0d73a4c4febd8ac4cead4d3bbe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSProfileQosModule</name>
    <title>PROFILE</title>
    <filename>group__DDSProfileQosModule.html</filename>
    <class kind="class">rti::core::QosProviderParams</class>
  </compound>
  <compound kind="group">
    <name>DDSPropertyQosModule</name>
    <title>PROPERTY</title>
    <filename>group__DDSPropertyQosModule.html</filename>
    <class kind="class">rti::core::policy::Property</class>
  </compound>
  <compound kind="group">
    <name>DDSPublishModeQosModule</name>
    <title>PUBLISH_MODE</title>
    <filename>group__DDSPublishModeQosModule.html</filename>
    <class kind="class">rti::core::policy::PublishMode</class>
    <class kind="struct">rti::core::policy::PublishModeKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; PublishModeKind_def &gt;</type>
      <name>PublishModeKind</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>gaa5cbb4a4cb2bb7e425c8ba052d9b84ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32_t</type>
      <name>PUBLICATION_PRIORITY_UNDEFINED</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>ga4461993d47131cf122fe2d00edc2e1d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32_t</type>
      <name>PUBLICATION_PRIORITY_AUTOMATIC</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>gaacde23fdff64b64407e229773f51de91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReaderDataLifecycleQosModule</name>
    <title>READER_DATA_LIFECYCLE</title>
    <filename>group__DDSReaderDataLifecycleQosModule.html</filename>
    <class kind="class">dds::core::policy::ReaderDataLifecycle</class>
  </compound>
  <compound kind="group">
    <name>DDSReceiverPoolQosModule</name>
    <title>RECEIVER_POOL</title>
    <filename>group__DDSReceiverPoolQosModule.html</filename>
    <class kind="class">rti::core::policy::ReceiverPool</class>
  </compound>
  <compound kind="group">
    <name>DDSReliabilityQosModule</name>
    <title>RELIABILITY</title>
    <filename>group__DDSReliabilityQosModule.html</filename>
    <class kind="struct">dds::core::policy::ReliabilityKind_def</class>
    <class kind="class">dds::core::policy::Reliability</class>
    <class kind="struct">rti::core::policy::AcknowledgmentKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; ReliabilityKind_def &gt;</type>
      <name>ReliabilityKind</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>ga75ba21c1733424a2ae36074891404f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; AcknowledgmentKind_def &gt;</type>
      <name>AcknowledgmentKind</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>gacb90a0ef273e01d587d86274cc23e5ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSResourceLimitsQosModule</name>
    <title>RESOURCE_LIMITS</title>
    <filename>group__DDSResourceLimitsQosModule.html</filename>
    <class kind="class">dds::core::policy::ResourceLimits</class>
  </compound>
  <compound kind="group">
    <name>DDSServiceQosModule</name>
    <title>SERVICE</title>
    <filename>group__DDSServiceQosModule.html</filename>
    <class kind="class">rti::core::policy::Service</class>
    <class kind="struct">rti::core::policy::ServiceKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; ServiceKind_def &gt;</type>
      <name>ServiceKind</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>ga69a526cf07e8f7009bf8e8f1ac88932e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSystemResourceLimitsQosModule</name>
    <title>SYSTEM_RESOURCE_LIMITS</title>
    <filename>group__DDSSystemResourceLimitsQosModule.html</filename>
    <class kind="class">rti::core::policy::SystemResourceLimits</class>
  </compound>
  <compound kind="group">
    <name>DDSTimeBasedFilterQosModule</name>
    <title>TIME_BASED_FILTER</title>
    <filename>group__DDSTimeBasedFilterQosModule.html</filename>
    <class kind="class">dds::core::policy::TimeBasedFilter</class>
  </compound>
  <compound kind="group">
    <name>DDSTopicDataQosModule</name>
    <title>TOPIC_DATA</title>
    <filename>group__DDSTopicDataQosModule.html</filename>
    <class kind="class">dds::core::policy::TopicData</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportBuiltinQosModule</name>
    <title>TRANSPORT_BUILTIN</title>
    <filename>group__DDSTransportBuiltinQosModule.html</filename>
    <class kind="class">rti::core::policy::TransportBuiltin</class>
    <class kind="class">rti::core::policy::TransportBuiltinMask</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportMulticastQosModule</name>
    <title>TRANSPORT_MULTICAST</title>
    <filename>group__DDSTransportMulticastQosModule.html</filename>
    <class kind="class">rti::core::policy::TransportMulticast</class>
    <class kind="struct">rti::core::policy::TransportMulticastKind_def</class>
    <class kind="class">rti::core::TransportMulticastSettings</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; TransportMulticastKind_def &gt;</type>
      <name>TransportMulticastKind</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>ga9c1bf70999d707d6f1c90e01a687ff36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TransportMulticastSettings &gt;</type>
      <name>TransportMulticastSettingsSeq</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>ga3a1651f93039999e0c4fe1bc7a9fb2a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportMulticastMappingQosModule</name>
    <title>TRANSPORT_MULTICAST_MAPPING</title>
    <filename>group__DDSTransportMulticastMappingQosModule.html</filename>
    <class kind="class">rti::core::policy::TransportMulticastMapping</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportPriorityQosModule</name>
    <title>TRANSPORT_PRIORITY</title>
    <filename>group__DDSTransportPriorityQosModule.html</filename>
    <class kind="class">dds::core::policy::TransportPriority</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportSelectionQosModule</name>
    <title>TRANSPORT_SELECTION</title>
    <filename>group__DDSTransportSelectionQosModule.html</filename>
    <class kind="class">rti::core::policy::TransportSelection</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportUnicastQosModule</name>
    <title>TRANSPORT_UNICAST</title>
    <filename>group__DDSTransportUnicastQosModule.html</filename>
    <class kind="class">rti::core::policy::TransportUnicast</class>
    <class kind="class">rti::core::TransportUnicastSettings</class>
    <member kind="typedef">
      <type>std::vector&lt; TransportUnicastSettings &gt;</type>
      <name>TransportUnicastSettingsSeq</name>
      <anchorfile>group__DDSTransportUnicastQosModule.html</anchorfile>
      <anchor>gad35fea8c0a16a6eabc362f0b178c7997</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTypeConsistencyEnforcementQosModule</name>
    <title>TYPE_CONSISTENCY_ENFORCEMENT</title>
    <filename>group__DDSTypeConsistencyEnforcementQosModule.html</filename>
    <class kind="struct">dds::core::policy::TypeConsistencyEnforcementKind_def</class>
    <class kind="class">dds::core::policy::TypeConsistencyEnforcement</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; TypeConsistencyEnforcementKind_def &gt;</type>
      <name>TypeConsistencyEnforcementKind</name>
      <anchorfile>group__DDSTypeConsistencyEnforcementQosModule.html</anchorfile>
      <anchor>gad143c25f236024f7241bbc44276d066e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTypeSupportQosModule</name>
    <title>TYPESUPPORT</title>
    <filename>group__DDSTypeSupportQosModule.html</filename>
    <class kind="class">rti::core::policy::TypeSupport</class>
    <class kind="struct">rti::core::policy::CdrPaddingKind_def</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; CdrPaddingKind_def &gt;</type>
      <name>CdrPaddingKind</name>
      <anchorfile>group__DDSTypeSupportQosModule.html</anchorfile>
      <anchor>gac552d6f5965d81cce62dc1d308ffbb09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSUserDataQosModule</name>
    <title>USER_DATA</title>
    <filename>group__DDSUserDataQosModule.html</filename>
    <class kind="class">dds::core::policy::UserData</class>
  </compound>
  <compound kind="group">
    <name>DDSWriterDataLifecycleQosModule</name>
    <title>WRITER_DATA_LIFECYCLE</title>
    <filename>group__DDSWriterDataLifecycleQosModule.html</filename>
    <class kind="class">dds::core::policy::WriterDataLifecycle</class>
  </compound>
  <compound kind="group">
    <name>DDSWireProtocolQosModule</name>
    <title>WIRE_PROTOCOL</title>
    <filename>group__DDSWireProtocolQosModule.html</filename>
    <class kind="class">rti::core::policy::WireProtocol</class>
    <class kind="struct">rti::core::policy::WireProtocolAutoKind_def</class>
    <class kind="class">rti::core::policy::RtpsReservedPortKindMask</class>
    <class kind="class">rti::core::RtpsWellKnownPorts</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; WireProtocolAutoKind_def &gt;</type>
      <name>WireProtocolAutoKind</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga7028dad9d700897a6b1fe30768f6a0a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>all</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gae035b162afaab5433ab995421299ca53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>none</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gad7d15a59fe5474a4720ede4a1377ba46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>default_mask</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga0825d4d7098a4c7002a694ecffc9340e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RtpsWellKnownPorts</type>
      <name>Interoperable</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga022e87f275ec987ea043e81171df259e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RtpsWellKnownPorts</type>
      <name>BackwardsCompatible</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gad6965043809248096dc1a51aab4fade4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_DISCOVERY_PEERS</name>
    <title>NDDS_DISCOVERY_PEERS</title>
    <filename>group__NDDS__DISCOVERY__PEERS.html</filename>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_locator_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_address_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_env_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_file_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_precedence</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_default</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_builtin_transport_class_names</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">DDS_DISCOVERY_PEERS_localhost_communication</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSTopicCdrModule</name>
    <title>Topic-type serialization and deserialization</title>
    <filename>group__DDSTopicCdrModule.html</filename>
    <member kind="function">
      <type>void</type>
      <name>from_cdr_buffer_no_alloc</name>
      <anchorfile>group__DDSTopicCdrModule.html</anchorfile>
      <anchor>ga31d7f3b482c41e645ba40c43f749aaff</anchor>
      <arglist>(TopicType &amp;sample, const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>TopicType</type>
      <name>from_cdr_buffer</name>
      <anchorfile>group__DDSTopicCdrModule.html</anchorfile>
      <anchor>gad471780cc71deee7fea6820ca113fee0</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>to_cdr_buffer</name>
      <anchorfile>group__DDSTopicCdrModule.html</anchorfile>
      <anchor>gacd4e11998f2f13a2461217b49e7d5ae4</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;buffer, const TopicType &amp;sample)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSCustomContentFilterModule</name>
    <title>Custom Content Filters</title>
    <filename>group__DDSCustomContentFilterModule.html</filename>
    <class kind="struct">rti::topic::no_compile_data_t</class>
    <class kind="class">rti::topic::ContentFilter</class>
    <class kind="class">rti::topic::WriterContentFilter</class>
    <class kind="class">rti::topic::WriterContentFilterHelper</class>
    <class kind="class">rti::topic::CustomFilter</class>
    <class kind="class">rti::topic::ExpressionProperty</class>
    <class kind="class">rti::topic::FilterSampleInfo</class>
    <member kind="function">
      <type>CustomFilter&lt; T &gt;</type>
      <name>find_content_filter</name>
      <anchorfile>group__DDSCustomContentFilterModule.html</anchorfile>
      <anchor>gaddb49e800dd537f9562deafb23e2acbe</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;filter_name)</arglist>
    </member>
    <member kind="variable">
      <type>no_compile_data_t</type>
      <name>no_compile_data</name>
      <anchorfile>group__DDSCustomContentFilterModule.html</anchorfile>
      <anchor>gaf609efb2a4fca5a1c6412eaba66ee4e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBuiltinTypesExampleModule</name>
    <title>Built-in Types Examples</title>
    <filename>group__DDSBuiltinTypesExampleModule.html</filename>
  </compound>
  <compound kind="group">
    <name>DDSErrorModule</name>
    <title>Exceptions</title>
    <filename>group__DDSErrorModule.html</filename>
    <docanchor file="group__DDSErrorModule">DDSErrorModule_exceptions</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSQosExampleModule</name>
    <title>Qos Use Cases</title>
    <filename>group__DDSQosExampleModule.html</filename>
    <docanchor file="group__DDSQosExampleModule">DDSQosModule_set_qos</docanchor>
    <docanchor file="group__DDSQosExampleModule">DDSQosModule_get_qos</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSQosProviderExampleModule</name>
    <title>Qos Provider Use Cases</title>
    <filename>group__DDSQosProviderExampleModule.html</filename>
    <docanchor file="group__DDSQosProviderExampleModule">DDSQosProviderExampleModule_setup</docanchor>
    <docanchor file="group__DDSQosProviderExampleModule">DDSQosProviderExampleModule_default_provider</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSTypesModule</name>
    <title>Working with IDL types</title>
    <filename>group__DDSTypesModule.html</filename>
    <class kind="class">Foo</class>
    <docanchor file="group__DDSTypesModule">DDSTypesModule_idl</docanchor>
    <docanchor file="group__DDSTypesModule">DDSTypesModule_constructors</docanchor>
    <docanchor file="group__DDSTypesModule">DDSTypesModule_getters_and_setters</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSXTypesExampleModule</name>
    <title>DynamicType and DynamicData Use Cases</title>
    <filename>group__DDSXTypesExampleModule.html</filename>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_type_creation</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_type_creation_instantiate</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_type_creation_xml</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_type_creation_idl</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_type_creation_tuples</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_data</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_data_publication</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_data_subscription</docanchor>
    <docanchor file="group__DDSXTypesExampleModule">DDSXTypesExampleModule_dynamic_data_tuples</docanchor>
  </compound>
  <compound kind="class">
    <name>Foo</name>
    <filename>classFoo.html</filename>
  </compound>
  <compound kind="class">
    <name>Listener</name>
    <filename>classListener.html</filename>
    <docanchor file="classListener">Listener_plain</docanchor>
    <docanchor file="classListener">Listener_read</docanchor>
    <docanchor file="classListener">SharedEACallbackRules</docanchor>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_Address_t</name>
    <filename>structNDDS__Transport__Address__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>network_ordered_value</name>
      <anchorfile>structNDDS__Transport__Address__t.html</anchorfile>
      <anchor>a9aae346aa5d7fd1a1fc2d11543149698</anchor>
      <arglist>[NDDS_TRANSPORT_ADDRESS_LENGTH]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_Property_t</name>
    <filename>structNDDS__Transport__Property__t.html</filename>
    <member kind="variable">
      <type>NDDS_Transport_ClassId_t</type>
      <name>classid</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>ad1801e5fd5ad7bb727c3c55cc4ee9096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>address_bit_count</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a5a2ee05f550b32ac32a3c9b520216202</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>properties_bitmap</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a9aa8b4998b2dde4cc303b44a0c458b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>gather_send_buffer_count_max</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a3e830e6ff13c82dc46ef39e7d6169be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>message_size_max</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a4ab89765aee4395142e2dabc7849a46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>allow_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a4fe78eb17d3113ab7b19666bdebc74b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>allow_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>aefb52fdb768c5dd345c6f80e59eaafd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>deny_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a5cdeaa8a2ef3a32cac477c487c0e2cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>deny_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a3df8a19f01b332cdacc2972cfbc687fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>allow_multicast_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a53edf45a5ba7a827ccbbc7ac244305dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>allow_multicast_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>ad21b2883cbff15f6b9a1a76ced37d2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>deny_multicast_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>aee02ed299b471a0a09adf464ca467154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>deny_multicast_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a6a8978297019dd39fc8eea1de70e0bb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_Shmem_Property_t</name>
    <filename>structNDDS__Transport__Shmem__Property__t.html</filename>
    <member kind="variable">
      <type>struct NDDS_Transport_Property_t</type>
      <name>parent</name>
      <anchorfile>structNDDS__Transport__Shmem__Property__t.html</anchorfile>
      <anchor>a853ea5a98b12128d51e220641328182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>received_message_count_max</name>
      <anchorfile>structNDDS__Transport__Shmem__Property__t.html</anchorfile>
      <anchor>a240f1296a35c1edb35b40e6902cffbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>receive_buffer_size</name>
      <anchorfile>structNDDS__Transport__Shmem__Property__t.html</anchorfile>
      <anchor>a5e4bdc80e1538c2ea1315504435f22b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_UDPv4_Property_t</name>
    <filename>structNDDS__Transport__UDPv4__Property__t.html</filename>
    <member kind="variable">
      <type>struct NDDS_Transport_Property_t</type>
      <name>parent</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a201b738f355a224f4adb1aa29481f748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a9d7af2209fbb1b7486e0161d57a47096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>recv_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>acb818edb0468929186920af27a811a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>unicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>adde305603e3b5ee7272355e57c6c8b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a4b51e81f4b886f1918ae41d62474fa81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_ttl</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a3a361973cfdc08952376a23792fbbc8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_loopback_disabled</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a6a63587ef07003924a3c5e97d642306b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_loopback_interface</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a1788423f895ef8fa42d4dc21d0e85651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_nonup_interfaces</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>aad52040f31d2683e45d798fb9b226dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_nonrunning_interfaces</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a838b2410350d165e2937a431e53a1b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>no_zero_copy</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a7b3dc6c7ab05e0273f55f6f0312a8a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_blocking</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a1f212bdbbb27abe3f53a6622c5dfad89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_UINT32</type>
      <name>transport_priority_mask</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a06eff9f2baf5f72185750b93c82cefeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_low</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>abae063f230c55683c852fa602b36b5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_high</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a2184e43d4efffcaf17a3b087f57afec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_ping</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a2599053c923aa49bc26d25a1b9d53fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_UINT32</type>
      <name>interface_poll_period</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a826c7e862521167b334ad2e6ecdcd118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>reuse_multicast_receive_resource</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>aca0942bfc07fdf62a5b70e0ae6314685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>protocol_overhead_max</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>aa9988933834b3017f865ab26a8833130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>public_address</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a4fda981516c74d50d31abe161d4f7381</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_UDPv6_Property_t</name>
    <filename>structNDDS__Transport__UDPv6__Property__t.html</filename>
    <member kind="variable">
      <type>struct NDDS_Transport_Property_t</type>
      <name>parent</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a4d5b6c414c527410f1eb5790561823d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a6357009ec696b2fafb93510964fd9e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>recv_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a00da7fe0a40645d52864d91b1554c8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>unicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a423d55dac2537c8cbdedcabd26d644d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a901962012774ff31a11a188ee402f50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_ttl</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aab65f6ab0c21172ff233389b49fc5547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_loopback_disabled</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a26f5565a333f6d61812cbb9a7279a376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_loopback_interface</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a032b0e119dbb669056cca5e8f6858390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_nonrunning_interfaces</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>af34f95b839d60fbf10469c42200ea647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>no_zero_copy</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aba60da079070e98b18036f44bf6689a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_blocking</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aa5164dd6782181ff7f63752c58c9d00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>enable_v4mapped</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aa61d4ff6c732c9cbeb84b6f35e6f697a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_UINT32</type>
      <name>transport_priority_mask</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a300d65c0a3f8adfb9ad8416d49b2e006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_low</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aa1bb5f930b7d612b9e1044f067a58102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_high</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a49f387a6f55a83cf9a3ff9ee1df34db0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TransportAllocationSettings_t</name>
    <filename>structTransportAllocationSettings__t.html</filename>
  </compound>
  <compound kind="namespace">
    <name>dds</name>
    <filename>namespacedds.html</filename>
    <namespace>dds::core</namespace>
    <namespace>dds::topic</namespace>
    <namespace>dds::all</namespace>
    <namespace>dds::domain</namespace>
    <namespace>dds::pub</namespace>
    <namespace>dds::sub</namespace>
  </compound>
  <compound kind="namespace">
    <name>dds::all</name>
    <filename>namespacedds_1_1all.html</filename>
  </compound>
  <compound kind="namespace">
    <name>dds::core</name>
    <filename>namespacedds_1_1core.html</filename>
    <namespace>dds::core::cond</namespace>
    <namespace>dds::core::xtypes</namespace>
    <namespace>dds::core::policy</namespace>
    <namespace>dds::core::status</namespace>
    <class kind="class">dds::core::Duration</class>
    <class kind="class">dds::core::Exception</class>
    <class kind="class">dds::core::Error</class>
    <class kind="class">dds::core::AlreadyClosedError</class>
    <class kind="class">dds::core::IllegalOperationError</class>
    <class kind="class">dds::core::ImmutablePolicyError</class>
    <class kind="class">dds::core::InconsistentPolicyError</class>
    <class kind="class">dds::core::InvalidArgumentError</class>
    <class kind="class">dds::core::NotEnabledError</class>
    <class kind="class">dds::core::OutOfResourcesError</class>
    <class kind="class">dds::core::PreconditionNotMetError</class>
    <class kind="class">dds::core::TimeoutError</class>
    <class kind="class">dds::core::UnsupportedError</class>
    <class kind="class">dds::core::InvalidDowncastError</class>
    <class kind="class">dds::core::safe_enum</class>
    <class kind="class">dds::core::basic_string</class>
    <class kind="class">dds::core::BytesTopicType</class>
    <class kind="class">dds::core::StringTopicType</class>
    <class kind="class">dds::core::KeyedStringTopicType</class>
    <class kind="class">dds::core::KeyedBytesTopicType</class>
    <class kind="class">dds::core::Entity</class>
    <class kind="class">dds::core::TEntityQos</class>
    <class kind="class">dds::core::Time</class>
    <class kind="class">dds::core::InstanceHandle</class>
    <class kind="class">dds::core::QosProvider</class>
    <class kind="class">dds::core::Value</class>
    <class kind="class">dds::core::WeakReference</class>
    <class kind="class">dds::core::optional</class>
    <class kind="class">dds::core::vector</class>
    <member kind="typedef">
      <type>boost_or_std_array</type>
      <name>array</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga85d4779b39fc9ba023dba5b6aa332372</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; InstanceHandle &gt;</type>
      <name>InstanceHandleSeq</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a9091ea7961b3e0629207fde8f4737341</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_string&lt; char, rti::core::memory::OsapiAllocator&lt; char &gt; &gt;</type>
      <name>string</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gad310659fde3bf0bf1bf71a0a50abbfa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_string&lt; DDS_Wchar, rti::core::memory::OsapiAllocator&lt; DDS_Wchar &gt; &gt;</type>
      <name>wstring</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga86afc558d7bcf7996b8a5acd4aff1ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>ByteSeq</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gaf64219b65f7ff337e91052779680aef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringSeq</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gaf41924828eff7595b676d2196b993482</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::nullptr_t</type>
      <name>null_type</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga9d8ae837436dd837c8e1930737b745cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::std::true_type</type>
      <name>true_type</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>gaaa1e5f340cbc01016635ecb2aeb6427a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::std::false_type</type>
      <name>false_type</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga654380210e3ba60b33b78e94ec519259</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator*</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>aafeeedb892b15c6c6994d9f4d3c200c0</anchor>
      <arglist>(uint32_t lhs, const Duration &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator*</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>ac618676df817328fa876dd160ce5456a</anchor>
      <arglist>(const Duration &amp;lhs, uint32_t rhs)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator/</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a9971ee4c8ff61d2e114b28559ce814ca</anchor>
      <arglist>(const Duration &amp;lhs, uint32_t rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>af7c12f37b93e63eaf49656efd46377d8</anchor>
      <arglist>(Duration &amp;lhs, Duration &amp;rhs) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a16962fc7f641f2e806430f321858d298</anchor>
      <arglist>(std::ostream &amp;out, const safe_enum&lt; def, inner &gt; &amp;the_enum)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>aa95e578a2a7b2eef1653efdd982cae45</anchor>
      <arglist>(std::ostream &amp;out, const basic_string&lt; CharType, Allocator &gt; &amp;the_string)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>operator+</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>abe934145a483a50aaec05df20ffa82b1</anchor>
      <arglist>(const Time &amp;time, const Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>operator+</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a5eef155eda6a6996015175b528420f2f</anchor>
      <arglist>(const Duration &amp;duration, const Time &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>operator-</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>adce88a2344c1e3cdbbb39eff3682a618</anchor>
      <arglist>(const Time &amp;time, const Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a1c88f319d7fe85df7aac0cf7d40092d0</anchor>
      <arglist>(const optional&lt; T &gt; &amp;a, const optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>aa645275388919fcee4f5e1ee1e5b4601</anchor>
      <arglist>(const optional&lt; T &gt; &amp;a, const optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a59ee8c1f62498d5b72844ed1b664165d</anchor>
      <arglist>(const optional&lt; T &gt; &amp;optional_value, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>acc9b1a760c0036c3eb4479fda1b7a7f5</anchor>
      <arglist>(const T &amp;value, const optional&lt; T &gt; &amp;optional_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>ad8f39e9937cfaf80e75386da3fb54bad</anchor>
      <arglist>(const optional&lt; T &gt; &amp;optional_value, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>ab7617fa6908ee5abe3b2e58df63f0822</anchor>
      <arglist>(const T &amp;value, const optional&lt; T &gt; &amp;optional_value)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a666eead0a2fb833428940b73509c67ff</anchor>
      <arglist>(std::ostream &amp;out, const optional&lt; T &gt; &amp;optional)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacedds_1_1core.html</anchorfile>
      <anchor>a6c6d296852b109a47b0d85af42e95f7a</anchor>
      <arglist>(std::ostream &amp;out, const vector&lt; _Tp &gt; &amp;vector)</arglist>
    </member>
    <member kind="variable">
      <type>const int32_t</type>
      <name>LENGTH_UNLIMITED</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga7f73c3110972d4a0180c20434664f661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const null_type</type>
      <name>null</name>
      <anchorfile>group__DDSCPP2SupportingTypes.html</anchorfile>
      <anchor>ga22c3217bb51dfe3db2887417da74d917</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::Duration</name>
    <filename>classdds_1_1core_1_1Duration.html</filename>
    <member kind="function">
      <type></type>
      <name>Duration</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ad43bddd3aff3df995ff670055d6d31a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Duration</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a4796a4c52aff7c0a2adb4c61a932ff7e</anchor>
      <arglist>(int32_t sec, uint32_t nanosec=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Duration</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a48a4d5d9bb32d278c5d70e30d2dcbd02</anchor>
      <arglist>(const std::chrono::duration&lt; Rep, Period &gt; &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>sec</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>aaed48ac36a1b01e668d72a742a01b016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sec</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a132f9da0c8f297858b7b0a164d06a4ad</anchor>
      <arglist>(int32_t s)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>nanosec</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ac97ff325a1d03bf009325f2aad43b7f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nanosec</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ad06df4446475692aaaba9265208dc18f</anchor>
      <arglist>(uint32_t ns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a1edc94fa9ec41cc0b8a0ea8bdf2a1baa</anchor>
      <arglist>(const Duration &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a5d18517acb726d54cff2a5ad59b2cfd8</anchor>
      <arglist>(const Duration &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a7e7da744921951c7ad0dfcaee607887a</anchor>
      <arglist>(const Duration &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a68ca1ba15102e4f24dd74256e60a4de3</anchor>
      <arglist>(const Duration &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a427e584c2f0d86ef6b84c8542eca2ffa</anchor>
      <arglist>(const Duration &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a386efdd7e14435a428c21c45af9fc38a</anchor>
      <arglist>(const Duration &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>aa257a68e0ba60e85ef73ecba9a1fd367</anchor>
      <arglist>(const Duration &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>Duration &amp;</type>
      <name>operator+=</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a4daee48f43f43efa4b66cfc9ebd15da0</anchor>
      <arglist>(const Duration &amp;a_ti)</arglist>
    </member>
    <member kind="function">
      <type>Duration &amp;</type>
      <name>operator-=</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a4ee7b6bbf9a54e3b9a8865bb2232915e</anchor>
      <arglist>(const Duration &amp;a_ti)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator+</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>aac6c65803ce96281ece00714186ca3f9</anchor>
      <arglist>(const Duration &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator-</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ae2ae5289db8bdf1be437cf2017781752</anchor>
      <arglist>(const Duration &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>to_millisecs</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a44aa23d7b70fbfee69b6c67515433eec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>to_microsecs</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a230cac98f874093b6e0270c2a2e43047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>to_secs</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ad89286285aef84574ac15d838200e7f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::chrono::nanoseconds</type>
      <name>to_chrono</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>af1852eddc469daa750fec204a86fe224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Duration</type>
      <name>zero</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ab431ba4bb0a0ad55d827f90606b66a46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Duration</type>
      <name>infinite</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a50821943ed0af78d1272886a64eb4587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Duration</type>
      <name>automatic</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>aa743775667fa5a9a5770901291a3850e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Duration</type>
      <name>from_microsecs</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a065766a21eca53215bd4722df0eec568</anchor>
      <arglist>(uint64_t microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Duration</type>
      <name>from_millisecs</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ac01b51b0e8891a46397b962a09fac235</anchor>
      <arglist>(uint64_t milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Duration</type>
      <name>from_secs</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a5cb7719d7f9ef7ba64fa1623b157010d</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator*</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>aafeeedb892b15c6c6994d9f4d3c200c0</anchor>
      <arglist>(uint32_t lhs, const Duration &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator*</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>ac618676df817328fa876dd160ce5456a</anchor>
      <arglist>(const Duration &amp;lhs, uint32_t rhs)</arglist>
    </member>
    <member kind="function">
      <type>Duration</type>
      <name>operator/</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>a9971ee4c8ff61d2e114b28559ce814ca</anchor>
      <arglist>(const Duration &amp;lhs, uint32_t rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1core_1_1Duration.html</anchorfile>
      <anchor>af7c12f37b93e63eaf49656efd46377d8</anchor>
      <arglist>(Duration &amp;lhs, Duration &amp;rhs) OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::Exception</name>
    <filename>classdds_1_1core_1_1Exception.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1Exception.html</anchorfile>
      <anchor>a031ca2541620c9f7b2836847ce9ae9ca</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::Error</name>
    <filename>classdds_1_1core_1_1Error.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classdds_1_1core_1_1Error.html</anchorfile>
      <anchor>a4cdc66850168719c8988b9e33cd53b08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classdds_1_1core_1_1Error.html</anchorfile>
      <anchor>a8d273633bddf939e63a3acc76d670ee2</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1Error.html</anchorfile>
      <anchor>a2da30deee97982845dbdd91ebfb1c76a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::AlreadyClosedError</name>
    <filename>classdds_1_1core_1_1AlreadyClosedError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1AlreadyClosedError.html</anchorfile>
      <anchor>a5925e76c71d1f6ca9803cf453775a3dc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::IllegalOperationError</name>
    <filename>classdds_1_1core_1_1IllegalOperationError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1IllegalOperationError.html</anchorfile>
      <anchor>a532c60f846642b08e81e41b31dd03fd8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::ImmutablePolicyError</name>
    <filename>classdds_1_1core_1_1ImmutablePolicyError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1ImmutablePolicyError.html</anchorfile>
      <anchor>a833300347c2e40bf0c78e90f31576543</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::InconsistentPolicyError</name>
    <filename>classdds_1_1core_1_1InconsistentPolicyError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1InconsistentPolicyError.html</anchorfile>
      <anchor>a4b3eabdb7c2fc89997041e38c3823f14</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::InvalidArgumentError</name>
    <filename>classdds_1_1core_1_1InvalidArgumentError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1InvalidArgumentError.html</anchorfile>
      <anchor>aa13b3069ba36822e928cb8a96695d1ed</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::NotEnabledError</name>
    <filename>classdds_1_1core_1_1NotEnabledError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1NotEnabledError.html</anchorfile>
      <anchor>a292a6a8d4f562af0d7f9c3bded1c490c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::OutOfResourcesError</name>
    <filename>classdds_1_1core_1_1OutOfResourcesError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1OutOfResourcesError.html</anchorfile>
      <anchor>a3592dee4ab9c6e36559aaf746b5a583d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::PreconditionNotMetError</name>
    <filename>classdds_1_1core_1_1PreconditionNotMetError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1PreconditionNotMetError.html</anchorfile>
      <anchor>ad46edb86d855160b4ec22e157f909f96</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::TimeoutError</name>
    <filename>classdds_1_1core_1_1TimeoutError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1TimeoutError.html</anchorfile>
      <anchor>a1b7b56c446adc8000a5bdb60f0551791</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::UnsupportedError</name>
    <filename>classdds_1_1core_1_1UnsupportedError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1UnsupportedError.html</anchorfile>
      <anchor>af1034e2c0845545173d6402c436afefe</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::InvalidDowncastError</name>
    <filename>classdds_1_1core_1_1InvalidDowncastError.html</filename>
    <base>dds::core::Exception</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdds_1_1core_1_1InvalidDowncastError.html</anchorfile>
      <anchor>a122d761beb95f30e0217f339d572d894</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::safe_enum</name>
    <filename>classdds_1_1core_1_1safe__enum.html</filename>
    <templarg>def</templarg>
    <templarg>inner</templarg>
    <member kind="typedef">
      <type>inner</type>
      <name>inner_enum</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>a252bd4c310d7c6d70e215c3883890a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>safe_enum</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>af611916d82387072039271329b59ec7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>safe_enum</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>aa98a4f5022d35c3ab2618832eccce6e6</anchor>
      <arglist>(inner_enum v)</arglist>
    </member>
    <member kind="function">
      <type>inner_enum</type>
      <name>underlying</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>afde2a77cc78d3c316829b45bb38791b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>a93f1ab58384889acd1b3bce156c26bf2</anchor>
      <arglist>(const safe_enum &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>aca74d7c883facd60ea08397de341c2c1</anchor>
      <arglist>(const safe_enum &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>af79708ae04ae88079ec76b7fdfcf43f6</anchor>
      <arglist>(const safe_enum &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>adb4150a9c98c9c59d52d3d0552c2cf64</anchor>
      <arglist>(const safe_enum &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>af471f453e7e7079de9267a50e801ff84</anchor>
      <arglist>(const safe_enum &amp;s) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>a470e5d32bd28ec48576a15b204f889eb</anchor>
      <arglist>(const safe_enum &amp;s) const </arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>aaf3900d595103cb884a7c54530f2e6dd</anchor>
      <arglist>(safe_enum &amp;left, safe_enum &amp;right) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1core_1_1safe__enum.html</anchorfile>
      <anchor>a16962fc7f641f2e806430f321858d298</anchor>
      <arglist>(std::ostream &amp;out, const safe_enum&lt; def, inner &gt; &amp;the_enum)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::basic_string</name>
    <filename>classdds_1_1core_1_1basic__string.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>basic_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>ab0dc67e59b8011cd17f6ae9b942898eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a65cc60fcfc79c86242e58aca509ea063</anchor>
      <arglist>(const basic_string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>af78f340cf797be42479c024b24e3aebf</anchor>
      <arglist>(const CharType *other_str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>ae33d252a63ee820500f15d5697b419d1</anchor>
      <arglist>(const std::basic_string&lt; CharType &gt; &amp;std_string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a18eecb938a8b2d48a6fbce30001de84c</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>afa7e00107f0f78753401f9b48e1099d7</anchor>
      <arglist>(basic_string &amp;&amp;other) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>const CharType *</type>
      <name>c_str</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>aaa47fe7e0fab7b5907010607b55f3ec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a88ad292f51cbf1375b345595049db3d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>basic_string &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>ac7fc770f13bba4bebf15b23ab11a6cd7</anchor>
      <arglist>(const basic_string &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>basic_string &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a06f17572630206563f7fcaf9d24ea43f</anchor>
      <arglist>(basic_string &amp;&amp;other) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a47628d7b28d0032276431b87537205f7</anchor>
      <arglist>(const basic_string &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a9e6b50094096047dd805d0865ae1c9c1</anchor>
      <arglist>(const basic_string &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>std::basic_string&lt; CharType &gt;</type>
      <name>to_std_string</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a412f6db1afd5de02aeef7dd818ef0073</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::basic_string&lt; CharType &gt;</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>a8425786cc2c65c5080092f24a99e13c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1core_1_1basic__string.html</anchorfile>
      <anchor>aa95e578a2a7b2eef1653efdd982cae45</anchor>
      <arglist>(std::ostream &amp;out, const basic_string&lt; CharType, Allocator &gt; &amp;the_string)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::BytesTopicType</name>
    <filename>classdds_1_1core_1_1BytesTopicType.html</filename>
    <member kind="function">
      <type></type>
      <name>BytesTopicType</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>ae4f0221c493c4944fa1e77d3cea0a561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BytesTopicType</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>abe28af25aaf9b21b65206edeecef4610</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::vector&lt; uint8_t &gt;</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>a5f4ea379d8d912735627861a858460d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>data</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>ae4b8edde1a69faafb736fce04695c11d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>data</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>acfdd7d730ea5e461798a8b1a5c96bedf</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>a048b00e4abbb4fbcaa4d6601d9d7b035</anchor>
      <arglist>(uint32_t index)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>a52ce0a8a6e18219f1b2f9445dbf8d0ff</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>length</name>
      <anchorfile>classdds_1_1core_1_1BytesTopicType.html</anchorfile>
      <anchor>a0b968a91e05083e5d0b6fb2a02aa4621</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::StringTopicType</name>
    <filename>classdds_1_1core_1_1StringTopicType.html</filename>
    <member kind="function">
      <type></type>
      <name>StringTopicType</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a4dda7f2ea2ee489ee6a68f0c834542aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringTopicType</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a4d73ff094a58888fa43acc3b5cde842f</anchor>
      <arglist>(const dds::core::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringTopicType</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>adbba431295276409cffe32b8757d866a</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringTopicType</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a6d6be420dd91cdf03fb8bb645634328e</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::string</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a4246b8729fbb6d335918b60f5e3d6516</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator dds::core::string &amp;</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a879b118a940bb19108a54aab0a12b488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const dds::core::string &amp;</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a7f4f51a784cb476fabae549a9d400894</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>data</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a2d434927eaee2bef9d403cbee86b1e40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>data</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a6bf1f6362f6b1c2386ca78d6754c3f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>data</name>
      <anchorfile>classdds_1_1core_1_1StringTopicType.html</anchorfile>
      <anchor>a2308e1eb6f47d8fca1d02dc1ba2fca22</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::KeyedStringTopicType</name>
    <filename>classdds_1_1core_1_1KeyedStringTopicType.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyedStringTopicType</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>a3237158a94864db9705479ba8932b690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyedStringTopicType</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>aee4c142b69c4769b170134ed22511964</anchor>
      <arglist>(const dds::core::string &amp;key, const dds::core::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>ae5b8b5080560c48c859e042976e589ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>a3e1ef42caa93424e3dd06c2d884b5f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>a8caf7900551771a69309dab572533f31</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>aa5da22be632f45c6e2ba2bbbcaee29a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>a05511aba5e88039e83402e59b571fa49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1KeyedStringTopicType.html</anchorfile>
      <anchor>a056ab65e2369609cd785f9188391b72e</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::KeyedBytesTopicType</name>
    <filename>classdds_1_1core_1_1KeyedBytesTopicType.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyedBytesTopicType</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>a66b4a7d24d882ccbcce67da2910a2f77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyedBytesTopicType</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>a2be8f29f0d2a9abbfacced5fe27d727f</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; uint8_t &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>a808fdfe5fd090d8733dfed854ad84268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>a9a0bf42455c2c5cd5edc17bfb1fdda53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>aebfe1d53701a01d9d36d3e442d1f4dec</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::vector&lt; uint8_t &gt;</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>ab9b7fee6a4c8de42e2d523aa305f4064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>a41d735717209fe8f0716cc7f51c998d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>a0f810b2a564cf4abec49ff747534510e</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>aa931b317fd88daa846c7e1893a54d65a</anchor>
      <arglist>(uint32_t index)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>aea45775cc800df21624ee63e0dee276b</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>length</name>
      <anchorfile>classdds_1_1core_1_1KeyedBytesTopicType.html</anchorfile>
      <anchor>adae663ed031310adb9afb39fbaed714c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::Entity</name>
    <filename>classdds_1_1core_1_1Entity.html</filename>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1Entity">Entity_abstract</docanchor>
    <docanchor file="classdds_1_1core_1_1Entity">Entity_set_qos</docanchor>
    <docanchor file="classdds_1_1core_1_1Entity">Entity_default_qos</docanchor>
    <docanchor file="classdds_1_1core_1_1Entity">Entity_get_qos</docanchor>
    <docanchor file="classdds_1_1core_1_1Entity">Entity_set_listener</docanchor>
    <docanchor file="classdds_1_1core_1_1Entity">Entity_get_listener</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::TEntityQos</name>
    <filename>classdds_1_1core_1_1TEntityQos.html</filename>
    <templarg></templarg>
    <base>Value&lt; DELEGATE &gt;</base>
    <member kind="function">
      <type>TEntityQos &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1core_1_1TEntityQos.html</anchorfile>
      <anchor>a57148ab79c91a3c6a2001f0179085d0f</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>TEntityQos &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1core_1_1TEntityQos.html</anchorfile>
      <anchor>af7a84cf000b62cb8e985ab25581c5c7e</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const TEntityQos &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1core_1_1TEntityQos.html</anchorfile>
      <anchor>aaf9a2dc627e33050a6a1bf23df2eee6f</anchor>
      <arglist>(Policy &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>TEntityQos&lt; DELEGATE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1TEntityQos.html</anchorfile>
      <anchor>aa46823bb8a2c148dda05df17db8e24d5</anchor>
      <arglist>(const TEntityQos&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a5aea0763abf4f30c52aaf3dee5743f31</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>af71d23ec59ce595097014599f8b0cece</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a9fe3f8b7e409a93b3575d05a0565ce64</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a1624bcc56dcc3e1eb05e7629ffa7dd6b</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator DELEGATE &amp;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a1b2210d129a1484089e5bf2afa385da8</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const DELEGATE &amp;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>acaa6bb9546d1f1a0f5171589a662732f</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::Time</name>
    <filename>classdds_1_1core_1_1Time.html</filename>
    <member kind="function">
      <type></type>
      <name>Time</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a3e7edeb7e88553ab1303036da0555f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Time</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a77dd64c4d8b22e88c1f0333cfb6ef41f</anchor>
      <arglist>(int32_t sec, uint32_t nanosec=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Time</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a24307da4a256dcebbfa347c5a9c23db3</anchor>
      <arglist>(const Time &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>sec</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a725c340687b3e21517ee4de975a8f4d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sec</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a0055dc5ad84932bf4f1a816472b71301</anchor>
      <arglist>(int32_t s)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>nanosec</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a031f65d53d20f9a803c521c160ecaa53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nanosec</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a2129ae44324df19df795fda61c9f5527</anchor>
      <arglist>(uint32_t ns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a5f5cda6bcab17719a2e56ca0cb557190</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>acda2e89621a5dc87b54de5ac666aac4b</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>ade41df30a99f25d4274caa5bf2fada79</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a17f7416eda1fca92ec7ac149c29e1ede</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a04fdd004d0f9831a47223091a2c0ead6</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a0bb0f8f8c53e0bb6e00a67380130bd34</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a4f151a2b2418a52a430784fbdf2faf32</anchor>
      <arglist>(const Time &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Time &amp;</type>
      <name>operator+=</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a9ff094e190a2a38f1e1d82ce323557a5</anchor>
      <arglist>(const Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>Time &amp;</type>
      <name>operator-=</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>adcfd3afef61a39877a6de847a07482d6</anchor>
      <arglist>(const Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>to_millisecs</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a0e4cc19976c51ffc745812cb3782efa6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>to_microsecs</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a234d25523d50214eb9a62b7d3564a9a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>to_secs</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a8e43b3848196400e230cbc242dd148ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time</type>
      <name>invalid</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>af7467f261cbc4158df42cfe632ad13b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time</type>
      <name>zero</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a2fd699cc5026e0c7248fde94187e35e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time</type>
      <name>maximum</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a526c156e3b9317cdb725160311b17435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time</type>
      <name>from_microsecs</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a29d18ef1a5528d2a401c0a294fe2b23a</anchor>
      <arglist>(uint64_t microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time</type>
      <name>from_millisecs</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a6380292354a48d084cb203d934fcf00c</anchor>
      <arglist>(uint64_t milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time</type>
      <name>from_secs</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a64880c8eea13474644c2ba850966667a</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>operator+</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>abe934145a483a50aaec05df20ffa82b1</anchor>
      <arglist>(const Time &amp;time, const Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>operator+</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>a5eef155eda6a6996015175b528420f2f</anchor>
      <arglist>(const Duration &amp;duration, const Time &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>Time</type>
      <name>operator-</name>
      <anchorfile>classdds_1_1core_1_1Time.html</anchorfile>
      <anchor>adce88a2344c1e3cdbbb39eff3682a618</anchor>
      <arglist>(const Time &amp;time, const Duration &amp;duration)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::InstanceHandle</name>
    <filename>classdds_1_1core_1_1InstanceHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>InstanceHandle</name>
      <anchorfile>classdds_1_1core_1_1InstanceHandle.html</anchorfile>
      <anchor>ad206761d304de1c77cde4b139458e22e</anchor>
      <arglist>(const dds::core::null_type &amp;null_handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1InstanceHandle.html</anchorfile>
      <anchor>a1ac241f4f95e1ef5d8d2ec4e174e0b65</anchor>
      <arglist>(const dds::core::null_type &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil</name>
      <anchorfile>classdds_1_1core_1_1InstanceHandle.html</anchorfile>
      <anchor>ac93195bcc0238984e2249e8c6831c497</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InstanceHandle</type>
      <name>nil</name>
      <anchorfile>classdds_1_1core_1_1InstanceHandle.html</anchorfile>
      <anchor>a2d36c968b0bd2e802d6adc1917794a74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1core_1_1InstanceHandle.html</anchorfile>
      <anchor>aef9f7b0a4356f9ca2258d3e342c2cab9</anchor>
      <arglist>(std::ostream &amp;os, const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::QosProvider</name>
    <filename>classdds_1_1core_1_1QosProvider.html</filename>
    <member kind="function">
      <type></type>
      <name>QosProvider</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>aeeb02591bba8bcac7a4c17ab60191f41</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;profile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QosProvider</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a481344e71b4fe60b319b87cdf84a1868</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>dds::domain::qos::DomainParticipantQos</type>
      <name>participant_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a92707f9f234b11bde672e625e06b2119</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::domain::qos::DomainParticipantQos</type>
      <name>participant_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a3d4bef63384d50a8e5b4e26e68daefc8</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>topic_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>af241d5197d1de2ca2646c464bc9a2714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>topic_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a797efb2e9eb2669392aab7c95c730003</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::SubscriberQos</type>
      <name>subscriber_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>ae772316d8af9de2a12cc711898ff8e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::SubscriberQos</type>
      <name>subscriber_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>aa0c1a81e164967985baa90efc658eaa2</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>datareader_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a9a2c097b38fc0b0b7c34f6062b7f28bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>datareader_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a24e9e2bffa1361ba91b1f3b49cd302cb</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::PublisherQos</type>
      <name>publisher_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>abc2035dada50ebc640802fda63918b38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::PublisherQos</type>
      <name>publisher_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a385f453d8abd1fbbb4826db923c089a8</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>datawriter_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a96a7b4d93cab799b3a95d0622a1bf465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>datawriter_qos</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a0ee7f61fec67c783d762aec2ce198b32</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>static rti::core::QosProviderParams</type>
      <name>default_provider_params</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a0328b8ecac8fd932587a9802c4387710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>static void</type>
      <name>default_provider_params</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>aee7216a4129b70d494953e51109d16b8</anchor>
      <arglist>(const rti::core::QosProviderParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>topic_qos_w_topic_name</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a2be0c2537a4bbb2881a26aa3ff21c439</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;topic_name) const</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>topic_qos_w_topic_name</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>aea804c5c8beb7027361c269ed8a69f91</anchor>
      <arglist>(const std::string &amp;topic_name) const</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>datareader_qos_w_topic_name</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a3b07e45663d401614432fb104e63efce</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;topic_name) const</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>datareader_qos_w_topic_name</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a6af882f23b8b228c3eda4e4af7b66d4f</anchor>
      <arglist>(const std::string &amp;topic_name) const</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>datawriter_qos_w_topic_name</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a939e2398c0d78065312b0eae120e178f</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;topic_name) const</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>datawriter_qos_w_topic_name</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a56150ffaf70602a9096aa1261b9155c1</anchor>
      <arglist>(const std::string &amp;topic_name) const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::optional_value&lt; std::string &gt;</type>
      <name>default_library</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a531695d13eb46001db54cc047ccce4c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::optional_value&lt; std::string &gt;</type>
      <name>default_profile</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a065b1f866d3b76a568264d4378a72378</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::optional_value&lt; std::string &gt;</type>
      <name>default_profile_library</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a678ab0ca05f1067d7cca707b5fd9922d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>qos_profile_libraries</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>aaf7e12b842e6abe6aac42deb4d579c76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>qos_profiles</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>ab68f28e7747c5891eae10783518b05ac</anchor>
      <arglist>(const std::string &amp;library_name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>profiles_loaded</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a63942bb205b2a600a9a5475cd7216a61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>type</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>aa195a73fc8ffe6d597c875e476cd8a17</anchor>
      <arglist>(const std::string &amp;type_library_name, const std::string &amp;type_name) const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>type_libraries</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a802317d9d663740587f01941366506c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::QosProviderParams</type>
      <name>provider_params</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a99f3c43a729ba9276904cebff99fbc6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>default_library</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>ac5dbe86716b8f84492bde7dcb042fd86</anchor>
      <arglist>(const std::string &amp;library_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>default_profile</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a942b7af20816f19dcfb5eeb66bb741fa</anchor>
      <arglist>(const std::string &amp;profile_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>provider_params</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a96e59d23f59293236554ee2df4ac6f9b</anchor>
      <arglist>(const rti::core::QosProviderParams &amp;provider_params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_profiles</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a24403f3405c74a07d68a7e2a2955cfd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload_profiles</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>afda46c03b56dee8faa55beacd0281573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unload_profiles</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a293b2ed5d49a39c9a188fc992d3f80d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::domain::DomainParticipant</type>
      <name>create_participant_from_config</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a1fd9f2ef91347c496b31780b1b1fc51f</anchor>
      <arglist>(const std::string &amp;config_name, const rti::domain::DomainParticipantConfigParams &amp;params=rti::domain::DomainParticipantConfigParams())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QosProvider</type>
      <name>Default</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a7de651b6063953f6ef6d87ed3111a845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reset_default</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>ace5ec67862af095ec82e02c88fb6ffb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>USE_DDS_DEFAULT_QOS_PROFILE</name>
      <anchorfile>classdds_1_1core_1_1QosProvider.html</anchorfile>
      <anchor>a3d7c830fb7b5871936287e53b1d57193</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1QosProvider">ProfileNames</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::Value</name>
    <filename>classdds_1_1core_1_1Value.html</filename>
    <templarg>D</templarg>
    <member kind="function">
      <type>const D *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a5aea0763abf4f30c52aaf3dee5743f31</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>D *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>af71d23ec59ce595097014599f8b0cece</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>const D &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a9fe3f8b7e409a93b3575d05a0565ce64</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>D &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a1624bcc56dcc3e1eb05e7629ffa7dd6b</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator D &amp;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>a1b2210d129a1484089e5bf2afa385da8</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const D &amp;</name>
      <anchorfile>classdds_1_1core_1_1Value.html</anchorfile>
      <anchor>acaa6bb9546d1f1a0f5171589a662732f</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::WeakReference</name>
    <filename>classdds_1_1core_1_1WeakReference.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>WeakReference</name>
      <anchorfile>classdds_1_1core_1_1WeakReference.html</anchorfile>
      <anchor>a51bcb8fe244349f9f44e1427f8ddef3a</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expired</name>
      <anchorfile>classdds_1_1core_1_1WeakReference.html</anchorfile>
      <anchor>a510e6d285e9ed0242bfc5b7364c7a237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>lock</name>
      <anchorfile>classdds_1_1core_1_1WeakReference.html</anchorfile>
      <anchor>a64756be93d9b0a41b3772a1dd690ccd2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::optional</name>
    <filename>classdds_1_1core_1_1optional.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>optional</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>ab79e05056c08d0e9b83819879f13131d</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a4fac598213a432db7d6dcc9efc0e3a60</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a06edc5ee189fd72708248135499bd53e</anchor>
      <arglist>(T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>ab1f5706274013d2793737dcb0abab8d7</anchor>
      <arglist>(bool condition, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>abab0470421242f1b00cbfb9e64532468</anchor>
      <arglist>(bool condition, T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~optional</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a59de5e143ca5aab186f8307057a889fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>ac2d4164ad5081060460a4be42fa95495</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a0ffe483371458419c74d6db223bd4b72</anchor>
      <arglist>(T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_set</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a217690a2739d4a8016c7aeb86f27e28d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>af76608042bc6e5195985942b1125dfab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>get</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a12745c9d1a40d95e750ecadf4e9973d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a89837360274b902fad68cc6e4b6712f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>af2040baeeeb9dd3c1a02f32756614a31</anchor>
      <arglist>(const optional&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a4073db3f98034124f611ee6e74ece2b1</anchor>
      <arglist>(optional&lt; T &gt; &amp;&amp;other) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a3360cfbae359ff262b9d0d67a28310e9</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a108bd81cb29b62c8491bbf38a71e7a6e</anchor>
      <arglist>(T &amp;&amp;value)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a0626f9ef46e439a1052b6118512f28e5</anchor>
      <arglist>(optional&lt; T &gt; &amp;left, optional&lt; T &gt; &amp;right) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a1c88f319d7fe85df7aac0cf7d40092d0</anchor>
      <arglist>(const optional&lt; T &gt; &amp;a, const optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>aa645275388919fcee4f5e1ee1e5b4601</anchor>
      <arglist>(const optional&lt; T &gt; &amp;a, const optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a59ee8c1f62498d5b72844ed1b664165d</anchor>
      <arglist>(const optional&lt; T &gt; &amp;optional_value, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>acc9b1a760c0036c3eb4479fda1b7a7f5</anchor>
      <arglist>(const T &amp;value, const optional&lt; T &gt; &amp;optional_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>ad8f39e9937cfaf80e75386da3fb54bad</anchor>
      <arglist>(const optional&lt; T &gt; &amp;optional_value, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>ab7617fa6908ee5abe3b2e58df63f0822</anchor>
      <arglist>(const T &amp;value, const optional&lt; T &gt; &amp;optional_value)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1core_1_1optional.html</anchorfile>
      <anchor>a666eead0a2fb833428940b73509c67ff</anchor>
      <arglist>(std::ostream &amp;out, const optional&lt; T &gt; &amp;optional)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::vector</name>
    <filename>classdds_1_1core_1_1vector.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a17cd3c637ebfa6961ebd0e784a5c2711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>ac979a300ab5a97e4a370eb2c0132787c</anchor>
      <arglist>(size_type initial_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a7777b8a095b74f2c2d86e19225c01173</anchor>
      <arglist>(size_type initial_size, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a3d8657c9d18368209e169de7c9774c58</anchor>
      <arglist>(const vector &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>abf0baea6b4dafd0a0b20a06b0f54b6a4</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a3f9b8de1cb73ca28c965009bb85500d1</anchor>
      <arglist>(vector &amp;&amp;other) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::vector&lt; T &gt;</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a1900f0573cc1ad9fe008603a1e103b93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a51dc112797f9dc6aba0cb5e7bfcec091</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a982e1d62d3b6bdbcfd78e1d5de134551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>aa27a4e28ffd9ee3eea9728e910d2785e</anchor>
      <arglist>(size_type new_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>af266bdf987fefe4c806d2e75d961a7fb</anchor>
      <arglist>(size_type new_size, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>af89f64c14fe83a996f93eadc0ce14192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a370c34a3029836cb73cd615c799abc36</anchor>
      <arglist>(size_type new_capacity)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a3b3163b34819f123c30eae0eb3b7b672</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a70c00ae173d8746713ab8474ac9f786e</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>ad7887eb045ee340a75c34a97269d789e</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>af2f1a1f088d782b4e2422aa150a16541</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a9eaf015db6691663ef9f1f47364a8d87</anchor>
      <arglist>(const vector &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>ac4a819c1723a23de0f65eb04c49004b3</anchor>
      <arglist>(vector &amp;&amp;other) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a902a7b75ec36c56e63e183533c4d3606</anchor>
      <arglist>(const vector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a06a724a5303e6c9a2e07b8d890ac256a</anchor>
      <arglist>(const vector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>aabafa7ca1abb471dc5c06e9162e7885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>ab626295ddb62f89d282b62e8722ec8d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>afdb374542c7e0c0a7485a07e29a07e25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>aed5db92afd3fcc7566ed0f3a2fb6bcf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>ac30f30cfdf6902470c82b69c2b0f4494</anchor>
      <arglist>(vector &amp;left, vector &amp;right) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1core_1_1vector.html</anchorfile>
      <anchor>a6c6d296852b109a47b0d85af42e95f7a</anchor>
      <arglist>(std::ostream &amp;out, const vector&lt; _Tp &gt; &amp;vector)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::core::cond</name>
    <filename>namespacedds_1_1core_1_1cond.html</filename>
    <class kind="class">dds::core::cond::Condition</class>
    <class kind="class">dds::core::cond::GuardCondition</class>
    <class kind="class">dds::core::cond::StatusCondition</class>
    <class kind="class">dds::core::cond::WaitSet</class>
  </compound>
  <compound kind="class">
    <name>dds::core::cond::Condition</name>
    <filename>classdds_1_1core_1_1cond_1_1Condition.html</filename>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>a951e1017981f4110068dbf801d8bb29e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trigger_value</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>adb43cddbf06e930d9e6b388847b11b2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::cond::GuardCondition</name>
    <filename>classdds_1_1core_1_1cond_1_1GuardCondition.html</filename>
    <base>dds::core::cond::Condition</base>
    <member kind="function">
      <type>void</type>
      <name>handler</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1GuardCondition.html</anchorfile>
      <anchor>ab646337e945492fe0054ccae3ad74151</anchor>
      <arglist>(const Functor &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_handler</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1GuardCondition.html</anchorfile>
      <anchor>a138ddcf1896e75a737b2f8ede0bb57b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trigger_value</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1GuardCondition.html</anchorfile>
      <anchor>a27b00d1c215eb67c17c27e0e959b5a3b</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>a951e1017981f4110068dbf801d8bb29e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trigger_value</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>adb43cddbf06e930d9e6b388847b11b2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::cond::StatusCondition</name>
    <filename>classdds_1_1core_1_1cond_1_1StatusCondition.html</filename>
    <base>dds::core::cond::Condition</base>
    <member kind="function">
      <type></type>
      <name>StatusCondition</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1StatusCondition.html</anchorfile>
      <anchor>a2f14808024a4199a422b313e05973327</anchor>
      <arglist>(const dds::core::Entity &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enabled_statuses</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1StatusCondition.html</anchorfile>
      <anchor>a02dc74b45de00aaa0a312444d7fe3ed7</anchor>
      <arglist>(const dds::core::status::StatusMask &amp;status)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>enabled_statuses</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1StatusCondition.html</anchorfile>
      <anchor>a7c3d46507066280675bb9b92a0a65323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::Entity</type>
      <name>entity</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1StatusCondition.html</anchorfile>
      <anchor>aed7910881422ec92becd94e10ff71567</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handler</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1StatusCondition.html</anchorfile>
      <anchor>a474734a73f1093b68186c229bddb150f</anchor>
      <arglist>(const Functor &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_handler</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1StatusCondition.html</anchorfile>
      <anchor>ab542c50816e6acdd773eda1f0249c3d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>a951e1017981f4110068dbf801d8bb29e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trigger_value</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>adb43cddbf06e930d9e6b388847b11b2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::cond::WaitSet</name>
    <filename>classdds_1_1core_1_1cond_1_1WaitSet.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; dds::core::cond::Condition &gt;</type>
      <name>ConditionSeq</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>acea647547546c8f0097085130a551819</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaitSet</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a53c4e7930bffd788b2f03c4ab3966fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaitSetImpl</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a4895e4c4edc9e4d985cdfe5a503ef486</anchor>
      <arglist>(const rti::core::cond::WaitSetProperty &amp;property)</arglist>
    </member>
    <member kind="function">
      <type>const ConditionSeq</type>
      <name>wait</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a87dbd1ec35286aea9c7b2cc39f2af452</anchor>
      <arglist>(const dds::core::Duration &amp;timeout)</arglist>
    </member>
    <member kind="function">
      <type>const ConditionSeq</type>
      <name>wait</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>aada4b712ea4023e1fc85e3f23b82be76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConditionSeq &amp;</type>
      <name>wait</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a31d822460851438c3173ba573f54e86e</anchor>
      <arglist>(ConditionSeq &amp;triggered, const dds::core::Duration &amp;timeout)</arglist>
    </member>
    <member kind="function">
      <type>ConditionSeq &amp;</type>
      <name>wait</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>af0035d6e7a974bc828f1b7626478135a</anchor>
      <arglist>(ConditionSeq &amp;triggered)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a3585ea21130dea5ea8f993a4d23ec5f1</anchor>
      <arglist>(const dds::core::Duration &amp;timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a20cb5a74eda3dedbf6b0e1a7cf274ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WaitSet &amp;</type>
      <name>operator+=</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>acce67ea4d0d84eb77511d6bb47c67120</anchor>
      <arglist>(dds::core::cond::Condition cond)</arglist>
    </member>
    <member kind="function">
      <type>WaitSet &amp;</type>
      <name>operator-=</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a57791ef4ef60f644a8efdc63c36cee43</anchor>
      <arglist>(dds::core::cond::Condition cond)</arglist>
    </member>
    <member kind="function">
      <type>WaitSet &amp;</type>
      <name>attach_condition</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>acd93c6ad7eb1da7f1f942b57e3388da6</anchor>
      <arglist>(dds::core::cond::Condition cond)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>detach_condition</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>ac88e8aa12083b83457bf1502e225c31c</anchor>
      <arglist>(dds::core::cond::Condition cond)</arglist>
    </member>
    <member kind="function">
      <type>ConditionSeq</type>
      <name>conditions</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>af7461f71e30d3955ad69abcaf515e016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConditionSeq &amp;</type>
      <name>conditions</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a65fd37e6874d6bf47f435513d35c7fd8</anchor>
      <arglist>(ConditionSeq &amp;conds) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach_all</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a7574dc1beafc13f950ad914528f82f82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::cond::WaitSetProperty</type>
      <name>property</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>a592aab7cdec24c4b725ffa8d1a5392f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>property</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1WaitSet.html</anchorfile>
      <anchor>acf28f615ab6781605b3cb1b65ec2a86a</anchor>
      <arglist>(const rti::core::cond::WaitSetProperty &amp;property)</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1cond_1_1WaitSet">WaitSet_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1cond_1_1WaitSet">WaitSet_trigger_status</docanchor>
    <docanchor file="classdds_1_1core_1_1cond_1_1WaitSet">WaitSet_trigger_read</docanchor>
    <docanchor file="classdds_1_1core_1_1cond_1_1WaitSet">WaitSet_trigger_guard</docanchor>
  </compound>
  <compound kind="namespace">
    <name>dds::core::policy</name>
    <filename>namespacedds_1_1core_1_1policy.html</filename>
    <class kind="struct">dds::core::policy::OwnershipKind_def</class>
    <class kind="struct">dds::core::policy::DurabilityKind_def</class>
    <class kind="struct">dds::core::policy::PresentationAccessScopeKind_def</class>
    <class kind="struct">dds::core::policy::ReliabilityKind_def</class>
    <class kind="struct">dds::core::policy::DestinationOrderKind_def</class>
    <class kind="struct">dds::core::policy::HistoryKind_def</class>
    <class kind="struct">dds::core::policy::LivelinessKind_def</class>
    <class kind="struct">dds::core::policy::TypeConsistencyEnforcementKind_def</class>
    <class kind="class">dds::core::policy::policy_id</class>
    <class kind="class">dds::core::policy::policy_name</class>
    <class kind="class">dds::core::policy::UserData</class>
    <class kind="class">dds::core::policy::Durability</class>
    <class kind="class">dds::core::policy::Presentation</class>
    <class kind="class">dds::core::policy::Deadline</class>
    <class kind="class">dds::core::policy::LatencyBudget</class>
    <class kind="class">dds::core::policy::Ownership</class>
    <class kind="class">dds::core::policy::OwnershipStrength</class>
    <class kind="class">dds::core::policy::Liveliness</class>
    <class kind="class">dds::core::policy::Partition</class>
    <class kind="class">dds::core::policy::GroupData</class>
    <class kind="class">dds::core::policy::TopicData</class>
    <class kind="class">dds::core::policy::EntityFactory</class>
    <class kind="class">dds::core::policy::TransportPriority</class>
    <class kind="class">dds::core::policy::Lifespan</class>
    <class kind="class">dds::core::policy::TimeBasedFilter</class>
    <class kind="class">dds::core::policy::WriterDataLifecycle</class>
    <class kind="class">dds::core::policy::ReaderDataLifecycle</class>
    <class kind="class">dds::core::policy::Reliability</class>
    <class kind="class">dds::core::policy::DestinationOrder</class>
    <class kind="class">dds::core::policy::History</class>
    <class kind="class">dds::core::policy::ResourceLimits</class>
    <class kind="class">dds::core::policy::DurabilityService</class>
    <class kind="class">dds::core::policy::TypeConsistencyEnforcement</class>
    <class kind="class">dds::core::policy::QosPolicyCount</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; OwnershipKind_def &gt;</type>
      <name>OwnershipKind</name>
      <anchorfile>group__DDSOwnershipQosModule.html</anchorfile>
      <anchor>ga6ac96cea5d7e658c9deb53bec20e2bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DurabilityKind_def &gt;</type>
      <name>DurabilityKind</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>ga690a317c9b364d53b080918dbb2a7692</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; PresentationAccessScopeKind_def &gt;</type>
      <name>PresentationAccessScopeKind</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>ga0b8fb0d73a4c4febd8ac4cead4d3bbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; ReliabilityKind_def &gt;</type>
      <name>ReliabilityKind</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>ga75ba21c1733424a2ae36074891404f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DestinationOrderKind_def &gt;</type>
      <name>DestinationOrderKind</name>
      <anchorfile>group__DDSDestinationOrderQosModule.html</anchorfile>
      <anchor>gaee7a3a35cff0dddc47144dd17d3d5e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; HistoryKind_def &gt;</type>
      <name>HistoryKind</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>ga2b3167c0e845a13b44f27de9edf297c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; LivelinessKind_def &gt;</type>
      <name>LivelinessKind</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>gae90530dc4d46f1216cce07dfb8dc2a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; TypeConsistencyEnforcementKind_def &gt;</type>
      <name>TypeConsistencyEnforcementKind</name>
      <anchorfile>group__DDSTypeConsistencyEnforcementQosModule.html</anchorfile>
      <anchor>gad143c25f236024f7241bbc44276d066e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; QosPolicyCount &gt;</type>
      <name>QosPolicyCountSeq</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gad94fd9b6d977e7aabc9f65e16330bd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>QosPolicyId</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>ga1287279d109305ad008e2bbbd30b5955</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::OwnershipKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1OwnershipKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1OwnershipKind__def.html</anchorfile>
      <anchor>ad6cdc6dce6648f36f8d30b3ecfb3384e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHARED</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1OwnershipKind__def.html</anchorfile>
      <anchor>ad6cdc6dce6648f36f8d30b3ecfb3384ea60cfc9130fa221b4ff59ec9014ccc252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXCLUSIVE</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1OwnershipKind__def.html</anchorfile>
      <anchor>ad6cdc6dce6648f36f8d30b3ecfb3384ead1f2876fcfb1cd1f428075ce6ffa762f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::DurabilityKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1DurabilityKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DurabilityKind__def.html</anchorfile>
      <anchor>af4111abcc2f492816efed0b02e9f284a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VOLATILE</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DurabilityKind__def.html</anchorfile>
      <anchor>af4111abcc2f492816efed0b02e9f284aa8145def0321fcd5f63e99cbb3535953a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSIENT_LOCAL</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DurabilityKind__def.html</anchorfile>
      <anchor>af4111abcc2f492816efed0b02e9f284aae0f383f8bae5a761dbca58b97d7b5204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSIENT</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DurabilityKind__def.html</anchorfile>
      <anchor>af4111abcc2f492816efed0b02e9f284aac8f071df20c51a14981347271bdbe20d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PERSISTENT</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DurabilityKind__def.html</anchorfile>
      <anchor>af4111abcc2f492816efed0b02e9f284aab8080712b99488ec7d763bf65e27c610</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::PresentationAccessScopeKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1PresentationAccessScopeKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1PresentationAccessScopeKind__def.html</anchorfile>
      <anchor>a615c3569016cb9c6702721ab2709edc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCE</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1PresentationAccessScopeKind__def.html</anchorfile>
      <anchor>a615c3569016cb9c6702721ab2709edc7a3185712eb1e4eec87ee308bce3d17ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOPIC</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1PresentationAccessScopeKind__def.html</anchorfile>
      <anchor>a615c3569016cb9c6702721ab2709edc7a7c68473b3ac44aa1dcc74f64a604e26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GROUP</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1PresentationAccessScopeKind__def.html</anchorfile>
      <anchor>a615c3569016cb9c6702721ab2709edc7acc3047f439e1da85244cd50ebd1629d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HIGHEST_OFFERED</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1PresentationAccessScopeKind__def.html</anchorfile>
      <anchor>a615c3569016cb9c6702721ab2709edc7a578530080745f017867fa9bc2548dd2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::ReliabilityKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1ReliabilityKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1ReliabilityKind__def.html</anchorfile>
      <anchor>a8a7bf26746c7fb7696922984be9eaf0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BEST_EFFORT</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1ReliabilityKind__def.html</anchorfile>
      <anchor>a8a7bf26746c7fb7696922984be9eaf0faaa96e60792d0dc477e5f05ecc46a41e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIABLE</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1ReliabilityKind__def.html</anchorfile>
      <anchor>a8a7bf26746c7fb7696922984be9eaf0fa594357ccecfa2cc31c33b70e28c9828e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::DestinationOrderKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1DestinationOrderKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DestinationOrderKind__def.html</anchorfile>
      <anchor>a900765ef1ac491084c5f1182c8ef939d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BY_RECEPTION_TIMESTAMP</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DestinationOrderKind__def.html</anchorfile>
      <anchor>a900765ef1ac491084c5f1182c8ef939da7931530c83557f02806ffeff76bc5388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BY_SOURCE_TIMESTAMP</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1DestinationOrderKind__def.html</anchorfile>
      <anchor>a900765ef1ac491084c5f1182c8ef939da9bea60f4dff650b0060afc63898ecf9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::HistoryKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1HistoryKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1HistoryKind__def.html</anchorfile>
      <anchor>a87f9ca15973768c41d4ae13911b69d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEEP_LAST</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1HistoryKind__def.html</anchorfile>
      <anchor>a87f9ca15973768c41d4ae13911b69d91aa9e87c4aa610f75d5d779f435524805b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEEP_ALL</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1HistoryKind__def.html</anchorfile>
      <anchor>a87f9ca15973768c41d4ae13911b69d91abb6f82697ae26fa0603f54d1835edc4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::LivelinessKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1LivelinessKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1LivelinessKind__def.html</anchorfile>
      <anchor>adc2ac1032803adc4576ef758efae434a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOMATIC</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1LivelinessKind__def.html</anchorfile>
      <anchor>adc2ac1032803adc4576ef758efae434aa17cb5d522dfebbad95434203b191fc57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MANUAL_BY_PARTICIPANT</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1LivelinessKind__def.html</anchorfile>
      <anchor>adc2ac1032803adc4576ef758efae434aa06f81ffbf04972733df1e4876261fa07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MANUAL_BY_TOPIC</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1LivelinessKind__def.html</anchorfile>
      <anchor>adc2ac1032803adc4576ef758efae434aa31300f68932894e6ca456c85c0bc9b79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::policy::TypeConsistencyEnforcementKind_def</name>
    <filename>structdds_1_1core_1_1policy_1_1TypeConsistencyEnforcementKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1TypeConsistencyEnforcementKind__def.html</anchorfile>
      <anchor>a11f071fb01c074a0762c179ea19bb314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISALLOW_TYPE_COERCION</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1TypeConsistencyEnforcementKind__def.html</anchorfile>
      <anchor>a11f071fb01c074a0762c179ea19bb314af92a66ae3bc3d0db004851fdfad13c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALLOW_TYPE_COERCION</name>
      <anchorfile>structdds_1_1core_1_1policy_1_1TypeConsistencyEnforcementKind__def.html</anchorfile>
      <anchor>a11f071fb01c074a0762c179ea19bb314a84b2bc835bc7c3e1d73f4fb4a1fd1082</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::policy_id</name>
    <filename>classdds_1_1core_1_1policy_1_1policy__id.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::policy_name</name>
    <filename>classdds_1_1core_1_1policy_1_1policy__name.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::UserData</name>
    <filename>classdds_1_1core_1_1policy_1_1UserData.html</filename>
    <member kind="function">
      <type></type>
      <name>UserData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>afb02ae68ff1d9294d1f94963d283f8ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>a5a5c208f4d805e11241db6ce14477516</anchor>
      <arglist>(const dds::core::ByteSeq &amp;seq)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>a7675d98cec7f11b889d0f3541ce39b84</anchor>
      <arglist>(const uint8_t *value_begin, const uint8_t *value_end)</arglist>
    </member>
    <member kind="function">
      <type>UserData &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>aefa999909b1532594c4898b70a6c59e0</anchor>
      <arglist>(OctetIter begin, OctetIter end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::ByteSeq</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>a60ba986b12f7b733c2d2e6c4cf512981</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::ByteSeq &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>afb1cd08845c115db110d38163c114dfc</anchor>
      <arglist>(dds::core::ByteSeq &amp;dest) const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>begin</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>a0abe88d050325dd689baf585316dfe11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>end</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1UserData.html</anchorfile>
      <anchor>abf89707e613175bc41ecdd52c3d31d46</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1UserData">DDSUserDataQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Durability</name>
    <filename>classdds_1_1core_1_1policy_1_1Durability.html</filename>
    <member kind="function">
      <type></type>
      <name>Durability</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>ad7eeba61cc082dcb659a4b49d74cd3d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Durability</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>ac900f5cb3829ff0f537509f07898ba5e</anchor>
      <arglist>(dds::core::policy::DurabilityKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>Durability &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>af63c52bf7aa4fa0f92f37bc8a37b96a8</anchor>
      <arglist>(dds::core::policy::DurabilityKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::DurabilityKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>afbbd7b024d6590426755de3b24c3f116</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::Durability &amp;</type>
      <name>direct_communication</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>a08035fdd983129f13125155c73a0b386</anchor>
      <arglist>(bool the_direct_communication)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>direct_communication</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>a1fb7e57f0ca3bc4d3d4ccccfc7964303</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Durability</type>
      <name>Volatile</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>ad6bb9dc6a5d3db22f4e65821aed53ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Durability</type>
      <name>TransientLocal</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>a3c100040656eec03e13edb8d1ea5da5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Durability</type>
      <name>Transient</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>a0a3a68a2a9d5274528ca634f531ddeaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Durability</type>
      <name>Persistent</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Durability.html</anchorfile>
      <anchor>a335e7daffa9bfee6b983bea5fad35ffd</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Durability">DDSDurabilityQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Durability">DDSDurabilityQosModule_usage_persistence</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Durability">DDSDurabilityQosModule_compatibility</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Presentation</name>
    <filename>classdds_1_1core_1_1policy_1_1Presentation.html</filename>
    <member kind="function">
      <type></type>
      <name>Presentation</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>ad643129293a091a6ef3e0e26628489c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Presentation</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a43a26141b98b0bd1013e1890b9787832</anchor>
      <arglist>(dds::core::policy::PresentationAccessScopeKind the_access_scope, bool the_coherent_access, bool the_ordered_access)</arglist>
    </member>
    <member kind="function">
      <type>Presentation &amp;</type>
      <name>access_scope</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a2ae91cee9c9a45bb1ea189d876aa8121</anchor>
      <arglist>(dds::core::policy::PresentationAccessScopeKind the_access_scope)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::PresentationAccessScopeKind</type>
      <name>access_scope</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a9856426bd2710159320123a883dafbbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Presentation &amp;</type>
      <name>coherent_access</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>ac8404ad3f34b20eaa26b2e88c7ded36d</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coherent_access</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a0776e94b3ea0cfabd070781e48bd7f13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Presentation &amp;</type>
      <name>ordered_access</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>acb0c2c5736e6fa722f871e3c68d39787</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ordered_access</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a626559362cb69ce35307a2078003c810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Presentation</type>
      <name>GroupAccessScope</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>ae7b921188ba102d9e59f8d1973a76d62</anchor>
      <arglist>(bool coherent, bool ordered)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Presentation</type>
      <name>InstanceAccessScope</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a2ef058ec795d60c815d3f9c2ef7f05f4</anchor>
      <arglist>(bool coherent, bool ordered)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Presentation</type>
      <name>TopicAccessScope</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Presentation.html</anchorfile>
      <anchor>a7748ebda267c699c3de2e6c57403a9ad</anchor>
      <arglist>(bool coherent, bool ordered)</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Presentation">DDSPresentationQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Presentation">DDSPresentationQosModule_compatibility</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Deadline</name>
    <filename>classdds_1_1core_1_1policy_1_1Deadline.html</filename>
    <member kind="function">
      <type></type>
      <name>Deadline</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Deadline.html</anchorfile>
      <anchor>ae4384d841c5a237760203a598f99fbd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Deadline</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Deadline.html</anchorfile>
      <anchor>a413617db734fd0e82c55654626ff2168</anchor>
      <arglist>(const dds::core::Duration &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>Deadline &amp;</type>
      <name>period</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Deadline.html</anchorfile>
      <anchor>a93522fb3edfc003ff4b7036a47e9fed1</anchor>
      <arglist>(const dds::core::Duration &amp;the_period)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::Duration</type>
      <name>period</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Deadline.html</anchorfile>
      <anchor>a23b24a638cdff10fb6ac8f4aa24df8a4</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Deadline">DDSDeadlineQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Deadline">DDSDeadlineQosModule_compatibility</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Deadline">DDSDeadlineQosModule_consistency</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::LatencyBudget</name>
    <filename>classdds_1_1core_1_1policy_1_1LatencyBudget.html</filename>
    <member kind="function">
      <type></type>
      <name>LatencyBudget</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1LatencyBudget.html</anchorfile>
      <anchor>ae189ea82f4b3cce1dd587881049891b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatencyBudget</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1LatencyBudget.html</anchorfile>
      <anchor>ab24da80b61a4174702ebb5118ce23e27</anchor>
      <arglist>(const dds::core::Duration &amp;the_duration)</arglist>
    </member>
    <member kind="function">
      <type>LatencyBudget &amp;</type>
      <name>duration</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1LatencyBudget.html</anchorfile>
      <anchor>a8711b643887c1385790e1ae6c36b4f60</anchor>
      <arglist>(const dds::core::Duration &amp;the_duration)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::Duration</type>
      <name>duration</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1LatencyBudget.html</anchorfile>
      <anchor>ae2475e3960ac19d040343f4048ac40f1</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1LatencyBudget">DDSLatencyBudgetQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1LatencyBudget">DDSLatencyBudgetQosModule_compatibility</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Ownership</name>
    <filename>classdds_1_1core_1_1policy_1_1Ownership.html</filename>
    <member kind="function">
      <type></type>
      <name>Ownership</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Ownership.html</anchorfile>
      <anchor>ac59485d36702e1893445c608c72eea0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ownership</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Ownership.html</anchorfile>
      <anchor>a28bb622ea6502e38f41ff46d6b231636</anchor>
      <arglist>(dds::core::policy::OwnershipKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>Ownership &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Ownership.html</anchorfile>
      <anchor>aeaf5a9e721a159f8b05298ba46a24eaa</anchor>
      <arglist>(dds::core::policy::OwnershipKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::OwnershipKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Ownership.html</anchorfile>
      <anchor>a73a6b16a9246a6ec481124fc6f61a938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ownership</type>
      <name>Exclusive</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Ownership.html</anchorfile>
      <anchor>a1d9ed1a4dc68d06c1704db12294b7de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ownership</type>
      <name>Shared</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Ownership.html</anchorfile>
      <anchor>aa114f2a0e46020a1ea27d09493f62d5e</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">DDSOwnershipQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">DDSOwnershipQosModule_usage_shared</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">DDSOwnershipQosModule_usage_exclusive</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">DDSOwnershipQosModule_compatibility</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">Registration_liveliness_ownership</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">Ownership_redundant_systems</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">Ownership_data_periodic_update</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">Ownership_data_not_periodic_update</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">Ownership_loss_connectivity_detection</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Ownership">Unregister_instance_and_dispose_difference</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::OwnershipStrength</name>
    <filename>classdds_1_1core_1_1policy_1_1OwnershipStrength.html</filename>
    <member kind="function">
      <type></type>
      <name>OwnershipStrength</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1OwnershipStrength.html</anchorfile>
      <anchor>ab1df35d2efb0ccbe1c0aaf75d4e5b765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OwnershipStrength</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1OwnershipStrength.html</anchorfile>
      <anchor>a6b67d8f351a1aeb4801cd1a13f570c83</anchor>
      <arglist>(int32_t strength)</arglist>
    </member>
    <member kind="function">
      <type>OwnershipStrength &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1OwnershipStrength.html</anchorfile>
      <anchor>a69484e5fde35f47b80372fadd6c271f3</anchor>
      <arglist>(int32_t strength)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1OwnershipStrength.html</anchorfile>
      <anchor>aa068db6bbac7791a64a8b913e3b15f03</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Liveliness</name>
    <filename>classdds_1_1core_1_1policy_1_1Liveliness.html</filename>
    <member kind="function">
      <type></type>
      <name>Liveliness</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>ac9a843e241b48090c88eb5386b1323ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Liveliness</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>aefd2d4ede3e807c4aa5e8aae7da2fc5f</anchor>
      <arglist>(dds::core::policy::LivelinessKind the_kind, const dds::core::Duration &amp;the_lease_duration)</arglist>
    </member>
    <member kind="function">
      <type>Liveliness &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>a1daa0ec1cdb1b698b46287d4e7aa4fa7</anchor>
      <arglist>(dds::core::policy::LivelinessKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::LivelinessKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>a7fd5e690715dd2ad8262742b1fd5b445</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Liveliness &amp;</type>
      <name>lease_duration</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>a951bb2d1f4655a54dfcbd6fdfdd88faa</anchor>
      <arglist>(const dds::core::Duration &amp;the_lease_duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>lease_duration</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>a4debdf88e259dc0a0d688b3ab5341c1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Liveliness</type>
      <name>Automatic</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>abae59868b77f500ed6467e95886cc9d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Liveliness</type>
      <name>ManualByParticipant</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>a86e10a0f80f8230755c7d858e4cb11ad</anchor>
      <arglist>(const dds::core::Duration &amp;lease=dds::core::Duration::infinite())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Liveliness</type>
      <name>ManualByTopic</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Liveliness.html</anchorfile>
      <anchor>af094135b4499eec6e8ca34d85e42f317</anchor>
      <arglist>(const dds::core::Duration &amp;lease=dds::core::Duration::infinite())</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Liveliness">DDSLivelinessQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Liveliness">DDSLivelinessQosModule_compatibility</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Partition</name>
    <filename>classdds_1_1core_1_1policy_1_1Partition.html</filename>
    <member kind="function">
      <type></type>
      <name>TPartition</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Partition.html</anchorfile>
      <anchor>a628aeb27de49063c21c8ac32ed1fe9f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TPartition</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Partition.html</anchorfile>
      <anchor>a2ffda10cd8c6e208e07258993e864beb</anchor>
      <arglist>(const std::string &amp;partition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TPartition</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Partition.html</anchorfile>
      <anchor>ae11ad1aee1b3f4c070954a92f12f074a</anchor>
      <arglist>(const dds::core::StringSeq &amp;partitions)</arglist>
    </member>
    <member kind="function">
      <type>TPartition &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Partition.html</anchorfile>
      <anchor>a2b7d5f1a5559888a413004d37ebe862d</anchor>
      <arglist>(const dds::core::StringSeq &amp;partitions)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::StringSeq</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Partition.html</anchorfile>
      <anchor>ab5645086fd9e1a00ea58382694e24e12</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Partition">DDSPartitionQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::GroupData</name>
    <filename>classdds_1_1core_1_1policy_1_1GroupData.html</filename>
    <member kind="function">
      <type></type>
      <name>GroupData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>af84096830ae8be28f7627346622e56b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GroupData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a10981985a59ac6503ec94dec25e90027</anchor>
      <arglist>(const dds::core::ByteSeq &amp;seq)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GroupData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a164daf30c11221a09e8701197502d729</anchor>
      <arglist>(const uint8_t *value_begin, const uint8_t *value_end)</arglist>
    </member>
    <member kind="function">
      <type>GroupData &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a6360198fd5fc6d54ae4a919e64c45908</anchor>
      <arglist>(OCTET_ITER begin, OCTET_ITER end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::ByteSeq</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a5d44be9fa5bcb5de81c730ce4128ca2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::ByteSeq &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a21caa350787b96b1dc7d1f99a955adcd</anchor>
      <arglist>(dds::core::ByteSeq &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>begin</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a005c10787a0047e2e83676dff2c150b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>end</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1GroupData.html</anchorfile>
      <anchor>a3bb32c8ad69e2a13443f0e2a68868624</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1GroupData">DDSGroupDataQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::TopicData</name>
    <filename>classdds_1_1core_1_1policy_1_1TopicData.html</filename>
    <member kind="function">
      <type></type>
      <name>TopicData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>a513e3371f3d06d45340ca8ed43789d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TopicData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>a67d544a715d833fa34e8f09f31646f22</anchor>
      <arglist>(const dds::core::ByteSeq &amp;seq)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TopicData</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>a8fc77e7c891edf6ddc7945a545bfb03f</anchor>
      <arglist>(const uint8_t *value_begin, const uint8_t *value_end)</arglist>
    </member>
    <member kind="function">
      <type>TopicData &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>ab6e5f1dea65d8cb11e6e77e289485779</anchor>
      <arglist>(OCTET_ITER begin, OCTET_ITER end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::ByteSeq</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>a5bf0ee87df54a7e275cf85cbcac9615f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::ByteSeq &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>a31660ab108181d7cc33f8fbf17eba7c2</anchor>
      <arglist>(dds::core::ByteSeq &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>begin</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>aca9d1d616b98ca185579f5dd7d52cbfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>end</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TopicData.html</anchorfile>
      <anchor>ab4c13b32b84378d846cdd80ef47c62fb</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1TopicData">DDSTopicDataQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::EntityFactory</name>
    <filename>classdds_1_1core_1_1policy_1_1EntityFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>TEntityFactory</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1EntityFactory.html</anchorfile>
      <anchor>a59eaffcf6f31a64232bc41dd877956fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEntityFactory</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1EntityFactory.html</anchorfile>
      <anchor>aac3131f1d17b2d53e45dbf4bdf825baf</anchor>
      <arglist>(bool the_auto_enable)</arglist>
    </member>
    <member kind="function">
      <type>TEntityFactory &amp;</type>
      <name>autoenable_created_entities</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1EntityFactory.html</anchorfile>
      <anchor>af8e202fb55449ac17977923a1beab0f5</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoenable_created_entities</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1EntityFactory.html</anchorfile>
      <anchor>afd91416d79ae6f5909309e1bb2f8889f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEntityFactory</type>
      <name>AutoEnable</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1EntityFactory.html</anchorfile>
      <anchor>a6fe1749a2a22e1b6c55d8292c2bbc250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEntityFactory</type>
      <name>ManuallyEnable</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1EntityFactory.html</anchorfile>
      <anchor>afda536d7d49e165f5afd1250e65182e7</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1EntityFactory">DDSEntityFactoryQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::TransportPriority</name>
    <filename>classdds_1_1core_1_1policy_1_1TransportPriority.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportPriority</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TransportPriority.html</anchorfile>
      <anchor>ab20ac175e864c2203b0827c7818d2807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportPriority</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TransportPriority.html</anchorfile>
      <anchor>af3fadbd719d2b5eb38e1282b4817d5fc</anchor>
      <arglist>(int32_t priority)</arglist>
    </member>
    <member kind="function">
      <type>TransportPriority &amp;</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TransportPriority.html</anchorfile>
      <anchor>a226ec0ed16d480dcbbca471fdbebac9a</anchor>
      <arglist>(int32_t priority)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TransportPriority.html</anchorfile>
      <anchor>a6edc28a707680d9d5b4f119137e34bbd</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1TransportPriority">DDSTransportPriorityQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Lifespan</name>
    <filename>classdds_1_1core_1_1policy_1_1Lifespan.html</filename>
    <member kind="function">
      <type></type>
      <name>Lifespan</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Lifespan.html</anchorfile>
      <anchor>ae1f7cb9ec10eb22255eece301d0934dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Lifespan</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Lifespan.html</anchorfile>
      <anchor>a93e4c26a18389336d7202a9252697cde</anchor>
      <arglist>(const dds::core::Duration &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>Lifespan &amp;</type>
      <name>duration</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Lifespan.html</anchorfile>
      <anchor>a73e1e6eaf5cb3dc30000ec23113ea610</anchor>
      <arglist>(const dds::core::Duration &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::Duration</type>
      <name>duration</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Lifespan.html</anchorfile>
      <anchor>a7bb5cf7e8bced3cade42da0b56edd2e6</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Lifespan">DDSLifespanQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::TimeBasedFilter</name>
    <filename>classdds_1_1core_1_1policy_1_1TimeBasedFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeBasedFilter</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TimeBasedFilter.html</anchorfile>
      <anchor>a891cbb292a5831b1ed1e0bf594694324</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeBasedFilter</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TimeBasedFilter.html</anchorfile>
      <anchor>a1649e53a6c0dd302904a72f44319750d</anchor>
      <arglist>(const dds::core::Duration &amp;the_min_separation)</arglist>
    </member>
    <member kind="function">
      <type>TimeBasedFilter &amp;</type>
      <name>minimum_separation</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TimeBasedFilter.html</anchorfile>
      <anchor>a5705dcfe6357e0b74033c74440487218</anchor>
      <arglist>(const dds::core::Duration &amp;min_separation)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::Duration</type>
      <name>minimum_separation</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TimeBasedFilter.html</anchorfile>
      <anchor>a4ab7f9a9f1f1471974ae1ec0f255e6c7</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1TimeBasedFilter">DDSTimeBasedFilterQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1TimeBasedFilter">DDSTimebasedFilterQosModule_consistency</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::WriterDataLifecycle</name>
    <filename>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</filename>
    <member kind="function">
      <type></type>
      <name>WriterDataLifecycle</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a0a568c5062cd396efce9089d91d2de93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WriterDataLifecycle</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>aa5392fdd1f9f96cbfcb7fb0d5c4a1f39</anchor>
      <arglist>(bool autodispose)</arglist>
    </member>
    <member kind="function">
      <type>WriterDataLifecycle &amp;</type>
      <name>autodispose_unregistered_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>aee1da77034691bf5db67677e39a4ed07</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autodispose_unregistered_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a0ab07a3607fd2aa6d799a2acd45e07f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::WriterDataLifecycle &amp;</type>
      <name>autopurge_unregistered_instances_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a3dadcd445e421cabe1451bfce1ccd7c3</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>autopurge_unregistered_instances_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a3ce0eff6f0d5c986ce0ff79fc7838246</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::WriterDataLifecycle &amp;</type>
      <name>autopurge_disposed_instances_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a136acf25fb624fe6cf28266433ffeaf0</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>autopurge_disposed_instances_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>ab9e2a652e194897caf1ae9bf9f8caae6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WriterDataLifecycle</type>
      <name>AutoDisposeUnregisteredInstances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a00f3646d1ca3519bab4452a85e4f2421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WriterDataLifecycle</type>
      <name>ManuallyDisposeUnregisteredInstances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1WriterDataLifecycle.html</anchorfile>
      <anchor>a83f19ff45afea8fd3db1bb7fc493340c</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1WriterDataLifecycle">DDSWriterDataLifecycleQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::ReaderDataLifecycle</name>
    <filename>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</filename>
    <member kind="function">
      <type></type>
      <name>ReaderDataLifecycle</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a0bf55009de27284c29a6249259ee01de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReaderDataLifecycle</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a5bf3f4ee02b0c626287243b4645d027b</anchor>
      <arglist>(const dds::core::Duration &amp;the_nowriter_delay, const dds::core::Duration &amp;the_disposed_samples_delay)</arglist>
    </member>
    <member kind="function">
      <type>ReaderDataLifecycle &amp;</type>
      <name>autopurge_nowriter_samples_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>ad8ad5de52366b7eeb000b3cbffe4d173</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>autopurge_nowriter_samples_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>ab7f390c1f06b40a5cb84fa9b452109a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReaderDataLifecycle &amp;</type>
      <name>autopurge_disposed_samples_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a8b1a161cee5f58a25e6f8033516b98cc</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>autopurge_disposed_samples_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a9d323857cde66394fcfabaec23925146</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::ReaderDataLifecycle &amp;</type>
      <name>autopurge_disposed_instances_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a924223d6f76ce1360e838d8b86786076</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>autopurge_disposed_instances_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>ab9e2a652e194897caf1ae9bf9f8caae6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ReaderDataLifecycle</type>
      <name>NoAutoPurge</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a2491937f78a93fca52a4c27cfad7376f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ReaderDataLifecycle</type>
      <name>AutoPurgeDisposedSamples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>a6c22be4171d97c0b808c45b9861c2b13</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ReaderDataLifecycle</type>
      <name>AutoPurgeNoWriterSamples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ReaderDataLifecycle.html</anchorfile>
      <anchor>ad94c41c8b3ed2d53c2bebb7cd3e16905</anchor>
      <arglist>(const dds::core::Duration &amp;d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::Reliability</name>
    <filename>classdds_1_1core_1_1policy_1_1Reliability.html</filename>
    <member kind="function">
      <type></type>
      <name>Reliability</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>ab72a36a0c4c82a6eb7dfabed0692bff8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reliability</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>a705989e381e9ebb71afcb850b2249984</anchor>
      <arglist>(dds::core::policy::ReliabilityKind the_kind, const dds::core::Duration &amp;the_max_blocking_time=dds::core::Duration::from_millisecs(100))</arglist>
    </member>
    <member kind="function">
      <type>Reliability &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>aad2a6a97db448a38b6a2a68d6f3864a0</anchor>
      <arglist>(dds::core::policy::ReliabilityKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::ReliabilityKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>a956016d5c43285990c91a1d441c9b711</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Reliability &amp;</type>
      <name>max_blocking_time</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>a95793965d894fcf0242ea9215c14297e</anchor>
      <arglist>(const dds::core::Duration &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_blocking_time</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>a77c518bba37f6cc850461ffc8f529de5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::Reliability &amp;</type>
      <name>acknowledgment_kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>a46c2fb8e6dd658849923a45f7ba6fd10</anchor>
      <arglist>(rti::core::policy::AcknowledgmentKind ack_kind)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::policy::AcknowledgmentKind</type>
      <name>acknowledgment_kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>a8a4fa69e87e0b4db4283461a92742195</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Reliability</type>
      <name>Reliable</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>aa68882d7648a4a3241ccc57ce15ef4ea</anchor>
      <arglist>(const dds::core::Duration &amp;max_blocking_time=dds::core::Duration::from_millisecs(100))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Reliability</type>
      <name>BestEffort</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1Reliability.html</anchorfile>
      <anchor>ac5247f987bc3d1c2fab110964490449a</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1Reliability">DDSReliabilityQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1Reliability">DDSReliabilityQosModule_compatibility</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::DestinationOrder</name>
    <filename>classdds_1_1core_1_1policy_1_1DestinationOrder.html</filename>
    <member kind="function">
      <type></type>
      <name>DestinationOrder</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>a6f8f826b08baf6269ebd07113e4782e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DestinationOrder</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>a8e3e2fa55d2ace06e51872921732df51</anchor>
      <arglist>(dds::core::policy::DestinationOrderKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>DestinationOrder &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>a3b25710371b9f7800ad2698ff72d3ac9</anchor>
      <arglist>(dds::core::policy::DestinationOrderKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::DestinationOrderKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>afec7233a1d29f919b2b223c1577c2740</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::DestinationOrder &amp;</type>
      <name>source_timestamp_tolerance</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>a2a2a258e8bb269feeacb98ba6494c51b</anchor>
      <arglist>(const dds::core::Duration &amp;ms)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>source_timestamp_tolerance</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>a444b38bcb83e2a9c3f94de2e1d7f4874</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DestinationOrder</type>
      <name>SourceTimestamp</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>adb22810b7dbc77d85105755da529f0bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DestinationOrder</type>
      <name>ReceptionTimestamp</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DestinationOrder.html</anchorfile>
      <anchor>a99cfa1bbb2abc1697c6aed074a92fad8</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1DestinationOrder">DDSDestinationOrderQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1DestinationOrder">DDSDestinationOrderQosModule_compatibility</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::History</name>
    <filename>classdds_1_1core_1_1policy_1_1History.html</filename>
    <member kind="function">
      <type></type>
      <name>History</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>a7f6225aa54717aac5d4763dd4ac17d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>History</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>ad1b028de7fb9266429ee7dcc13069946</anchor>
      <arglist>(dds::core::policy::HistoryKind the_kind, int32_t the_depth=1)</arglist>
    </member>
    <member kind="function">
      <type>History &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>a3a2c6b05550b23bdd5760b8dd4818856</anchor>
      <arglist>(dds::core::policy::HistoryKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::HistoryKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>a016b213930718c264107147299c49dfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>depth</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>a281de67132ad488f6c4a9ce461932a40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>History &amp;</type>
      <name>depth</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>a391e07b004aa4bdfa87621a4ff73d945</anchor>
      <arglist>(int32_t the_depth)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::History &amp;</type>
      <name>refilter</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>a1683bd8cd7a487dd18022e1711fac702</anchor>
      <arglist>(rti::core::policy::RefilterKind refilter_kind)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::policy::RefilterKind</type>
      <name>refilter</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>aaef18747b92bbedc5d054245c094ee15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static History</type>
      <name>KeepAll</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>abbb117f178a30e6753ba7e36998a471a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static History</type>
      <name>KeepLast</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1History.html</anchorfile>
      <anchor>ac72f475969d5984cba75ab76bc3cf72d</anchor>
      <arglist>(uint32_t depth)</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1History">DDSHistoryQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1History">DDSHistoryQosModule_consistency</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::ResourceLimits</name>
    <filename>classdds_1_1core_1_1policy_1_1ResourceLimits.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceLimits</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>acc0950cc3a4d7eb388b55a719f5a9d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourceLimits</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a0f085f2ded2efbd672aab3ee2216a686</anchor>
      <arglist>(int32_t the_max_samples, int32_t the_max_instances, int32_t the_max_samples_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLimits &amp;</type>
      <name>max_samples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>aae52ffb5c5774ef44b6196a323cdcd70</anchor>
      <arglist>(int32_t the_max_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>abf7edd92840c6208852200cb8ee28bc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResourceLimits &amp;</type>
      <name>max_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>ac6e46e8c89931e992e4dccc6f79fa52c</anchor>
      <arglist>(int32_t the_max_instances)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>abf64f0d4eefaf32e619be02d2b174667</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResourceLimits &amp;</type>
      <name>max_samples_per_instance</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a9040523b965816bd7dc6a03a99dc2d59</anchor>
      <arglist>(int32_t the_max_samples_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples_per_instance</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a4b39053c893eac8310caf3c5b20951ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::ResourceLimits &amp;</type>
      <name>initial_samples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a65e6e2fe1a5785be904d600c42679f1f</anchor>
      <arglist>(int32_t the_initial_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_samples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>aafd77b0450e4f8d4a0ab33c103b94a40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::ResourceLimits &amp;</type>
      <name>initial_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a869d7c259bb1e4152250a5d6beceecb2</anchor>
      <arglist>(int32_t the_initial_instances)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a3fb47c69d9d2a8cd700e2cf82d0ced0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::ResourceLimits &amp;</type>
      <name>instance_hash_buckets</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a3a863c7e0835cded8c3f6fab8f4629e6</anchor>
      <arglist>(int32_t the_instance_hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>instance_hash_buckets</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1ResourceLimits.html</anchorfile>
      <anchor>a869230b3b518ad8589456773688ca6fe</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1ResourceLimits">DDSResourceLimitsQosModule_usage</docanchor>
    <docanchor file="classdds_1_1core_1_1policy_1_1ResourceLimits">DDSResourceLimitsQosModule_consistency</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::DurabilityService</name>
    <filename>classdds_1_1core_1_1policy_1_1DurabilityService.html</filename>
    <member kind="function">
      <type></type>
      <name>DurabilityService</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a9f3a7587f6c8e903214618ccf560acf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DurabilityService</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>ac0a22bcad00c6e204fd83e0ab76514a8</anchor>
      <arglist>(const dds::core::Duration &amp;the_service_cleanup_delay, dds::core::policy::HistoryKind the_history_kind, int32_t the_history_depth, int32_t the_max_samples, int32_t the_max_instances, int32_t the_max_samples_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>DurabilityService &amp;</type>
      <name>service_cleanup_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a2481735f1093c45113f4b0618e23532f</anchor>
      <arglist>(const dds::core::Duration &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>service_cleanup_delay</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a927708c25da3c72ae95a4f25cfa3ef21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DurabilityService &amp;</type>
      <name>history_kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a0dfb0e31d3d03cc0d9846f5ab7465eda</anchor>
      <arglist>(dds::core::policy::HistoryKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::HistoryKind</type>
      <name>history_kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a4b7b7e31a326e81cedc4667f0fe885d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DurabilityService &amp;</type>
      <name>history_depth</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>ab75e59e554533f8bea727dc076af8404</anchor>
      <arglist>(int32_t the_depth)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>history_depth</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>ad8d022a007b8b6fe4ae3b7ed5cc741ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DurabilityService &amp;</type>
      <name>max_samples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a11e5c8bb1668cf1bcd49d829a82c329d</anchor>
      <arglist>(int32_t the_max_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a5c9d5fc425dde57e3871ceb70235e125</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DurabilityService &amp;</type>
      <name>max_instances</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>aa09a246c0b8f8439c595e97b3afc7f5e</anchor>
      <arglist>(int32_t the_max_instances)</arglist>
    </member>
    <member kind="function">
      <type>DurabilityService &amp;</type>
      <name>max_samples_per_instance</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>a94230d490dfe11a4407b0b1390ffb8c7</anchor>
      <arglist>(int32_t the_max_samples_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples_per_instance</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1DurabilityService.html</anchorfile>
      <anchor>ae7d2ec1b5ddb126e56140036df14fbda</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1policy_1_1DurabilityService">DDSDurabilityServiceQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::TypeConsistencyEnforcement</name>
    <filename>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeConsistencyEnforcement</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</anchorfile>
      <anchor>ac2cf6bf92e36f95f1d5bc4cf49b67ea8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeConsistencyEnforcement</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</anchorfile>
      <anchor>a79ab658e2b7288f01091bcd2204cd5c4</anchor>
      <arglist>(dds::core::policy::TypeConsistencyEnforcementKind kind)</arglist>
    </member>
    <member kind="function">
      <type>TypeConsistencyEnforcement &amp;</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</anchorfile>
      <anchor>ae9752ea470b3718d1e0ad87a268677a6</anchor>
      <arglist>(dds::core::policy::TypeConsistencyEnforcementKind value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::TypeConsistencyEnforcementKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</anchorfile>
      <anchor>a82ed094faf6df56e52cd0905c7f1ee38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeConsistencyEnforcement</type>
      <name>AllowTypeCoercion</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</anchorfile>
      <anchor>a3524073becda41563ae49c0d0ba9c7f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeConsistencyEnforcement</type>
      <name>DisallowTypeCoercion</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1TypeConsistencyEnforcement.html</anchorfile>
      <anchor>ad6053a333693d89da0adbe502a3e2dc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::policy::QosPolicyCount</name>
    <filename>classdds_1_1core_1_1policy_1_1QosPolicyCount.html</filename>
    <member kind="function">
      <type></type>
      <name>QosPolicyCount</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1QosPolicyCount.html</anchorfile>
      <anchor>ae01b655eadd88504b094464ee5728217</anchor>
      <arglist>(QosPolicyId policy_id, int32_t count)</arglist>
    </member>
    <member kind="function">
      <type>QosPolicyId</type>
      <name>policy_id</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1QosPolicyCount.html</anchorfile>
      <anchor>a37564388e731ef703825f820819b06f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>count</name>
      <anchorfile>classdds_1_1core_1_1policy_1_1QosPolicyCount.html</anchorfile>
      <anchor>a6ad8e22c18d3225a8b4f21543979f584</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::core::status</name>
    <filename>namespacedds_1_1core_1_1status.html</filename>
    <class kind="class">dds::core::status::SampleRejectedState</class>
    <class kind="class">dds::core::status::StatusMask</class>
    <class kind="class">dds::core::status::InconsistentTopicStatus</class>
    <class kind="class">dds::core::status::SampleLostStatus</class>
    <class kind="class">dds::core::status::SampleRejectedStatus</class>
    <class kind="class">dds::core::status::LivelinessLostStatus</class>
    <class kind="class">dds::core::status::LivelinessChangedStatus</class>
    <class kind="class">dds::core::status::OfferedDeadlineMissedStatus</class>
    <class kind="class">dds::core::status::RequestedDeadlineMissedStatus</class>
    <class kind="class">dds::core::status::OfferedIncompatibleQosStatus</class>
    <class kind="class">dds::core::status::RequestedIncompatibleQosStatus</class>
    <class kind="class">dds::core::status::PublicationMatchedStatus</class>
    <class kind="class">dds::core::status::SubscriptionMatchedStatus</class>
    <member kind="function">
      <type>StatusMask</type>
      <name>get_status</name>
      <anchorfile>namespacedds_1_1core_1_1status.html</anchorfile>
      <anchor>a71e44a652febc680d41a32d99cda5bff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::SampleRejectedState</name>
    <filename>classdds_1_1core_1_1status_1_1SampleRejectedState.html</filename>
    <member kind="function">
      <type></type>
      <name>SampleRejectedState</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a7a5cd14174e52058a6ec94646ed89556</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleRejectedState</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a594fd1be06793dbcc17ce6c9e9c5032a</anchor>
      <arglist>(const MaskType &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>not_rejected</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a6deae04f6dff28756413092f07a6df69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_samples_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a7570124de5d3ce798e6d3b25286d322c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_instances_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a88b4bb48bf9eaddfe4307f7897d60ec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_samples_per_instance_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a7fbc09eb1741a03fca4bf7e21e7a6354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_remote_writers_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a9a16076339248613cccf1c4cb26688fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_remote_writers_per_instance_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a9251990d1d98677c95e61dffc20a56cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_samples_per_remote_writer_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a0df8ecb781c3d0d082307d14d5fb7ba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_virtual_writers_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a0182bcdcdfa0d73403769aece72b5139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_remote_writers_per_sample_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a32dc703d3b96420bc8afc0d3616606ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleRejectedState</type>
      <name>rejected_by_remote_writers_per_virtual_queue_limit</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedState.html</anchorfile>
      <anchor>a86cf6b8786be1baabdab56857b229e4f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::StatusMask</name>
    <filename>classdds_1_1core_1_1status_1_1StatusMask.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; OMG_DDS_STATUS_COUNT &gt;</type>
      <name>MaskType</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>acd399e0bcb7975a4f045d072f4528d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusMask</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a2dd5f19da39b3fd9f3a0c2cdb92fc48a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusMask</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>aa0617c1d2b389d295d5237149c606dbe</anchor>
      <arglist>(uint64_t mask)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusMask</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>ad4142796d42d907437984aab921851df</anchor>
      <arglist>(const MaskType &amp;mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>all</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a2d5d96c01cceb09a14ff466f43be8173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>none</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a95ea77cba1230de1b4349c888a0e0ff6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>inconsistent_topic</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a79fd8d7707a83b915196251598906813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>offered_deadline_missed</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>af629d581ffaaf0925f917bd7a1a9ccad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>requested_deadline_missed</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a45b3149ad9fce5693cb6b2c338a1a9e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>offered_incompatible_qos</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a01b6206951c1c10a1aebd35f2d3b2256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>requested_incompatible_qos</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>ad6023151aad1b69c18bd05f9b16efe8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>sample_lost</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a364150c79c3d9a3d1a602ad4467a246d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>sample_rejected</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>aa7251d1ddcd3b612887ed7ed8d038bdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>data_on_readers</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>af285309f34d72170be8c2815524ac9e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>data_available</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a3cbd7a1e61f3d20578f22a49de68f78e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>liveliness_lost</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>adc4c49c117c28eebb2c33bd0fdfe14c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>liveliness_changed</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a493eee23d95003104e802ef5a1ea4b61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>publication_matched</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a1849073f6348de60bddf95cac5f04e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>subscription_matched</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a2b4ca468aef054c79854ae4be104ffa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>reliable_writer_cache_changed</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a464708be5f7f75ee263aa6b815626ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>reliable_reader_activity_changed</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>ac8e9fee35e21e8da5a4c5d1bbdb7b8b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>datawriter_cache</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a1401176d8453f5b96d575dbf18a794a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>datawriter_protocol</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a760b89d07873cd7b7f4e6f9a7c478489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>datareader_cache</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a04f2a9b0f85ef31909f54ba676d1afe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>datareader_protocol</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>aaf6a947e3b914e608357d1cb5f91cc17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>datawriter_application_acknowledgment</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>a1da10c19f8d9712a92debf418b82c32c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const StatusMask</type>
      <name>datawriter_instance_replaced</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>af0c98378aae83641240088df22a3f5a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StatusMask</type>
      <name>get_status</name>
      <anchorfile>classdds_1_1core_1_1status_1_1StatusMask.html</anchorfile>
      <anchor>abd89d9d8f4f04fa2acf9f6036ff84a65</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::InconsistentTopicStatus</name>
    <filename>classdds_1_1core_1_1status_1_1InconsistentTopicStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1InconsistentTopicStatus.html</anchorfile>
      <anchor>ad85dbf2e96abb3cfcbca1ea3451dc2c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1InconsistentTopicStatus.html</anchorfile>
      <anchor>a1e1577597155206d49041d444afb2987</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::SampleLostStatus</name>
    <filename>classdds_1_1core_1_1status_1_1SampleLostStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleLostStatus.html</anchorfile>
      <anchor>a2603c11deb3eea24305a028343700331</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleLostStatus.html</anchorfile>
      <anchor>a08c7e46c64c68664a428934607f325b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::SampleLostState</type>
      <name>last_reason</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleLostStatus.html</anchorfile>
      <anchor>ae728de2cb9949284e3ca5f00022192a2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::SampleRejectedStatus</name>
    <filename>classdds_1_1core_1_1status_1_1SampleRejectedStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedStatus.html</anchorfile>
      <anchor>a61a23a0eb7085538718ed4c11f302f3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedStatus.html</anchorfile>
      <anchor>a50f5840648a0e9dce564bbe05ca467ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::SampleRejectedState</type>
      <name>last_reason</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedStatus.html</anchorfile>
      <anchor>a6a1f913a9d15b7f11c796c10c1a9ab93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>last_instance_handle</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SampleRejectedStatus.html</anchorfile>
      <anchor>a83be2857a7683c950f92655cfdfab069</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::LivelinessLostStatus</name>
    <filename>classdds_1_1core_1_1status_1_1LivelinessLostStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessLostStatus.html</anchorfile>
      <anchor>ae7c69adb62fe6c32ce24a17fbe9b9938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessLostStatus.html</anchorfile>
      <anchor>afa26d4c32089975ad9a647bac37e76e2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::LivelinessChangedStatus</name>
    <filename>classdds_1_1core_1_1status_1_1LivelinessChangedStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>alive_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessChangedStatus.html</anchorfile>
      <anchor>ace536747d0c6d141481376e6da263466</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>not_alive_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessChangedStatus.html</anchorfile>
      <anchor>ad9b2149dbace57283bb07e67296aef8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>alive_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessChangedStatus.html</anchorfile>
      <anchor>a6304c63fec1627eb885366aac3566587</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>not_alive_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessChangedStatus.html</anchorfile>
      <anchor>ade076013045018c3ae106790139a56bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>last_publication_handle</name>
      <anchorfile>classdds_1_1core_1_1status_1_1LivelinessChangedStatus.html</anchorfile>
      <anchor>a4935d91f945ab19a3305ed5eda377c28</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::OfferedDeadlineMissedStatus</name>
    <filename>classdds_1_1core_1_1status_1_1OfferedDeadlineMissedStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedDeadlineMissedStatus.html</anchorfile>
      <anchor>af1b62e2875df850da940e26b417c3535</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedDeadlineMissedStatus.html</anchorfile>
      <anchor>aca8d4d0b4b5ae4c0705863c9b139238f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>last_instance_handle</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedDeadlineMissedStatus.html</anchorfile>
      <anchor>a27331345904ab1073c692c3a77476dd1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::RequestedDeadlineMissedStatus</name>
    <filename>classdds_1_1core_1_1status_1_1RequestedDeadlineMissedStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedDeadlineMissedStatus.html</anchorfile>
      <anchor>a5286e2c22e80c17f0a34f1c25ece266c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedDeadlineMissedStatus.html</anchorfile>
      <anchor>a24d651887ab32342e3dff66b2fe45076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>last_instance_handle</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedDeadlineMissedStatus.html</anchorfile>
      <anchor>ab45a0f7dbeeef8cfd9dc021fcb816b56</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::OfferedIncompatibleQosStatus</name>
    <filename>classdds_1_1core_1_1status_1_1OfferedIncompatibleQosStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>a0a409d4b160acabd93268c2f8d43a03b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>ad8af4ee02860bc17424d824baec88e4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::QosPolicyId</type>
      <name>last_policy_id</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>ac5ae2baeeef0f93b9cd5dd2f71ca91d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::QosPolicyCountSeq</type>
      <name>policies</name>
      <anchorfile>classdds_1_1core_1_1status_1_1OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>a3b5deb599c89900bbb8200dba064efbb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::RequestedIncompatibleQosStatus</name>
    <filename>classdds_1_1core_1_1status_1_1RequestedIncompatibleQosStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>af6c99458abb994090feb0a3bc000310c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>a9ebda4f4535040f6ba66cc7f2d80860f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::QosPolicyId</type>
      <name>last_policy_id</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>ab757d01e3cbeb0dd91cc310a836b4602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::QosPolicyCountSeq</type>
      <name>policies</name>
      <anchorfile>classdds_1_1core_1_1status_1_1RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>adaa88b19c8c730bc91ec9455f245eba4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::PublicationMatchedStatus</name>
    <filename>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</anchorfile>
      <anchor>a401e845e44241f275195c91946479ee0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</anchorfile>
      <anchor>a63fba0f2fdd2a19fa790b7e82f181d55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>current_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</anchorfile>
      <anchor>a7d432f23b520817c1a5528322710351e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>current_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</anchorfile>
      <anchor>a1b75417f46c82e720169111b238c95f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>last_subscription_handle</name>
      <anchorfile>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</anchorfile>
      <anchor>af9bb5567357ebe2fc1e87c23ce24e403</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>current_count_peak</name>
      <anchorfile>classdds_1_1core_1_1status_1_1PublicationMatchedStatus.html</anchorfile>
      <anchor>a7fece4403aabe3ad8917e2e058da8407</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::status::SubscriptionMatchedStatus</name>
    <filename>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a1574114f210159f920d4e01c3d19c7da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>total_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a2d5b7d83083f22a9b68d24b3f26b1f62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>current_count</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a75118f159404985a8957356b2900c328</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>current_count_change</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a9f5a5a38046969b7e1a5d18d57b8e785</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>last_publication_handle</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</anchorfile>
      <anchor>aba0d845710edaddb295e647f31f3bb56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>current_count_peak</name>
      <anchorfile>classdds_1_1core_1_1status_1_1SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a7fece4403aabe3ad8917e2e058da8407</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::core::xtypes</name>
    <filename>namespacedds_1_1core_1_1xtypes.html</filename>
    <class kind="struct">dds::core::xtypes::ExtensibilityKind_def</class>
    <class kind="struct">dds::core::xtypes::TypeKind_def</class>
    <class kind="class">dds::core::xtypes::AliasType</class>
    <class kind="class">dds::core::xtypes::CollectionType</class>
    <class kind="class">dds::core::xtypes::UnidimensionalCollectionType</class>
    <class kind="class">dds::core::xtypes::SequenceType</class>
    <class kind="class">dds::core::xtypes::StringType</class>
    <class kind="class">dds::core::xtypes::WStringType</class>
    <class kind="class">dds::core::xtypes::ArrayType</class>
    <class kind="class">dds::core::xtypes::DynamicData</class>
    <class kind="class">dds::core::xtypes::DynamicType</class>
    <class kind="class">dds::core::xtypes::AbstractConstructedType</class>
    <class kind="class">dds::core::xtypes::EnumType</class>
    <class kind="class">dds::core::xtypes::Member</class>
    <class kind="class">dds::core::xtypes::UnionMember</class>
    <class kind="class">dds::core::xtypes::EnumMember</class>
    <class kind="class">dds::core::xtypes::PrimitiveType</class>
    <class kind="class">dds::core::xtypes::StructType</class>
    <class kind="class">dds::core::xtypes::UnionType</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; ExtensibilityKind_def &gt;</type>
      <name>ExtensibilityKind</name>
      <anchorfile>namespacedds_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a787cf2801ae1a6f3d99a90d6880c5e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; TypeKind_def &gt;</type>
      <name>TypeKind</name>
      <anchorfile>group__DDSXTypesModule.html</anchorfile>
      <anchor>gad03741c8b8380d1b7734e75797773f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>namespacedds_1_1core_1_1xtypes.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>namespacedds_1_1core_1_1xtypes.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>namespacedds_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>namespacedds_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>const PrimitiveType&lt; T &gt; &amp;</type>
      <name>primitive_type</name>
      <anchorfile>namespacedds_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a8c8ee2788db215b71ab7860e66610869</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::xtypes::ExtensibilityKind_def</name>
    <filename>structdds_1_1core_1_1xtypes_1_1ExtensibilityKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1ExtensibilityKind__def.html</anchorfile>
      <anchor>afa322c5d5f6bf422e16cbb5cb3223c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1ExtensibilityKind__def.html</anchorfile>
      <anchor>afa322c5d5f6bf422e16cbb5cb3223c18a71429f8a914ae8aec5c98a3cf887fb1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENSIBLE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1ExtensibilityKind__def.html</anchorfile>
      <anchor>afa322c5d5f6bf422e16cbb5cb3223c18a8a71694952fcb889667c03ada196ff77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUTABLE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1ExtensibilityKind__def.html</anchorfile>
      <anchor>afa322c5d5f6bf422e16cbb5cb3223c18afe304dfafbaa664f69cf603765ca53db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::core::xtypes::TypeKind_def</name>
    <filename>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIMITIVE_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48adf2f2d171a75fe5f32844a464226f761</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTRUCTED_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a2affb295d8f9761ce2979c956e5af641</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLLECTION_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a310fb120f24ac7f4bfc7311f6f47ec3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGREGATION_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48aec432ea2de42524af890390967fa2733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48ac9dffa09c01aa06177c4f5a9135e6679</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT_8_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a52cd9df60ac05bb798ec9958a9891715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_16_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a44902b1c7dacee1064466cb9530ba244</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT_16_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48aa9ea61ebe6154b44947388d701aab488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_32_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a1593bbc38281d78a7381c6fab3e1154f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT_32_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48af445194a6bdc74439bbd9e00b5d67371</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_64_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a279d1cacbe676db861a42a0fde9cf49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UINT_64_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48ad97b33ddd04c596eaf43e49c398aebda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT_32_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48af981f29a4f4956aabef779b82bf08307</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT_64_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48ac7986844727edce37b8b14f4ea9d1434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOAT_128_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a40c271fac182886c5f8fe771598c04e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAR_8_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48ac0149034307c9d519b357397148ab084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENUMERATION_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a00b5d106324c48e5166488667d23d4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIAS_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48ab514d24f30a4783a266a7424b1b3c904</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a313128e11def3ae923a1f2aadeec37a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEQUENCE_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a77757c3a92601f90b33d212fac2b99dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a58d24cf3481dfda24d3cacbad2675520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WSTRING_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a31a830a6ec515da3a9dddafc56c80396</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNION_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48ad0e7450d4e49d99d62da5a652622b222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_TYPE</name>
      <anchorfile>structdds_1_1core_1_1xtypes_1_1TypeKind__def.html</anchorfile>
      <anchor>a04fe7b4fccd994e7433f9d82ded4ac48a00b167910ea78c4b6ce32c1937d3130e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::AliasType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1AliasType.html</filename>
    <base>dds::core::xtypes::DynamicType</base>
    <member kind="function">
      <type></type>
      <name>AliasType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AliasType.html</anchorfile>
      <anchor>a3cf2b884c2bba2624a1f1bbf28568560</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;related_type, bool is_pointer=false)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>related_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AliasType.html</anchorfile>
      <anchor>ab4eca0305121be651b6bc818d75c2d2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pointer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AliasType.html</anchorfile>
      <anchor>a0d9dd05c9a49f0c241a754207e40aea3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>resolve_alias</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AliasType.html</anchorfile>
      <anchor>a8ff9825c5b9d7c863f95ac4b60b5f765</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::CollectionType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1CollectionType.html</filename>
    <base>dds::core::xtypes::DynamicType</base>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>content_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1CollectionType.html</anchorfile>
      <anchor>ae371c8db37de676da03fa36cdd6db3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::UnidimensionalCollectionType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1UnidimensionalCollectionType.html</filename>
    <base>dds::core::xtypes::CollectionType</base>
    <member kind="function">
      <type>uint32_t</type>
      <name>bounds</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnidimensionalCollectionType.html</anchorfile>
      <anchor>ae02142b9ac38e6eb3fd3df843d0953a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>content_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1CollectionType.html</anchorfile>
      <anchor>ae371c8db37de676da03fa36cdd6db3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::SequenceType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1SequenceType.html</filename>
    <base>dds::core::xtypes::UnidimensionalCollectionType</base>
    <member kind="function">
      <type></type>
      <name>SequenceType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1SequenceType.html</anchorfile>
      <anchor>aada040c62d4df3301bad645af4e8584a</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SequenceType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1SequenceType.html</anchorfile>
      <anchor>a6cf5235bc366bd13d0b0bdd15fd8398e</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type, uint32_t bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SequenceType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1SequenceType.html</anchorfile>
      <anchor>a4f6b654dec0bfe1241956b4639aae913</anchor>
      <arglist>(dds::core::xtypes::DynamicType &amp;&amp;type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SequenceType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1SequenceType.html</anchorfile>
      <anchor>a0138d8ce58d45dc436252e3658eba134</anchor>
      <arglist>(dds::core::xtypes::DynamicType &amp;&amp;type, uint32_t bounds)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>bounds</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnidimensionalCollectionType.html</anchorfile>
      <anchor>ae02142b9ac38e6eb3fd3df843d0953a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>content_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1CollectionType.html</anchorfile>
      <anchor>ae371c8db37de676da03fa36cdd6db3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::StringType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1StringType.html</filename>
    <base>dds::core::xtypes::UnidimensionalCollectionType</base>
    <member kind="function">
      <type></type>
      <name>StringType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StringType.html</anchorfile>
      <anchor>a1c8728390fa1638b62bc0e3aafce6472</anchor>
      <arglist>(uint32_t bounds)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>bounds</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnidimensionalCollectionType.html</anchorfile>
      <anchor>ae02142b9ac38e6eb3fd3df843d0953a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>content_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1CollectionType.html</anchorfile>
      <anchor>ae371c8db37de676da03fa36cdd6db3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::WStringType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1WStringType.html</filename>
    <base>dds::core::xtypes::UnidimensionalCollectionType</base>
    <member kind="function">
      <type></type>
      <name>WStringType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1WStringType.html</anchorfile>
      <anchor>aae41784cb5961728aa6f31ada51c939f</anchor>
      <arglist>(uint32_t bounds)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>bounds</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnidimensionalCollectionType.html</anchorfile>
      <anchor>ae02142b9ac38e6eb3fd3df843d0953a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>content_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1CollectionType.html</anchorfile>
      <anchor>ae371c8db37de676da03fa36cdd6db3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::ArrayType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1ArrayType.html</filename>
    <base>dds::core::xtypes::CollectionType</base>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>afc3d09038128734b8f0ceb984818bac1</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type, uint32_t dimension)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>a2dade36cdf172faaf3f5f4915b26c122</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type, IntegerFwdIterator dimensions_begin, IntegerFwdIterator dimensions_end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>a034c408fc4fac82c7b573fef9254f2cf</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type, std::initializer_list&lt; uint32_t &gt; dimensions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>ab0ad64f9ee94562edb1e8a91289fa90e</anchor>
      <arglist>(dds::core::xtypes::DynamicType &amp;&amp;type, uint32_t dimension)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>a929541d3fda05af81af1133f69ae70bd</anchor>
      <arglist>(dds::core::xtypes::DynamicType &amp;&amp;type, IntegerFwdIterator dimensions_begin, IntegerFwdIterator dimensions_end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>a8d6cf4bbe7ca31625696a96c8c609bc7</anchor>
      <arglist>(dds::core::xtypes::DynamicType &amp;&amp;type, std::initializer_list&lt; uint32_t &gt; dimensions)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>dimension_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>ae333b97cb6764f19671837044545fd24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>dimension</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>ae2a5a6cb43a27e736867d706724612ac</anchor>
      <arglist>(uint32_t dimension_index) const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>total_element_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1ArrayType.html</anchorfile>
      <anchor>a02f154d7b9ca88031719007532769e95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>content_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1CollectionType.html</anchorfile>
      <anchor>ae371c8db37de676da03fa36cdd6db3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::DynamicData</name>
    <filename>classdds_1_1core_1_1xtypes_1_1DynamicData.html</filename>
    <member kind="function">
      <type></type>
      <name>DynamicData</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a8825d6105c6fb61279d822c928418090</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DynamicData</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>ae1b04584d0195f10f60f1166463d64c4</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type, const DynamicDataProperty &amp;property)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a1e04bf6c8e63a43060a171153273c60f</anchor>
      <arglist>(const std::string &amp;name, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a5eb00e6d99d69d65136fbbaf65f99082</anchor>
      <arglist>(uint32_t index, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>ab34ca55ce49d747d80737b83903b3ddd</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>aee7255068089479ecc861ff1de84a90d</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_values</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a1fdab6d7fbf765270fa4de2b42f27823</anchor>
      <arglist>(const std::string &amp;name, std::vector&lt; T &gt; &amp;out_array) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_values</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>ab8620ee1d2cd1e7f122ef98eacb6e5ed</anchor>
      <arglist>(uint32_t index, std::vector&lt; T &gt; &amp;out_array) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>get_values</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a882d69ceff7a4dfcddea98961257ecce</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>get_values</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a5cd43af586d2394bad407b2514a06675</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_values</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a85d8d92bb99c164094e17b2ee2feaec2</anchor>
      <arglist>(uint32_t index, const std::vector&lt; T &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_values</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a2fadb8b90caf24b9fd5da919d385f69e</anchor>
      <arglist>(const std::string &amp;name, const std::vector&lt; T &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>LoanedDynamicData</type>
      <name>loan_value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a99e2b4fec89d14b71fe5f55638b5766f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>LoanedDynamicData</type>
      <name>loan_value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a61e201046d967f6b87978057ff7f0a6b</anchor>
      <arglist>(uint32_t index)</arglist>
    </member>
    <member kind="function">
      <type>LoanedDynamicData &amp;</type>
      <name>loan_value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a05182a64084a119b0125c52b0e976a5b</anchor>
      <arglist>(LoanedDynamicData &amp;data, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>LoanedDynamicData &amp;</type>
      <name>loan_value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>ae9a7ca8a2f62108f3ebc85228839fcf7</anchor>
      <arglist>(LoanedDynamicData &amp;data, uint32_t mid)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>discriminator_value</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a75dcb1b2aee17c43be33fceb4efd731d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_all_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a9d75f3bcf14860ffd2c1c9245c3cdccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_optional_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>ab89fe33295982efdcc6277a13cf99fe1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_optional_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a46a6107def8cd878ce49df70e5166341</anchor>
      <arglist>(uint32_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a5e2fdf0fbedea81363c1b5392dd00508</anchor>
      <arglist>(uint8_t *storage, int32_t size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>estimated_max_buffer_size</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a368a3950c393021e76c156f7f5d90619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a4a5ac436048c720a48540d28afc070b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>type_kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>abc3fb258322c96fca29a4bde1883bc1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>member_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a7d7e107e490d50e84607f4dce0dd6cae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member_exists</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a1f5f7d6e112cadd871bd4701530e104a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member_exists</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a743577238b313a070a3e859100e51d93</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member_exists_in_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a34a94440b9a9fbaa4d53d6b6d4281e55</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>member_exists_in_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a06df26281333395e0fc73035cf3fef10</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>DynamicDataInfo</type>
      <name>info</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>aed7484fe5edb67fa8d028ce91041d2e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DynamicDataMemberInfo</type>
      <name>member_info</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>aa1a47d5c4cf204d135516bbf08956d42</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>DynamicDataMemberInfo</type>
      <name>member_info</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a85a56bddd7d93411a1590f34bb6e8ec5</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>member_index</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a9348f605e0ec88f7a12da5255f1897cc</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_member_key</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>af8f87a6e4f937221adf9a56907e09477</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_member_key</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>aa7bccbb7700f58ed4620c650dafb18f7</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>to_cdr_buffer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a972979a9bfa860df4255fa4fa216d94d</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;buffer, const DynamicData &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>DynamicData &amp;</type>
      <name>from_cdr_buffer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a0d8c84c8b33954390e5af7c5c6a5067b</anchor>
      <arglist>(DynamicData &amp;sample, const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>TopicType</type>
      <name>convert</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a024226bfe0dc539c88c3ea5cf141b324</anchor>
      <arglist>(const DynamicData &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>DynamicData</type>
      <name>convert</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>addaa4cb78bbf7e3b9020ff4026d4f2f3</anchor>
      <arglist>(const TopicType &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_convert</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>abae0f068a29a425110f40527e64d2d10</anchor>
      <arglist>(const DynamicData &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Types...&gt;</type>
      <name>get_tuple</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>a9edc6d6faf244ed94c6db011daa43a73</anchor>
      <arglist>(const dds::core::xtypes::DynamicData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tuple</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicData.html</anchorfile>
      <anchor>ac8add22b3e30970fc117294bbd6274b1</anchor>
      <arglist>(dds::core::xtypes::DynamicData &amp;data, const std::tuple&lt; Types...&gt; &amp;value)</arglist>
    </member>
    <docanchor file="classdds_1_1core_1_1xtypes_1_1DynamicData">DDSDynamicDataModule_member_name_id</docanchor>
    <docanchor file="classdds_1_1core_1_1xtypes_1_1DynamicData">DDSDynamicDataModule_exceptions</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::DynamicType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1DynamicType.html</filename>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::AbstractConstructedType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</filename>
    <templarg>MemberType</templarg>
    <base>dds::core::xtypes::DynamicType</base>
    <member kind="typedef">
      <type>MemberType</type>
      <name>Member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a2f1dc7d3f16de75e50fddb0f502c8c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MemberIndex</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a27eca615a0686f592910e815da949919</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::ExtensibilityKind</type>
      <name>extensibility_kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a52c0b6a0a870bc749c8483e74e7433a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>member_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>ae76f923fc2ed219c8be4a5097353036e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const MemberType &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a9a842a685b4ee1f695639f3963e67b35</anchor>
      <arglist>(MemberIndex index) const </arglist>
    </member>
    <member kind="function">
      <type>const MemberType &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a502d1e87748122f8f52001f11c94bce3</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aaff78ced18c4d796b6e1fcc623701484</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MemberType &gt;</type>
      <name>members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aa3fab66c9d4a2ba19e3d0099f776a5bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const MemberIndex</type>
      <name>INVALID_INDEX</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a02cedb244dda908b9b57525c3c8ca446</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::EnumType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1EnumType.html</filename>
    <base>AbstractConstructedType&lt; EnunMember &gt;</base>
    <member kind="function">
      <type></type>
      <name>EnumType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>a660683416d9b427fa85b81c6d2dc1613</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>a2851a8085db8e39509fac055edb7d267</anchor>
      <arglist>(const std::string &amp;name, const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>ad56727ea5e73066db378194adc795d29</anchor>
      <arglist>(const std::string &amp;name, MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>ad0c496af6f0a49f075a9c2552deb6c06</anchor>
      <arglist>(const std::string &amp;name, std::initializer_list&lt; EnumMemberImpl &gt; members)</arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_ordinal</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>a1bda9918aeb768ea79551e42f6952f42</anchor>
      <arglist>(int32_t ordinal) const </arglist>
    </member>
    <member kind="function">
      <type>EnumType &amp;</type>
      <name>add_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>ae7cab302d134c0b01c66658f9c18c81d</anchor>
      <arglist>(const EnumMemberImpl &amp;member)</arglist>
    </member>
    <member kind="function">
      <type>EnumType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>a0039f0f1082573af397aaa6154cbaffb</anchor>
      <arglist>(const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type>EnumType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>ad3615f1ac8ee2429fd407823dfcef66c</anchor>
      <arglist>(std::initializer_list&lt; EnumMemberImpl &gt; members)</arglist>
    </member>
    <member kind="function">
      <type>EnumType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumType.html</anchorfile>
      <anchor>ac135681cb73d353649813e886c755361</anchor>
      <arglist>(MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::ExtensibilityKind</type>
      <name>extensibility_kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a52c0b6a0a870bc749c8483e74e7433a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>member_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>ae76f923fc2ed219c8be4a5097353036e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EnunMember &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a9a842a685b4ee1f695639f3963e67b35</anchor>
      <arglist>(MemberIndex index) const</arglist>
    </member>
    <member kind="function">
      <type>const EnunMember &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a502d1e87748122f8f52001f11c94bce3</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aaff78ced18c4d796b6e1fcc623701484</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; EnunMember &gt;</type>
      <name>members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aa3fab66c9d4a2ba19e3d0099f776a5bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef">
      <type>EnunMember</type>
      <name>Member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a2f1dc7d3f16de75e50fddb0f502c8c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MemberIndex</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a27eca615a0686f592910e815da949919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const MemberIndex</type>
      <name>INVALID_INDEX</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a02cedb244dda908b9b57525c3c8ca446</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::Member</name>
    <filename>classdds_1_1core_1_1xtypes_1_1Member.html</filename>
    <member kind="function">
      <type></type>
      <name>Member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a6519bde69444b556222b3e692f078284</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a2bcd8708561cc3e9996fa901464fd234</anchor>
      <arglist>(const std::string &amp;name, DynamicTypeImpl &amp;&amp;type)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a7c8008b920c2e9ca4d59693991e854af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a6e9fb21ee21c954eeca9b0f7c1901875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DynamicType &amp;</type>
      <name>type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>aa4fd75c4cd8c9ec3a37481f89103ef65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a4933c9e43fb18aff8afb7849d91d8bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>get_id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a3781716b90aa054b9b28180dd44c74d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pointer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>ab4e86f265dd83151091a072c4d776ad2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_key</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>afaf3d39f91201d196e442c11db840dd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_optional</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a8a7e41b55f14cab10703ce2296700ec0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_bitset</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a5006f50da44533f590fd4bf1549259e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_bitbound</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>ac3617f61eb47d0051b811689a88e0fea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>get_bitbound</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>ad9a24b9fc1c806560b46c79d023c1da1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Member &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>ac49179d47bee93ec3ab9307595730324</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Member &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>aee7d12e28f824410855fdfd1ae41d990</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>Member &amp;</type>
      <name>optional</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a319d5e07b2cb668c94993ffce31dd99e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>Member &amp;</type>
      <name>id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a8283b25b17e6c8105c5d90d60ad15b4d</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>Member &amp;</type>
      <name>pointer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a0b67967b9573891fcb6a75b23c98836b</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32_t</type>
      <name>INVALID_ID</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1Member.html</anchorfile>
      <anchor>a65f9281aacce0cd3b58b6e4399e2f330</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::UnionMember</name>
    <filename>classdds_1_1core_1_1xtypes_1_1UnionMember.html</filename>
    <member kind="typedef">
      <type>DDS_Long</type>
      <name>DiscriminatorType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a4696c410a97c3cd645ed145b1f2d85c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; DiscriminatorType &gt;</type>
      <name>LabelSeq</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>ada8b2106c8c760584c0dbc0ef8920eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionMember</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a168ec936c676da958fbad9e4ec7dcc66</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;type, const LabelSeq &amp;labels)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionMember</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>ae0ec8980778a75e00478a8e766cc315c</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;type, DiscriminatorType label)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionMember</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>aaf437bfff13a024e23a3436518e828bc</anchor>
      <arglist>(const std::string &amp;the_name, DynamicTypeImpl &amp;&amp;the_type, const LabelSeq &amp;the_labels)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionMember</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a591d1627151d310713994ef44e358a27</anchor>
      <arglist>(const std::string &amp;the_name, DynamicTypeImpl &amp;&amp;the_type, DiscriminatorType the_label)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a7f201624fcac2ba1b9f21fb3cf920f8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a99b37560b9628775c73956f63ea76b16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DynamicType &amp;</type>
      <name>type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a8fddf40be70bfc60081cf47225562043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>ab11c7c639e9b800ef39bf9d56ff26b95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>get_id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>abb4c01394ade6b88eb96910e587bcdcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pointer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>ac0d152c4bfe07b152c64be8a6a09bdc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>label_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a8a3be7025fab686ceb21d3786522cb96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LabelSeq</type>
      <name>labels</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a88f73e631eb2fe9568525d3108461a4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UnionMember &amp;</type>
      <name>labels</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>ac3f20bbd373df01e750855ed7ec95bb2</anchor>
      <arglist>(const LabelSeq &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>UnionMember &amp;</type>
      <name>label</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>ad922d8fdc37432c947ba989532b31e33</anchor>
      <arglist>(DiscriminatorType value)</arglist>
    </member>
    <member kind="function">
      <type>UnionMember &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a5c64fd5ad3880f4c8d97971cac4d02ba</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>UnionMember &amp;</type>
      <name>id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>aed846c916a8105c21d0c5988131603ae</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>UnionMember &amp;</type>
      <name>pointer</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>a083e3f98297eb728aac17e4d67e08280</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE DiscriminatorType</type>
      <name>DEFAULT_LABEL</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>aed6579747c70d7fa0aca265b3d2dd315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32_t</type>
      <name>INVALID_ID</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionMember.html</anchorfile>
      <anchor>adf0a99176b4bff8b1a80c83b57ed8d29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::EnumMember</name>
    <filename>classdds_1_1core_1_1xtypes_1_1EnumMember.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumMember</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumMember.html</anchorfile>
      <anchor>afc4f7e656fef7661bb7f860f5ed30697</anchor>
      <arglist>(const std::string &amp;name, int32_t ordinal)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumMember.html</anchorfile>
      <anchor>ac41dd2d6cc5934f3eaa53b3464e04d75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumMember.html</anchorfile>
      <anchor>a25170e73aecf2ee99ca55d9dfccdeffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EnumMember &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumMember.html</anchorfile>
      <anchor>a88ba7d10e0240b37aee91231a9bbf58b</anchor>
      <arglist>(const dds::core::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>ordinal</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumMember.html</anchorfile>
      <anchor>a3f0d4d5cfff2a0ecc03b206c3ab1979a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EnumMember &amp;</type>
      <name>ordinal</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1EnumMember.html</anchorfile>
      <anchor>a99a5ac664ffe0a3f6f4f2b845b29b047</anchor>
      <arglist>(int32_t the_ordinal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::PrimitiveType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1PrimitiveType.html</filename>
    <base>dds::core::xtypes::DynamicType</base>
    <member kind="function">
      <type>const PrimitiveType&lt; T &gt; &amp;</type>
      <name>primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1PrimitiveType.html</anchorfile>
      <anchor>a8c8ee2788db215b71ab7860e66610869</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::StructType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1StructType.html</filename>
    <base>AbstractConstructedType&lt; Member &gt;</base>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a22e3e482f16dc63f283ac565f78a5701</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a1a964d743ca915d5e01a139be47b69de</anchor>
      <arglist>(const std::string &amp;name, const StructType &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a817eebcee6aa7cc1fe2ed7a04cfc3d75</anchor>
      <arglist>(const std::string &amp;name, const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a512ba7cc6f0351fef1020d831c4f8d12</anchor>
      <arglist>(const std::string &amp;name, const StructType &amp;parent, const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a5c77c5978da21acb6f3931e3b7030d43</anchor>
      <arglist>(const std::string &amp;name, MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a684cf3527454036adfc3bb5713b01707</anchor>
      <arglist>(const std::string &amp;name, const StructType &amp;parent, MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a8cf6735bba630abc41292ab366da4198</anchor>
      <arglist>(const std::string &amp;name, StructType &amp;&amp;parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a1e5a70764bedc40226dd20efe605a476</anchor>
      <arglist>(const std::string &amp;name, StructType &amp;&amp;parent, MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>ab20d83a6eae92f0c758c2da7fdcb05c2</anchor>
      <arglist>(const std::string &amp;name, StructType &amp;&amp;parent, const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>aeae4c16828db24d2933a401fc3c073d8</anchor>
      <arglist>(const std::string &amp;name, std::initializer_list&lt; MemberImpl &gt; members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a37b10cfabffaa9bbf398b527f655e98d</anchor>
      <arglist>(const std::string &amp;name, const StructType &amp;parent, std::initializer_list&lt; MemberImpl &gt; members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StructType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a2cf1bc6665027028a0573b05ae093de7</anchor>
      <arglist>(const std::string &amp;name, StructType &amp;&amp;parent, std::initializer_list&lt; MemberImpl &gt; members)</arglist>
    </member>
    <member kind="function">
      <type>StructType &amp;</type>
      <name>extensibility_kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a5ab454c62564ba3996e63cbda9dd8c7d</anchor>
      <arglist>(dds::core::xtypes::ExtensibilityKind kind)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_parent</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>abcb85f908bfaea0ccbba83f13502bcaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const StructType &amp;</type>
      <name>parent</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>ae16786a7b347393ff144c5554e75bb7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>ad1f6e555c38e9886eb52e964b34be50a</anchor>
      <arglist>(uint32_t id) const </arglist>
    </member>
    <member kind="function">
      <type>StructType &amp;</type>
      <name>add_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a2dcf5c93ea5031d8eab127578dac2ada</anchor>
      <arglist>(const MemberImpl &amp;member)</arglist>
    </member>
    <member kind="function">
      <type>StructType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a7168194063f6e72c029e62fca1f48bc6</anchor>
      <arglist>(const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type>StructType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a41b3c7fd97afbafcedcb2ab582b8b095</anchor>
      <arglist>(std::initializer_list&lt; MemberImpl &gt; members)</arglist>
    </member>
    <member kind="function">
      <type>StructType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>aa8eac0217a557961c6e4ca3678822386</anchor>
      <arglist>(MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type>StructType &amp;</type>
      <name>add_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a8d3e5182537e11bac2f705b6526cdd77</anchor>
      <arglist>(MemberImpl &amp;&amp;member)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::ExtensibilityKind</type>
      <name>extensibility_kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a52c0b6a0a870bc749c8483e74e7433a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>member_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>ae76f923fc2ed219c8be4a5097353036e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Member &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a9a842a685b4ee1f695639f3963e67b35</anchor>
      <arglist>(MemberIndex index) const</arglist>
    </member>
    <member kind="function">
      <type>const Member &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a502d1e87748122f8f52001f11c94bce3</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aaff78ced18c4d796b6e1fcc623701484</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Member &gt;</type>
      <name>members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aa3fab66c9d4a2ba19e3d0099f776a5bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::StructType</type>
      <name>create_type_from_tuple</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1StructType.html</anchorfile>
      <anchor>a70c536b94070afc4dc28d89c9a2a6f22</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="typedef">
      <type>Member</type>
      <name>Member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a2f1dc7d3f16de75e50fddb0f502c8c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MemberIndex</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a27eca615a0686f592910e815da949919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const MemberIndex</type>
      <name>INVALID_INDEX</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a02cedb244dda908b9b57525c3c8ca446</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::core::xtypes::UnionType</name>
    <filename>classdds_1_1core_1_1xtypes_1_1UnionType.html</filename>
    <base>AbstractConstructedType&lt; UnionMember &gt;</base>
    <member kind="typedef">
      <type>UnionMember::DiscriminatorType</type>
      <name>DiscriminatorType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a5419ecc19644a8b43b242d5ae266c2cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UnionMember</type>
      <name>Member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a2f1dc7d3f16de75e50fddb0f502c8c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MemberIndex</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a27eca615a0686f592910e815da949919</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a91d373976bb44e152ba39534d87d2109</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;discriminator_type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a522d6ce728929a30ff6c70f24053b97f</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;discriminator_type, const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a157377cd8f49891d34ed610e5d278159</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;discriminator_type, MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionType</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a0f87696f157eeb25389148f29c710ef5</anchor>
      <arglist>(const std::string &amp;name, const DynamicTypeImpl &amp;discriminator_type, std::initializer_list&lt; UnionMember &gt; members)</arglist>
    </member>
    <member kind="function">
      <type>const DynamicTypeImpl &amp;</type>
      <name>discriminator</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>aa752876848f2422fb67c98ef074d6d1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_label</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a39b90afd24279e214fb55eb2bf23074c</anchor>
      <arglist>(DiscriminatorType label) const </arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_id</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>ac391f3956b74d89066c57287b06a7959</anchor>
      <arglist>(uint32_t id) const </arglist>
    </member>
    <member kind="function">
      <type>UnionType &amp;</type>
      <name>add_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a421a50b293fd745ff39319372fc047d4</anchor>
      <arglist>(const UnionMember &amp;member)</arglist>
    </member>
    <member kind="function">
      <type>UnionType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>ae948b32fe86077e407123daa482acd01</anchor>
      <arglist>(const Container &amp;members)</arglist>
    </member>
    <member kind="function">
      <type>UnionType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>ac514e4badbeea840b21931b88c54e17a</anchor>
      <arglist>(std::initializer_list&lt; UnionMember &gt; members)</arglist>
    </member>
    <member kind="function">
      <type>UnionType &amp;</type>
      <name>add_members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>a336a66042696621d6aa8c4f4514065af</anchor>
      <arglist>(MemberIter begin, MemberIter end)</arglist>
    </member>
    <member kind="function">
      <type>UnionType &amp;</type>
      <name>add_member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1UnionType.html</anchorfile>
      <anchor>abe8280bd592e992176c43ebf400f3e10</anchor>
      <arglist>(UnionMember &amp;&amp;member)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::ExtensibilityKind</type>
      <name>extensibility_kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a52c0b6a0a870bc749c8483e74e7433a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>member_count</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>ae76f923fc2ed219c8be4a5097353036e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const UnionMember &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a9a842a685b4ee1f695639f3963e67b35</anchor>
      <arglist>(MemberIndex index) const</arglist>
    </member>
    <member kind="function">
      <type>const UnionMember &amp;</type>
      <name>member</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a502d1e87748122f8f52001f11c94bce3</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>MemberIndex</type>
      <name>find_member_by_name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aaff78ced18c4d796b6e1fcc623701484</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnionMember &gt;</type>
      <name>members</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>aa3fab66c9d4a2ba19e3d0099f776a5bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>kind</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>ae5dbaf6400bf199ded564aa5713d86b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>acc8081f55eb168b48ae1ab746ac3957a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const MemberIndex</type>
      <name>INVALID_INDEX</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1AbstractConstructedType.html</anchorfile>
      <anchor>a02cedb244dda908b9b57525c3c8ca446</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primitive_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>aa9514d401c3e5cfd5c366b5333756b4d</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_constructed_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>adc2775bab60dee514ca4f934bbe6d110</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_collection_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a8590c3d482af9aed1cc2cca72872eb1c</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_aggregation_type</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a008e16f99c17596e46ca1bf5c878e429</anchor>
      <arglist>(const DynamicType &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>classdds_1_1core_1_1xtypes_1_1DynamicType.html</anchorfile>
      <anchor>a98bd1b28097a0a8352ae7d0e99b61886</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::domain</name>
    <filename>namespacedds_1_1domain.html</filename>
    <namespace>dds::domain::qos</namespace>
    <class kind="class">dds::domain::DomainParticipantListener</class>
    <class kind="class">dds::domain::DomainParticipant</class>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1domain.html</anchorfile>
      <anchor>a1878c1653a026222dac399f4cffefeb2</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1domain.html</anchorfile>
      <anchor>ac101f5c2f8e391421e179bb670bf0f1f</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipant</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1domain.html</anchorfile>
      <anchor>ab3f0a4ee170b7486b06670025ed8b9c8</anchor>
      <arglist>(int32_t domain_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::domain::DomainParticipantListener</name>
    <filename>classdds_1_1domain_1_1DomainParticipantListener.html</filename>
    <base virtualness="virtual">dds::pub::PublisherListener</base>
    <base virtualness="virtual">dds::sub::SubscriberListener</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>aff9da9e252961cab49e48468ccc3a93f</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::OfferedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a4e40a8552786abf31747ab2bd3583d43</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::OfferedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a9ded17ea2d509d1f4343507131c4fbf1</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::LivelinessLostStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>aa14949723d46cbb6f704f4f33a88252a</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::PublicationMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>afe2cc13af600a0299b4438493d9a58c3</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const rti::core::status::ReliableWriterCacheChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>af17d4d83ef93ea94fb321ab14f5a0c1e</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const rti::core::status::ReliableReaderActivityChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a67c6e984193620b6cdbaa4403b9cd057</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const dds::core::InstanceHandle &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a0b4a6aecd462f66424ea14c41db28d90</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::RequestedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a6420c986262a7c03a927bacd186f3b68</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::RequestedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>ad70501e73d92e0261ad8fb9a626374e8</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SampleRejectedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a460590d737ac2cf7b1705e75b447bee9</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::LivelinessChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>aa3b505b19d45572597c23fc38044a1fb</anchor>
      <arglist>(AnyDataReader &amp;the_reader)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a0c960ca2975bc3de2b5c68694e54a0f0</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SubscriptionMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a5c35243572e49ac1f2a0fec45ba9142b</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SampleLostStatus &amp;status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::domain::DomainParticipant</name>
    <filename>classdds_1_1domain_1_1DomainParticipant.html</filename>
    <base>dds::core::Entity</base>
    <member kind="typedef">
      <type>DomainParticipantListener</type>
      <name>Listener</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a40fff806cae49816baaafbdf88d74a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DomainParticipant</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a9aa8d40fffedb048a57aedec12d893c7</anchor>
      <arglist>(int32_t domain_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DomainParticipant</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>af85187ad6a0a2d9cf72038bd5dff2f9c</anchor>
      <arglist>(int32_t domain_id, const dds::domain::qos::DomainParticipantQos &amp;qos, dds::domain::DomainParticipantListener *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listener</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>ad320f617f02348278ac45417671afce8</anchor>
      <arglist>(Listener *l, const dds::core::status::StatusMask &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>Listener *</type>
      <name>listener</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a46d8254d372ce096112d357ae311a3e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::domain::qos::DomainParticipantQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a607acfafafe21ec0a56c790b2761a6b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a38abfca34c034a359e9a4feb0a9b48b8</anchor>
      <arglist>(const dds::domain::qos::DomainParticipantQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipant &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>af9586780e583d0af49cd9412faa861d4</anchor>
      <arglist>(const dds::domain::qos::DomainParticipantQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>const DomainParticipant &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>abdb3290baac58b0c51eb539c32f46da9</anchor>
      <arglist>(dds::domain::qos::DomainParticipantQos &amp;the_qos) const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>domain_id</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>ad18fb73003c58c8c09ee596d24f0c8e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_liveliness</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>aecbd7c8c9b98b0945435d426cc00625f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains_entity</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a5f2ea1707491267c874f6657408f5935</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;a_handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Time</type>
      <name>current_time</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a506a082b738ee504b85e2a57e841578f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::PublisherQos</type>
      <name>default_publisher_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a5bda327281d43a9e9b2c7e18e181b8ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipant &amp;</type>
      <name>default_publisher_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a98de4be529bbccf15164d7aae5f9ce83</anchor>
      <arglist>(const dds::pub::qos::PublisherQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::SubscriberQos</type>
      <name>default_subscriber_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a2ce16a9618327d41c78d0ce0b587dfd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipant &amp;</type>
      <name>default_subscriber_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a929c6910d87fa85c1a24ca74d981ea4f</anchor>
      <arglist>(const dds::sub::qos::SubscriberQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>default_topic_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a2be8cffd95e13946a2b1a8f7ba47ab3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipant &amp;</type>
      <name>default_topic_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a7a2e24f4c201aca6a98edd0f8f350059</anchor>
      <arglist>(const dds::topic::qos::TopicQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>default_datawriter_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a240103925aee94eb0eec1a1a87a60bf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>default_datawriter_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a563f4f1a302c0813f827b9ea3dd87e77</anchor>
      <arglist>(const ::dds::pub::qos::DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>default_datareader_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a7179e957f26aa033d0f10c52483e64ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>default_datareader_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a565e8bb8efce900a81f2f58c3faead78</anchor>
      <arglist>(const ::dds::sub::qos::DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_contentfilter</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>afa6a0ef035a5cbfd1ad7def24c11dd12</anchor>
      <arglist>(const rti::topic::CustomFilter&lt; rti::topic::ContentFilterBase &gt; &amp;custom_filter, const std::string &amp;filter_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_contentfilter</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a94c43030edf18f03e9b6c79bd5ca9c4c</anchor>
      <arglist>(const std::string &amp;filter_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_type</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>afcf34f33d6eb7524c45d753b95fe321b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_type_registered</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a2f07f44f4fbb2bd59bb24c8fab00d089</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_peer</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a35c551d9c6837d09cfb515c08c706be8</anchor>
      <arglist>(const std::string &amp;peer_descr_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_peer</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a10bfa7e27e2d8ed3e6e2bb15f906fe81</anchor>
      <arglist>(const std::string &amp;peer_descr_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume_endpoint_discovery</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>aba92b090e83442109551df74d0aeb222</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;remote_participant_handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_durable_subscription</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>af4b088f089e0aec62b3fdc8e407b5d3e</anchor>
      <arglist>(const rti::core::EndpointGroup &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_durable_subscription</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>af271c20760e41e863eff11e03a20d48f</anchor>
      <arglist>(const rti::core::EndpointGroup &amp;group, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>participant_factory_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>ad61220b6e73f45928ab3d0b68a63c977</anchor>
      <arglist>(const dds::domain::qos::DomainParticipantFactoryQos &amp;qos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dds::domain::qos::DomainParticipantFactoryQos</type>
      <name>participant_factory_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a9182f1aeded8c3d9070ed3c2a1a17bfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize_participant_factory</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a3e4e5802c9a01c14216514d95dff2d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dds::domain::qos::DomainParticipantQos</type>
      <name>default_participant_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a7b9f643492754355758ee956b745ee08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>default_participant_qos</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a589dc2c2602c9d5b5f3a589ac72657b2</anchor>
      <arglist>(const dds::domain::qos::DomainParticipantQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a1878c1653a026222dac399f4cffefeb2</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>ac101f5c2f8e391421e179bb670bf0f1f</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipant</type>
      <name>find</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>ab3f0a4ee170b7486b06670025ed8b9c8</anchor>
      <arglist>(int32_t domain_id)</arglist>
    </member>
    <member kind="function">
      <type>dds::domain::DomainParticipant</type>
      <name>find_participant_by_name</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>aecfd7adc0318f7384e464601774c6e7f</anchor>
      <arglist>(const std::string &amp;participant_name)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_participants</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a0294da793943cbbcf0a2a82d674d64a7</anchor>
      <arglist>(ParticipantFwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_participants</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>ad4f106f3ff4f63bf9985e9abe1967da0</anchor>
      <arglist>(ParticipantFwdIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_type</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>a316aeaa19a99617d359af80827b2ea5a</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const std::string &amp;name, const dds::core::xtypes::DynamicType &amp;type, const rti::core::xtypes::DynamicDataTypeSerializationProperty &amp;serialization_property=rti::core::xtypes::DynamicDataTypeSerializationProperty::DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_type</name>
      <anchorfile>classdds_1_1domain_1_1DomainParticipant.html</anchorfile>
      <anchor>af5f9070a495775a9c6a6ba6a8a99fa54</anchor>
      <arglist>(const std::string &amp;registered_type_name=dds::topic::topic_type_name&lt; T &gt;::value())</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::domain::qos</name>
    <filename>namespacedds_1_1domain_1_1qos.html</filename>
    <class kind="class">dds::domain::qos::DomainParticipantFactoryQos</class>
    <class kind="class">dds::domain::qos::DomainParticipantQos</class>
  </compound>
  <compound kind="class">
    <name>dds::domain::qos::DomainParticipantFactoryQos</name>
    <filename>classdds_1_1domain_1_1qos_1_1DomainParticipantFactoryQos.html</filename>
    <member kind="function">
      <type>const POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantFactoryQos.html</anchorfile>
      <anchor>aa26fc03588315670c35ac6ccf3b992a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a5ae453625319ab3316f371f8a0e45ed6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::domain::qos::DomainParticipantQos</name>
    <filename>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</filename>
    <member kind="function">
      <type></type>
      <name>DomainParticipantQos</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</anchorfile>
      <anchor>a92e4c940132f9ccde5e59e7b7e5b62e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</anchorfile>
      <anchor>abdc137da3f64d7069587938ea4f5e692</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</anchorfile>
      <anchor>a5972f569125e2bc532fa24f1aaf68657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantQos &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</anchorfile>
      <anchor>aef0964c8aab374ddafa55748e1ca4d7e</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantQos &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</anchorfile>
      <anchor>a7fc2584409dc30685ddbf8b98bced029</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const DomainParticipantQos &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1domain_1_1qos_1_1DomainParticipantQos.html</anchorfile>
      <anchor>a1194cf738d9c0344c3570b61163e4875</anchor>
      <arglist>(Policy &amp;p) const </arglist>
    </member>
    <docanchor file="classdds_1_1domain_1_1qos_1_1DomainParticipantQos">DomainParticipantQos_policies</docanchor>
  </compound>
  <compound kind="namespace">
    <name>dds::pub</name>
    <filename>namespacedds_1_1pub.html</filename>
    <namespace>dds::pub::qos</namespace>
    <class kind="class">dds::pub::AnyDataWriter</class>
    <class kind="class">dds::pub::AnyDataWriterListener</class>
    <class kind="class">dds::pub::DataWriterListener</class>
    <class kind="class">dds::pub::NoOpDataWriterListener</class>
    <class kind="class">dds::pub::PublisherListener</class>
    <class kind="class">dds::pub::CoherentSet</class>
    <class kind="class">dds::pub::DataWriter</class>
    <class kind="class">dds::pub::Publisher</class>
    <class kind="class">dds::pub::SuspendedPublication</class>
    <member kind="function">
      <type>DataWriter&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>a64842004ed4c2fa46fd91ee24e93d9aa</anchor>
      <arglist>(const AnyDataWriter &amp;any_writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>a5ba2a6029acf87272c417370ceef1b71</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>ad73abb76dce6924d35338f4c853df307</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandleSeq</type>
      <name>matched_subscriptions</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>acf5d8b5ade4fbb5c2987fd6695737a0e</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;writer)</arglist>
    </member>
    <member kind="function">
      <type>FwdIterator</type>
      <name>matched_subscriptions</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>a6f1e137dceef731c5e3db36e66d7c6b3</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;writer, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::SubscriptionBuiltinTopicData</type>
      <name>matched_subscription_data</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>a8f94f174b39c2776c7eeb3e3d3995c9a</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::InstanceHandle &amp;subscription_handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>ad0695f7326531d566f04d9c2cc79308a</anchor>
      <arglist>(const dds::pub::Publisher &amp;publisher, const std::string &amp;topic_name, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1pub.html</anchorfile>
      <anchor>a55d69f6f82a28ff917430bb32ab74d5d</anchor>
      <arglist>(const dds::pub::Publisher &amp;publisher, const std::string &amp;topic_name, BinIterator begin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::AnyDataWriter</name>
    <filename>classdds_1_1pub_1_1AnyDataWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>AnyDataWriter</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>ae2f11a8ee233306831e7645738194050</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;dw)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>ad928dd51da96264dbd90eedc1b846163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a33d0d9f0087b3a213222efb2a62efc0b</anchor>
      <arglist>(const dds::pub::qos::DataWriterQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>topic_name</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a7716ce4301abb14506a6764bcf3f3bc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a97258e1aa4b411dfe04c95bf068b7153</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::pub::Publisher &amp;</type>
      <name>publisher</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a86dcf7d12e9a4348e0d5d14cd8f8ea72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a74782ba359b8e109895085ff1658411b</anchor>
      <arglist>(const dds::core::Duration &amp;timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a04a0deb523682a69b19c6f8f23a7821f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>aca610ffd1e3fea0bcb0fa74216bdcc35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AnyDataWriter &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>ac2042c5b99693de90a3f3df8a6817f64</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a32725edb07f077bb53baf531145f852f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataWriter&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriter.html</anchorfile>
      <anchor>a64842004ed4c2fa46fd91ee24e93d9aa</anchor>
      <arglist>(const AnyDataWriter &amp;any_writer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::AnyDataWriterListener</name>
    <filename>classdds_1_1pub_1_1AnyDataWriterListener.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>aff9da9e252961cab49e48468ccc3a93f</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::OfferedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a4e40a8552786abf31747ab2bd3583d43</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::OfferedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a9ded17ea2d509d1f4343507131c4fbf1</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::LivelinessLostStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>aa14949723d46cbb6f704f4f33a88252a</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::PublicationMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>afe2cc13af600a0299b4438493d9a58c3</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const rti::core::status::ReliableWriterCacheChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>af17d4d83ef93ea94fb321ab14f5a0c1e</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const rti::core::status::ReliableReaderActivityChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a67c6e984193620b6cdbaa4403b9cd057</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const dds::core::InstanceHandle &amp;handle)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::DataWriterListener</name>
    <filename>classdds_1_1pub_1_1DataWriterListener.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>a596ae45f77d965917789d61ffdc2a517</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::status::OfferedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>a400f308ff18f549e4badffadc30881e8</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::status::OfferedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>a2532def356046f8601e2134cb7581488</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::status::LivelinessLostStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>abb59409b14a9aa14b6cf1937d4500c4c</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::status::PublicationMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>ae1e0ee120d0aecc579c9c6d25da53210</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const rti::core::status::ReliableWriterCacheChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>aa860a7e3540f061747d9cbbee694803e</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const rti::core::status::ReliableReaderActivityChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>ab2a7c83cecd246bbfd69bd04d3219138</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::InstanceHandle &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_application_acknowledgment</name>
      <anchorfile>classdds_1_1pub_1_1DataWriterListener.html</anchorfile>
      <anchor>a9bd85c0e17f8389e8084a717246adcb0</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;writer, const rti::pub::AcknowledgmentInfo &amp;acknowledgment_info)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::NoOpDataWriterListener</name>
    <filename>classdds_1_1pub_1_1NoOpDataWriterListener.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">dds::pub::DataWriterListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>a4e2cad537b1fb76b2afe49662f0285ac</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const dds::core::status::OfferedDeadlineMissedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>afc7364ce42768fb5c7e738ab9f2b60a4</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const dds::core::status::OfferedIncompatibleQosStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>a37f2fd40a11d931bb51767c3906a19ad</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const dds::core::status::LivelinessLostStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>ad819bc6909c62acfb5042e3650cde612</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const dds::core::status::PublicationMatchedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>acd11bc5278574a61fff32ca02a2de8a9</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const rti::core::status::ReliableWriterCacheChangedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>a220a2703f152ee9119ba131143f0c675</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const rti::core::status::ReliableReaderActivityChangedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>a190d298d6749080e7f1c9f1e26656fdf</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const dds::core::InstanceHandle &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_application_acknowledgment</name>
      <anchorfile>classdds_1_1pub_1_1NoOpDataWriterListener.html</anchorfile>
      <anchor>a9bfe3014a049e1c067c405e02af65550</anchor>
      <arglist>(dds::pub::DataWriter&lt; T &gt; &amp;, const rti::pub::AcknowledgmentInfo &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::PublisherListener</name>
    <filename>classdds_1_1pub_1_1PublisherListener.html</filename>
    <base virtualness="virtual">dds::pub::AnyDataWriterListener</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>aff9da9e252961cab49e48468ccc3a93f</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::OfferedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a4e40a8552786abf31747ab2bd3583d43</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::OfferedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a9ded17ea2d509d1f4343507131c4fbf1</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::LivelinessLostStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>aa14949723d46cbb6f704f4f33a88252a</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const ::dds::core::status::PublicationMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>afe2cc13af600a0299b4438493d9a58c3</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const rti::core::status::ReliableWriterCacheChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>af17d4d83ef93ea94fb321ab14f5a0c1e</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const rti::core::status::ReliableReaderActivityChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classdds_1_1pub_1_1AnyDataWriterListener.html</anchorfile>
      <anchor>a67c6e984193620b6cdbaa4403b9cd057</anchor>
      <arglist>(dds::pub::AnyDataWriter &amp;writer, const dds::core::InstanceHandle &amp;handle)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::CoherentSet</name>
    <filename>classdds_1_1pub_1_1CoherentSet.html</filename>
    <member kind="function">
      <type></type>
      <name>CoherentSet</name>
      <anchorfile>classdds_1_1pub_1_1CoherentSet.html</anchorfile>
      <anchor>af48af62aceb2fc2942c1f8c9fd8715df</anchor>
      <arglist>(const dds::pub::Publisher &amp;pub)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classdds_1_1pub_1_1CoherentSet.html</anchorfile>
      <anchor>acb0ad8579f28ae400845821e0d882c5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoherentSet</name>
      <anchorfile>classdds_1_1pub_1_1CoherentSet.html</anchorfile>
      <anchor>a7a281d8236e348bc274ea8a039803899</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::DataWriter</name>
    <filename>classdds_1_1pub_1_1DataWriter.html</filename>
    <templarg>T</templarg>
    <base>dds::core::Entity</base>
    <member kind="function">
      <type></type>
      <name>DataWriter</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a0b6b325b9c5a426c81b83eac6e94b412</anchor>
      <arglist>(const dds::pub::Publisher &amp;pub, const dds::topic::Topic&lt; T &gt; &amp;topic)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataWriter</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>abd07a86ac27fe7c139ab1d1c85d92ae9</anchor>
      <arglist>(const dds::pub::Publisher &amp;pub, const dds::topic::Topic&lt; T &gt; &amp;topic, const dds::pub::qos::DataWriterQos &amp;qos, dds::pub::DataWriterListener&lt; T &gt; *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ac5a2a60ebdc432aaefe2c4086b320018</anchor>
      <arglist>(const T &amp;instance_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a4adf03799a3c963b512aeb2b75b794a1</anchor>
      <arglist>(const T &amp;instance_data, const dds::core::Time &amp;timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ae02db70be8d1a4e20c15881d79a5d038</anchor>
      <arglist>(const T &amp;instance_data, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ac2ca4174032b09c8b09530851a0cc7f8</anchor>
      <arglist>(const T &amp;instance_data, const dds::core::InstanceHandle &amp;handle, const dds::core::Time &amp;source_timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a963bada079ee0e84f9c0e3d7aaaf23d8</anchor>
      <arglist>(const dds::topic::TopicInstance&lt; T &gt; &amp;topic_instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>aaf979cbe2d196e0e29672427e4e70a4f</anchor>
      <arglist>(const dds::topic::TopicInstance&lt; T &gt; &amp;topic_instance, const dds::core::Time &amp;timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a25b057de0888f3fdc477007a5960e631</anchor>
      <arglist>(const FWIterator &amp;begin, const FWIterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a1f6dd136b5df686bf901f8ffe39c33e1</anchor>
      <arglist>(const FWIterator &amp;begin, const FWIterator &amp;end, const dds::core::Time &amp;timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a25825722454828f2c0beb3ad67327dc2</anchor>
      <arglist>(const SamplesFWIterator &amp;data_begin, const SamplesFWIterator &amp;data_end, const HandlesFWIterator &amp;handle_begin, const HandlesFWIterator &amp;handle_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a5efae367a3a4a1525bfb484d3ea56b6a</anchor>
      <arglist>(const SamplesFWIterator &amp;data_begin, const SamplesFWIterator &amp;data_end, const HandlesFWIterator &amp;handle_begin, const HandlesFWIterator &amp;handle_end, const dds::core::Time &amp;timestamp)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ab617f32873202032257fd0438b5ca2e8</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a06fc2855604cbe8cf0f8274221cce746</anchor>
      <arglist>(const std::pair&lt; T, dds::core::Time &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a8b8b4c239b4c5f488284c5b5c6608b75</anchor>
      <arglist>(const std::pair&lt; T, dds::core::InstanceHandle &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>register_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>aabca78fe0069a3a247156ec1b15e478d</anchor>
      <arglist>(const T &amp;instance_data)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>register_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a8b71dfaa4e123051dd01d97fa27ca1b9</anchor>
      <arglist>(const T &amp;instance_data, const dds::core::Time &amp;source_timestamp)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>unregister_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a5f1557cd2c730988a11f1a718c4ac6c9</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>unregister_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>acc6077f700184e3674bbb7456f806f0c</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;handle, const dds::core::Time &amp;source_timestamp)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>dispose_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a7d2217f01e28bfe8417820ee5fcd88d2</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>dispose_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a5f2f7532e813b24a22014df6c48e0ef3</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;instance_handle, const dds::core::Time &amp;source_timestamp)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>key_value</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ad8ad942dda570c47c06c5e9aa0a0f664</anchor>
      <arglist>(T &amp;key_holder, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::TopicInstance&lt; T &gt; &amp;</type>
      <name>key_value</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a48d560d4511e6cb0a6a3012c3d314c78</anchor>
      <arglist>(dds::topic::TopicInstance&lt; T &gt; &amp;key_holder, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>lookup_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a2a9d724ef3311c63fb7dec43b7c455c6</anchor>
      <arglist>(const T &amp;key_holder)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a83b450483da1fb39286c433c6eae5d68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a4acb0cccacda84d462fcea5d75d683e9</anchor>
      <arglist>(const dds::pub::qos::DataWriterQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>DataWriter &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a295e7cb405e51233631c90299e759149</anchor>
      <arglist>(const dds::pub::qos::DataWriterQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>const DataWriter &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>adf0d1c4a7c35472eb5f9e26388efd483</anchor>
      <arglist>(dds::pub::qos::DataWriterQos &amp;the_qos) const </arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::Topic&lt; T &gt; &amp;</type>
      <name>topic</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ae64b482096141e7fbd35fc48af5ab394</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::pub::Publisher &amp;</type>
      <name>publisher</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>acd54167fb0b43aea72d1a8eef3512a31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>addb4d40cff154165078a50b23f6dfe19</anchor>
      <arglist>(const dds::core::Duration &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listener</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a0c0b78b2c00d0b72f343a2abbc8641ff</anchor>
      <arglist>(DataWriterListener&lt; T &gt; *l, const dds::core::status::StatusMask &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>DataWriterListener&lt; T &gt; *</type>
      <name>listener</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a5abc54ed45fd5171ea0929f73d03dc57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::LivelinessLostStatus</type>
      <name>liveliness_lost_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a0d68c208def11d6a5c42d6a4942d5ed5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::OfferedDeadlineMissedStatus</type>
      <name>offered_deadline_missed_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a00dd2b064d5e1bf8b05ee19fe46665dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::OfferedIncompatibleQosStatus</type>
      <name>offered_incompatible_qos_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ae63557677057e41953eb9fe707143880</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::PublicationMatchedStatus</type>
      <name>publication_matched_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a168c15cc23444193e442b6e1c247833f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_liveliness</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a9da30174486df6b8ea9d112bfbb64f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>af64edcd9bdb54da32458776dd7187b6e</anchor>
      <arglist>(rti::pub::WriteParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispose_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ae9e6554790aabd7dd7fbcff4d1e6bcc4</anchor>
      <arglist>(rti::pub::WriteParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a3595d77e958103f04c1efd82952018f2</anchor>
      <arglist>(const rti::core::SampleIdentity &amp;sample_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a1f3261757776d71034f7a7f9576894ec</anchor>
      <arglist>(const dds::core::Duration &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::ReliableWriterCacheChangedStatus</type>
      <name>reliable_writer_cache_changed_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a61410af6129f376956a12716b5b01120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::ReliableReaderActivityChangedStatus</type>
      <name>reliable_reader_activity_changed_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a6418f8cefec73ef344404db2e0c3f6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataWriterCacheStatus</type>
      <name>datawriter_cache_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a5078da335fd6452e38ab65114a882b32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataWriterProtocolStatus</type>
      <name>datawriter_protocol_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a08142d02c570651816d293be40a80e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataWriterProtocolStatus</type>
      <name>matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a767f00b6d648108e1786c650a9fa2e83</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;subscription_handle)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataWriterProtocolStatus</type>
      <name>matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a28cab39d9d65c8bd4f75a74b8a850ef6</anchor>
      <arglist>(const rti::core::Locator &amp;subscription_locator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>adac116554b543b7c4228c018a85882f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>af7f03c454050a8750497c0e26363bdfb</anchor>
      <arglist>(const T &amp;instance_data, rti::pub::WriteParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>register_instance</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>aba694ccb524fcaab576235c55bfdc26c</anchor>
      <arglist>(const T &amp;key, rti::pub::WriteParams &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a5ba2a6029acf87272c417370ceef1b71</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ad73abb76dce6924d35338f4c853df307</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandleSeq</type>
      <name>matched_subscriptions</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>acf5d8b5ade4fbb5c2987fd6695737a0e</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;writer)</arglist>
    </member>
    <member kind="function">
      <type>FwdIterator</type>
      <name>matched_subscriptions</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a6f1e137dceef731c5e3db36e66d7c6b3</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;writer, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::SubscriptionBuiltinTopicData</type>
      <name>matched_subscription_data</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a8f94f174b39c2776c7eeb3e3d3995c9a</anchor>
      <arglist>(const dds::pub::DataWriter&lt; T &gt; &amp;writer, const dds::core::InstanceHandle &amp;subscription_handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ad0695f7326531d566f04d9c2cc79308a</anchor>
      <arglist>(const dds::pub::Publisher &amp;publisher, const std::string &amp;topic_name, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a55d69f6f82a28ff917430bb32ab74d5d</anchor>
      <arglist>(const dds::pub::Publisher &amp;publisher, const std::string &amp;topic_name, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datawriters</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ae1f71dadf53ee82ded206b5289d1472e</anchor>
      <arglist>(dds::pub::Publisher publisher, AnyDataWriterBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datawriters</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ae1df1d384c6405fe78a0d5ba80790e38</anchor>
      <arglist>(dds::pub::Publisher publisher, AnyDataWriterForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>WRITER</type>
      <name>find_datawriter_by_topic_name</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>a91340e3f991d87bbfc981a32dcbdd8f1</anchor>
      <arglist>(dds::pub::Publisher publisher, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>WRITER</type>
      <name>find_datawriter_by_name</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ab206b8e7cdce775f08872246effafaa0</anchor>
      <arglist>(dds::pub::Publisher publisher, const std::string &amp;datawriter_name)</arglist>
    </member>
    <member kind="function">
      <type>WRITER</type>
      <name>find_datawriter_by_name</name>
      <anchorfile>classdds_1_1pub_1_1DataWriter.html</anchorfile>
      <anchor>ab3579caa3813c392f515907c42723e4c</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;datawriter_name)</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
    <docanchor file="classdds_1_1pub_1_1DataWriter">Deleting_DataWriter</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::pub::Publisher</name>
    <filename>classdds_1_1pub_1_1Publisher.html</filename>
    <base>dds::core::Entity</base>
    <member kind="function">
      <type></type>
      <name>Publisher</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>abc2b8372c7667391b4184b41d4b60a18</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Publisher</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>aef851b68ea0615711143f61940a5fe3a</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const dds::pub::qos::PublisherQos &amp;qos, dds::pub::PublisherListener *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type>const dds::pub::qos::PublisherQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>ad131ce27a6080bc88a2b514720663544</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>afe087f2e4458ba317070d00ff25a31f6</anchor>
      <arglist>(const dds::pub::qos::PublisherQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>Publisher &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a14e2157eddeb43fa143c0ce9eb50e9ef</anchor>
      <arglist>(const dds::pub::qos::PublisherQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>Publisher &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a02913e6d5defe66f2473ba476f439908</anchor>
      <arglist>(dds::pub::qos::PublisherQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>Publisher &amp;</type>
      <name>default_datawriter_qos</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>ab6d54f8ad789c1026f0d83f028dae97f</anchor>
      <arglist>(const dds::pub::qos::DataWriterQos &amp;dwqos)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::qos::DataWriterQos</type>
      <name>default_datawriter_qos</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a10b5d6c6524fc81b973695b87872c45b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listener</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a860217c0fbc7972f669ba325f87bfce3</anchor>
      <arglist>(Listener *plistener, const dds::core::status::StatusMask &amp;event_mask)</arglist>
    </member>
    <member kind="function">
      <type>Listener *</type>
      <name>listener</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a326dca6d00dcc98a43379fc4d46f72cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a07f97c16dd314029bd8fea87f1968bfd</anchor>
      <arglist>(const dds::core::Duration &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>const dds::domain::DomainParticipant &amp;</type>
      <name>participant</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a251db90561fba4534b06e0ca61f6c3cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a1f3261757776d71034f7a7f9576894ec</anchor>
      <arglist>(const dds::core::Duration &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_publishers</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a380b4b509484869b885a1acb0b88b6c1</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, PublisherForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_publishers</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a6bb103490444d4ef426f0bcb7c9af2c8</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, PublisherBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::Publisher</type>
      <name>find_publisher</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a2d52a29abcd6423793b024f5f5a2a559</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, const std::string &amp;publisher_name)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::Publisher</type>
      <name>implicit_publisher</name>
      <anchorfile>classdds_1_1pub_1_1Publisher.html</anchorfile>
      <anchor>a3d23c7dbe4a3a87544981b089dfb222f</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::SuspendedPublication</name>
    <filename>classdds_1_1pub_1_1SuspendedPublication.html</filename>
    <member kind="function">
      <type></type>
      <name>SuspendedPublication</name>
      <anchorfile>classdds_1_1pub_1_1SuspendedPublication.html</anchorfile>
      <anchor>a614ff154af7838ed6cac82b08862b572</anchor>
      <arglist>(const dds::pub::Publisher &amp;pub)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classdds_1_1pub_1_1SuspendedPublication.html</anchorfile>
      <anchor>a8a2563cf3d960e806d12c7907e229c46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SuspendedPublication</name>
      <anchorfile>classdds_1_1pub_1_1SuspendedPublication.html</anchorfile>
      <anchor>a076f489543369ddc24ce3e961cacdb5c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::pub::qos</name>
    <filename>namespacedds_1_1pub_1_1qos.html</filename>
    <class kind="class">dds::pub::qos::DataWriterQos</class>
    <class kind="class">dds::pub::qos::PublisherQos</class>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>namespacedds_1_1pub_1_1qos.html</anchorfile>
      <anchor>affca45421637ffe9d46b1ae50ad21225</anchor>
      <arglist>(PublisherQosImpl &amp;left, PublisherQosImpl &amp;right) OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::pub::qos::DataWriterQos</name>
    <filename>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</filename>
    <member kind="function">
      <type></type>
      <name>DataWriterQos</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>ab657264452d17d384100ffebf93c62af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataWriterQos &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>a131c8c0e20d210ab5bdb91d45c2e6d15</anchor>
      <arglist>(const dds::topic::qos::TopicQos &amp;topic_qos)</arglist>
    </member>
    <member kind="function">
      <type>const Policy &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>a64a5a0670dfc2da6a1fd97f4e6a27e11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Policy &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>a0053e2c09df8373c88fab98da92b08e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataWriterQos &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>a25c9138108b19f919e956d80755ed84d</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>DataWriterQos &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>aec39b5176be6663907697dbfd1bd8822</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const DataWriterQos &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1DataWriterQos.html</anchorfile>
      <anchor>a2af5eb1f9ef166a0d8394760d79c589b</anchor>
      <arglist>(Policy &amp;p) const </arglist>
    </member>
    <docanchor file="classdds_1_1pub_1_1qos_1_1DataWriterQos">DataWriterQos_policies</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::pub::qos::PublisherQos</name>
    <filename>classdds_1_1pub_1_1qos_1_1PublisherQos.html</filename>
    <member kind="function">
      <type>const POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1PublisherQos.html</anchorfile>
      <anchor>a012ebab1574e40548aabe200f9eeb15d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1PublisherQos.html</anchorfile>
      <anchor>a0f8550b1b9026d55c873af2f8f233fa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PublisherQos &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1PublisherQos.html</anchorfile>
      <anchor>a29f532177f945870ae06b04bc1f14d1e</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>PublisherQos &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1PublisherQos.html</anchorfile>
      <anchor>a1a6426b89dce1f89ce5f2ba206a0431f</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const PublisherQos &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1PublisherQos.html</anchorfile>
      <anchor>aaaf43d76aca68f667d265007d783287a</anchor>
      <arglist>(Policy &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1pub_1_1qos_1_1PublisherQos.html</anchorfile>
      <anchor>affca45421637ffe9d46b1ae50ad21225</anchor>
      <arglist>(PublisherQosImpl &amp;left, PublisherQosImpl &amp;right) OMG_NOEXCEPT</arglist>
    </member>
    <docanchor file="classdds_1_1pub_1_1qos_1_1PublisherQos">PublisherQos_policies</docanchor>
  </compound>
  <compound kind="namespace">
    <name>dds::sub</name>
    <filename>namespacedds_1_1sub.html</filename>
    <namespace>dds::sub::cond</namespace>
    <namespace>dds::sub::qos</namespace>
    <namespace>dds::sub::status</namespace>
    <class kind="class">dds::sub::AnyDataReader</class>
    <class kind="class">dds::sub::AnyDataReaderListener</class>
    <class kind="class">dds::sub::DataReaderListener</class>
    <class kind="class">dds::sub::NoOpDataReaderListener</class>
    <class kind="class">dds::sub::Query</class>
    <class kind="class">dds::sub::SharedSamples</class>
    <class kind="class">dds::sub::SubscriberListener</class>
    <class kind="class">dds::sub::CoherentAccess</class>
    <class kind="class">dds::sub::ReadModeDummyType</class>
    <class kind="class">dds::sub::DataReader</class>
    <class kind="class">dds::sub::GenerationCount</class>
    <class kind="class">dds::sub::Rank</class>
    <class kind="class">dds::sub::Sample</class>
    <class kind="class">dds::sub::SampleInfo</class>
    <class kind="class">dds::sub::Subscriber</class>
    <class kind="class">dds::sub::LoanedSamples</class>
    <member kind="function">
      <type>DataReader&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a77ad8cab48916be7bf54909df048a19b</anchor>
      <arglist>(const AnyDataReader &amp;any_reader)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a98dec1c877cf53e47890cf44b0021274</anchor>
      <arglist>(dds::sub::ReadModeDummyType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a1d38fa7050790fd33745d6e45dc1b55c</anchor>
      <arglist>(dds::sub::ReadModeDummyType)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::MaxSamplesManipulatorFunctor</type>
      <name>max_samples</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a5716896c675131de3607d122c1fc8a9f</anchor>
      <arglist>(uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::ContentFilterManipulatorFunctor</type>
      <name>content</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>ac4d145c43ac533759c58c636516b9a6f</anchor>
      <arglist>(const dds::sub::Query &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::ConditionManipulatorFunctor</type>
      <name>condition</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a141d2ef980dd6398ec1c82c43c8d869b</anchor>
      <arglist>(const dds::sub::cond::ReadCondition &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::StateFilterManipulatorFunctor</type>
      <name>state</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>abe4fe4b5bbfd95ca2c8b6574aa587704</anchor>
      <arglist>(const dds::sub::status::DataState &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::InstanceManipulatorFunctor</type>
      <name>instance</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a05cb12111b9dcf0ba24c82909da3e048</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::NextInstanceManipulatorFunctor</type>
      <name>next_instance</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a7f2a9ad67811eda8d6ca0a2004a733b2</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a5ba2a6029acf87272c417370ceef1b71</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>ad73abb76dce6924d35338f4c853df307</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>const ::dds::core::InstanceHandleSeq</type>
      <name>matched_publications</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a7c4dc52d235b3a6be17de6627919297e</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader)</arglist>
    </member>
    <member kind="function">
      <type>FwdIterator</type>
      <name>matched_publications</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a9256d8874a0ea7c2a34bd4004723a194</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::PublicationBuiltinTopicData</type>
      <name>matched_publication_data</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a62195eaf0aa94ab4ada984966c3ac7eb</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Subscriber</type>
      <name>builtin_subscriber</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>aec280a7aabcebc868a80b4fadbda86ba</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>adb0ca0fea2e520e44ec563a8a9dbc4d2</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const std::string &amp;topic_name, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a5f150033f2e74777606927d67d866806</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const std::string &amp;topic_name, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a40a2f04d7c524e17bd1912e4a6a7f86b</anchor>
      <arglist>(const dds::sub::Subscriber &amp;sub, const dds::topic::TopicDescription&lt; T &gt; &amp;topic_description, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>aaad86600f63cc901f2090154c69d52c2</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::topic::TopicDescription&lt; T &gt; &amp;topic_description, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a5589bfe6a27860c75389fcebcbd45c06</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::sub::status::DataState &amp;data_state, AnyDataReaderFwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a7f212a894508a0447c6c3ee9fb29b371</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::sub::status::DataState &amp;data_state, AnyDataReaderBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;</type>
      <name>move</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a7942c44d62d3dc5daf18c01ae444cd0b</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::iterator</type>
      <name>begin</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a96d9b8a8912f9016edd952ba05bc29df</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::const_iterator</type>
      <name>begin</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>ad2904cf001c1fdd6aa90c0e157ad18bd</anchor>
      <arglist>(const LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::iterator</type>
      <name>end</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a4e3891ac1270cec12a652668dc0f6cbb</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::const_iterator</type>
      <name>end</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>ab0f9d0a711e0164ca9407ea9545f5123</anchor>
      <arglist>(const LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>namespacedds_1_1sub.html</anchorfile>
      <anchor>a3090d109658a9bc7600ce17435cbe8ff</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls1, LoanedSamples&lt; T &gt; &amp;ls2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::AnyDataReader</name>
    <filename>classdds_1_1sub_1_1AnyDataReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AnyDataReader</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>aae78eeffb89d2a0a57c5388848b1f168</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>a88a9ad4346d3c1ca6e075688ce8a2295</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>a8a6a18200b8a8dc0bad2c3162d842c51</anchor>
      <arglist>(const dds::sub::qos::DataReaderQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>topic_name</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>ac512edf4410a021788e3062daa76c601</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>aa718d49901ad417588c114a86e9a92b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::sub::Subscriber &amp;</type>
      <name>subscriber</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>aadb3cdf94a0b784f2824a12e462e1529</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AnyDataReader &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>ad826d0ffa2e152aee2d2309faf1624ab</anchor>
      <arglist>(const DataReader&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::DataReader&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>a500f1daa69b12d6165a24d4c3d99cc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>a26a94766fa7853f42e34d04e7c8cc0b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>a446a601c1b67040ffe522267840d2855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataReader&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReader.html</anchorfile>
      <anchor>a77ad8cab48916be7bf54909df048a19b</anchor>
      <arglist>(const AnyDataReader &amp;any_reader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::AnyDataReaderListener</name>
    <filename>classdds_1_1sub_1_1AnyDataReaderListener.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a0b4a6aecd462f66424ea14c41db28d90</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::RequestedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a6420c986262a7c03a927bacd186f3b68</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::RequestedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>ad70501e73d92e0261ad8fb9a626374e8</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SampleRejectedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a460590d737ac2cf7b1705e75b447bee9</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::LivelinessChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>aa3b505b19d45572597c23fc38044a1fb</anchor>
      <arglist>(AnyDataReader &amp;the_reader)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a0c960ca2975bc3de2b5c68694e54a0f0</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SubscriptionMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a5c35243572e49ac1f2a0fec45ba9142b</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SampleLostStatus &amp;status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::DataReaderListener</name>
    <filename>classdds_1_1sub_1_1DataReaderListener.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>acc546d175cff49e10af9b21bd550add3</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader, const dds::core::status::RequestedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>a98f67391bce8bcc370fadf2d398e91df</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader, const dds::core::status::RequestedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>a2be1fe36f6d537f83beca9e1f7306271</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader, const dds::core::status::SampleRejectedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>a7c466a33ef2692196e7e178dab5c0dc1</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader, const dds::core::status::LivelinessChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>a24101fc5d0e896dcedfc97455c766df0</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>ad7652a4cba4715902f8d97be5cb21425</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader, const dds::core::status::SubscriptionMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classdds_1_1sub_1_1DataReaderListener.html</anchorfile>
      <anchor>acbcd3d1152d2130db76994f1fb7e15bc</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;reader, const dds::core::status::SampleLostStatus &amp;status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::NoOpDataReaderListener</name>
    <filename>classdds_1_1sub_1_1NoOpDataReaderListener.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">dds::sub::DataReaderListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>aeb8599b85565dd388b8eb6eaa0098a8e</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;, const dds::core::status::RequestedDeadlineMissedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>aa2f8a241383dce30dff38d958fb492c2</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;, const dds::core::status::RequestedIncompatibleQosStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>aedda24be5eee8b86d4857ea13a96bc57</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;, const dds::core::status::SampleRejectedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>a9eb0225f7dfda4cf4a88e6af854d91e1</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;, const dds::core::status::LivelinessChangedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>a2a09dc567b5c5185a34c56e9f7dd0081</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>a1986471b11eeb6231638985aab7a3a55</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;, const dds::core::status::SubscriptionMatchedStatus &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classdds_1_1sub_1_1NoOpDataReaderListener.html</anchorfile>
      <anchor>a2fd4f83fbd0251b4beefb9d20c9347c1</anchor>
      <arglist>(DataReader&lt; T &gt; &amp;, const dds::core::status::SampleLostStatus &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::Query</name>
    <filename>classdds_1_1sub_1_1Query.html</filename>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a98619d1f5554f5a14381fac624cd2997</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const std::string &amp;query_expression)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a1c005b45750b5bd3cff7f98d69efb035</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const std::string &amp;query_expression, const FWIterator &amp;params_begin, const FWIterator &amp;params_end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a0d70e58f841e85d7c3fe351fa5ebd614</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const std::string &amp;query_expression, const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>expression</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>acad7d37b5671072eaa405b7db33c77c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a7ab6103049caabde9de17ef080f1ee4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a0504d0dabdde7bcbc12b3ea7a8d15cce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a64d7a074a850a4450ad61fa0e4e39229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>ad5facc565b851353d0516fa5ec8737a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameters</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>ae5ec9623f65cafa5b47391ab89dfc179</anchor>
      <arglist>(const FWIterator &amp;begin, const FWIterator end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_parameter</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>aba85f8cbf816e1fa97ea3d74b9b4ac2f</anchor>
      <arglist>(const std::string &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>parameters_length</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>a0d589f18ce0291ec1298ec1cfa2cba0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>parameters</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>ab0e37cb70e31d3fa21e124bc05912c90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const AnyDataReader &amp;</type>
      <name>data_reader</name>
      <anchorfile>classdds_1_1sub_1_1Query.html</anchorfile>
      <anchor>ae5b82e25c600a4f2aa41863f7be28698</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::SharedSamples</name>
    <filename>classdds_1_1sub_1_1SharedSamples.html</filename>
    <member kind="function">
      <type></type>
      <name>SharedSamples</name>
      <anchorfile>classdds_1_1sub_1_1SharedSamples.html</anchorfile>
      <anchor>a598a1c5f8f8770990b1a9db930306be0</anchor>
      <arglist>(dds::sub::LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1SharedSamples.html</anchorfile>
      <anchor>aa8f4696736b39d40388c52df69a39a7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1SharedSamples.html</anchorfile>
      <anchor>afa03d25b02fe2e8c16a47a1bfc289857</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DELEGATE&lt; T &gt;::value_type</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1sub_1_1SharedSamples.html</anchorfile>
      <anchor>a97e8d7fd1b0d431965f03a11ac242af4</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>length</name>
      <anchorfile>classdds_1_1sub_1_1SharedSamples.html</anchorfile>
      <anchor>a3c5a79b5fe04f8404483c541ec976ec6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::SubscriberListener</name>
    <filename>classdds_1_1sub_1_1SubscriberListener.html</filename>
    <base virtualness="virtual">dds::sub::AnyDataReaderListener</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a0b4a6aecd462f66424ea14c41db28d90</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::RequestedDeadlineMissedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a6420c986262a7c03a927bacd186f3b68</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::RequestedIncompatibleQosStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>ad70501e73d92e0261ad8fb9a626374e8</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SampleRejectedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a460590d737ac2cf7b1705e75b447bee9</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::LivelinessChangedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>aa3b505b19d45572597c23fc38044a1fb</anchor>
      <arglist>(AnyDataReader &amp;the_reader)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a0c960ca2975bc3de2b5c68694e54a0f0</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SubscriptionMatchedStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classdds_1_1sub_1_1AnyDataReaderListener.html</anchorfile>
      <anchor>a5c35243572e49ac1f2a0fec45ba9142b</anchor>
      <arglist>(AnyDataReader &amp;the_reader, const dds::core::status::SampleLostStatus &amp;status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::CoherentAccess</name>
    <filename>classdds_1_1sub_1_1CoherentAccess.html</filename>
    <member kind="function">
      <type></type>
      <name>CoherentAccess</name>
      <anchorfile>classdds_1_1sub_1_1CoherentAccess.html</anchorfile>
      <anchor>aa43e379f5c91bd793fcc4be5a26097c8</anchor>
      <arglist>(const dds::sub::Subscriber &amp;sub)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1CoherentAccess.html</anchorfile>
      <anchor>ab4a5b58339838b020356a947b811ee91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoherentAccess</name>
      <anchorfile>classdds_1_1sub_1_1CoherentAccess.html</anchorfile>
      <anchor>a40282adefefbe9fd094dd5e5c9b2ebbb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::ReadModeDummyType</name>
    <filename>classdds_1_1sub_1_1ReadModeDummyType.html</filename>
  </compound>
  <compound kind="class">
    <name>dds::sub::DataReader</name>
    <filename>classdds_1_1sub_1_1DataReader.html</filename>
    <templarg>T</templarg>
    <base>dds::core::Entity</base>
    <class kind="class">dds::sub::DataReader::ManipulatorSelector</class>
    <class kind="class">dds::sub::DataReader::Selector</class>
    <member kind="function">
      <type></type>
      <name>DataReader</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aa7491d53010504aa2573e2c9c22b766e</anchor>
      <arglist>(const dds::sub::Subscriber &amp;sub, const dds::topic::Topic&lt; T &gt; &amp;topic)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataReader</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a3ee065de0b7d05c645a5bfede152ef64</anchor>
      <arglist>(const dds::sub::Subscriber &amp;sub, const dds::topic::Topic&lt; T &gt; &amp;topic, const dds::sub::qos::DataReaderQos &amp;qos, dds::sub::DataReaderListener&lt; T &gt; *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataReader</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a70fbef7db59dd93bf361eed95662d0ca</anchor>
      <arglist>(const dds::sub::Subscriber &amp;sub, const dds::topic::ContentFilteredTopic&lt; T &gt; &amp;topic)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataReader</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aea218a11fcf53980988bd1ce1dae2ed3</anchor>
      <arglist>(const dds::sub::Subscriber &amp;sub, const dds::topic::ContentFilteredTopic&lt; T &gt; &amp;topic, const dds::sub::qos::DataReaderQos &amp;qos, dds::sub::DataReaderListener&lt; T &gt; *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type>const dds::sub::status::DataState &amp;</type>
      <name>default_filter_state</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>adb6ad381af735e906f7c9b1fde1f273c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataReader &amp;</type>
      <name>default_filter_state</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a7ddb11e597238fe3558972850c60aa91</anchor>
      <arglist>(const dds::sub::status::DataState &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>DataReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a53331cfd526f2caf28a5792469a8ff0d</anchor>
      <arglist>(dds::sub::LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>ManipulatorSelector</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a8556f8e4487d6f2bc0650e7c2464d316</anchor>
      <arglist>(bool(*manipulator)(ReadModeDummyType))</arglist>
    </member>
    <member kind="function">
      <type>ManipulatorSelector</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a6b537f6b0fa0286fbcebd196e6975298</anchor>
      <arglist>(Functor f)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a864f65d2246d2f854cf0b892ff6b8631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aa63c8e102e4abd5446198bcfe71ebfe1</anchor>
      <arglist>()</arglist>
      <docanchor file="classdds_1_1sub_1_1DataReader">Data_and_sampleinfo_sequence</docanchor>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a4cfead6ba30bef0b6a21f587e998d694</anchor>
      <arglist>(SamplesFWIterator sfit, int32_t max_samples)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ac65c519df073fa47aefd77dfba81db9c</anchor>
      <arglist>(SamplesFWIterator sfit, int32_t max_samples)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a7f02ad93f27d7907931b3bbec02f0b97</anchor>
      <arglist>(SamplesBIIterator sbit)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>acd2cb28278f964972cf23cedbc75a4e7</anchor>
      <arglist>(SamplesBIIterator sbit)</arglist>
    </member>
    <member kind="function">
      <type>Selector</type>
      <name>select</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a2226c4f7146d1a4bcd79947e9a12738d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>key_value</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a44fca51d1564498fd383611e7f16a43f</anchor>
      <arglist>(T &amp;key_holder, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::TopicInstance&lt; T &gt; &amp;</type>
      <name>key_value</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>af7dc83d19666ba8dcb3d62787f647caf</anchor>
      <arglist>(dds::topic::TopicInstance&lt; T &gt; &amp;key_holder, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>lookup_instance</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aaad87787ea7ac175a8f874782c51d9cc</anchor>
      <arglist>(const T &amp;key_holder) const </arglist>
    </member>
    <member kind="function">
      <type>dds::topic::TopicDescription&lt; DataType &gt;</type>
      <name>topic_description</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>af588bc467075e8a20f5c0d84d219727d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::sub::Subscriber &amp;</type>
      <name>subscriber</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a24fd1878381256abe2e2810c6060d1af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listener</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a19274310c2c830249cb04f7911332d40</anchor>
      <arglist>(Listener *the_listener, const dds::core::status::StatusMask &amp;event_mask)</arglist>
    </member>
    <member kind="function">
      <type>Listener *</type>
      <name>listener</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ac162b458a98998481060e407bf2f82d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aad9b32eaa6a455a91b31ecaa8af6fc53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aaf3fed5c3045ef6513b5793c88fddd87</anchor>
      <arglist>(const dds::sub::qos::DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>DataReader &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>af0c90f16db6a0fa83a30cc5bdb5da1d2</anchor>
      <arglist>(const dds::sub::qos::DataReaderQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>DataReader &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>adb9601700f017a3eea6f10918140089d</anchor>
      <arglist>(dds::sub::qos::DataReaderQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>afc394511389a6bac9d2588110d1f64d4</anchor>
      <arglist>(const dds::core::Duration &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::LivelinessChangedStatus</type>
      <name>liveliness_changed_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aaa62ce5881f0ef9b1debdb2eea621de6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::SampleRejectedStatus</type>
      <name>sample_rejected_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a1721a567350e43314bdca0903eff9bb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::SampleLostStatus</type>
      <name>sample_lost_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a0aab2db275b93ac7c4f6a0847f252370</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::RequestedDeadlineMissedStatus</type>
      <name>requested_deadline_missed_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ad3b79801c17394e458f48470184abe9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::RequestedIncompatibleQosStatus</type>
      <name>requested_incompatible_qos_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ade857d7c82d2523f64d4e3753b67ddaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::SubscriptionMatchedStatus</type>
      <name>subscription_matched_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a334aeba738ebdd5859a9e29b95ba5aff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataReaderCacheStatus</type>
      <name>datareader_cache_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a6eab1173c29d93955f8db0318d2e823f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataReaderProtocolStatus</type>
      <name>datareader_protocol_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ab18f149eded2563a4233e5011cf390a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::status::DataReaderProtocolStatus</type>
      <name>matched_publication_datareader_protocol_status</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ab9be6a8b51e7d85da0b7831524c1c19f</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;publication_handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acknowledge_all</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a8848bbcf77db80e7a730a0453b058eaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acknowledge_all</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ad24ef5691ef403b93338116b27770013</anchor>
      <arglist>(const AckResponseData &amp;response_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acknowledge_sample</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a8a016cdeca90b488d85d0b8ac81907fb</anchor>
      <arglist>(const dds::sub::SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acknowledge_sample</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ae6b5b2c3e384ee21b68d776d18c53281</anchor>
      <arglist>(const dds::sub::SampleInfo &amp;sample_info, const AckResponseData &amp;response_data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a8017db2809236d3c5819ccb07f749cf7</anchor>
      <arglist>(T &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aaf3c7c2fbe38c1a6c12d828f9516920d</anchor>
      <arglist>(T &amp;sample, dds::sub::SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>af64b28208ffbf0a13be732b084f12774</anchor>
      <arglist>(T &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a7296899253c7c791a098677c8730ed98</anchor>
      <arglist>(T &amp;sample, dds::sub::SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>topic_name</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a6f241a4c489828564b86362543c40b0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ac8d512a35b7983507ef1d71a9e771288</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a5ae591df94fc66ccb85cbb6565368bca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a98dec1c877cf53e47890cf44b0021274</anchor>
      <arglist>(dds::sub::ReadModeDummyType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a1d38fa7050790fd33745d6e45dc1b55c</anchor>
      <arglist>(dds::sub::ReadModeDummyType)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::MaxSamplesManipulatorFunctor</type>
      <name>max_samples</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a5716896c675131de3607d122c1fc8a9f</anchor>
      <arglist>(uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::ContentFilterManipulatorFunctor</type>
      <name>content</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ac4d145c43ac533759c58c636516b9a6f</anchor>
      <arglist>(const dds::sub::Query &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::ConditionManipulatorFunctor</type>
      <name>condition</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a141d2ef980dd6398ec1c82c43c8d869b</anchor>
      <arglist>(const dds::sub::cond::ReadCondition &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::StateFilterManipulatorFunctor</type>
      <name>state</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>abe4fe4b5bbfd95ca2c8b6574aa587704</anchor>
      <arglist>(const dds::sub::status::DataState &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::InstanceManipulatorFunctor</type>
      <name>instance</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a05cb12111b9dcf0ba24c82909da3e048</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::functors::NextInstanceManipulatorFunctor</type>
      <name>next_instance</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a7f2a9ad67811eda8d6ca0a2004a733b2</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a5ba2a6029acf87272c417370ceef1b71</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>ad73abb76dce6924d35338f4c853df307</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>const ::dds::core::InstanceHandleSeq</type>
      <name>matched_publications</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a7c4dc52d235b3a6be17de6627919297e</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader)</arglist>
    </member>
    <member kind="function">
      <type>FwdIterator</type>
      <name>matched_publications</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a9256d8874a0ea7c2a34bd4004723a194</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::PublicationBuiltinTopicData</type>
      <name>matched_publication_data</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a62195eaf0aa94ab4ada984966c3ac7eb</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::ParticipantBuiltinTopicData</type>
      <name>matched_publication_participant_data</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a00bcf5ff7f57538b74b77a9adf1388d2</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>adb0ca0fea2e520e44ec563a8a9dbc4d2</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const std::string &amp;topic_name, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a5f150033f2e74777606927d67d866806</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const std::string &amp;topic_name, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a533ddddfa18d598f5dc11b1e4dab1d90</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::topic::TopicDescription&lt; T &gt; &amp;topic_description, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>aaad86600f63cc901f2090154c69d52c2</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::topic::TopicDescription&lt; T &gt; &amp;topic_description, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datareaders</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a47a5e00e44c774d058433098fa1184d5</anchor>
      <arglist>(dds::sub::Subscriber subscriber, AnyDataReaderBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datareaders</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a20a08ad8afe86c2107969f0d5e9481ab</anchor>
      <arglist>(dds::sub::Subscriber subscriber, AnyDataReaderForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_topic_name</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>a15d0d3c143e398a32fdc759bd40f0ffc</anchor>
      <arglist>(dds::sub::Subscriber subscriber, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_name</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>abcb6a763d3cba1c6a17651bbe97dd38d</anchor>
      <arglist>(dds::sub::Subscriber subscriber, const std::string &amp;datareader_name)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_topic_description</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>adbe917f8631ea30a13f7502c2e7934c3</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::topic::TopicDescription&lt; T &gt; &amp;topic_description)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_name</name>
      <anchorfile>classdds_1_1sub_1_1DataReader.html</anchorfile>
      <anchor>af95e2c1977a5bbc02289c2070e671e65</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;datareader_name)</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::DataReader::ManipulatorSelector</name>
    <filename>classdds_1_1sub_1_1DataReader_1_1ManipulatorSelector.html</filename>
    <member kind="function">
      <type>ManipulatorSelector &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1ManipulatorSelector.html</anchorfile>
      <anchor>a6e2156b20a77e93db18edac20796e50e</anchor>
      <arglist>(dds::sub::LoanedSamples&lt; T &gt; &amp;samples)</arglist>
    </member>
    <member kind="function">
      <type>ManipulatorSelector &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1ManipulatorSelector.html</anchorfile>
      <anchor>af0a09f8356e6ae3cf2333edf2ce15d92</anchor>
      <arglist>(bool(*manipulator)(ReadModeDummyType))</arglist>
    </member>
    <member kind="function">
      <type>ManipulatorSelector &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1ManipulatorSelector.html</anchorfile>
      <anchor>a8319ac595c2dfdd79b5441ba942fe0cd</anchor>
      <arglist>(Functor f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::DataReader::Selector</name>
    <filename>classdds_1_1sub_1_1DataReader_1_1Selector.html</filename>
    <member kind="function">
      <type></type>
      <name>Selector</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a554f94a7cd3f8c49f9e04d88bcfc45d7</anchor>
      <arglist>(DataReader &amp;dr)</arglist>
    </member>
    <member kind="function">
      <type>Selector &amp;</type>
      <name>instance</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a68edc8af79f33deaf685e9423fe5fb41</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>Selector &amp;</type>
      <name>next_instance</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>aaf12892dfc88073abbf6db4ebb171ad5</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>Selector &amp;</type>
      <name>state</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a8ffef4f2b0f9924fef6d53f2d02b8cd5</anchor>
      <arglist>(const dds::sub::status::DataState &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Selector &amp;</type>
      <name>content</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a78931d4f81853904e4b2f7b297839716</anchor>
      <arglist>(const dds::sub::Query &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>Selector &amp;</type>
      <name>condition</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a6d38fd49fc0432ee602a2a98081b3226</anchor>
      <arglist>(const dds::sub::cond::ReadCondition &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Selector &amp;</type>
      <name>max_samples</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a429ad21e9aeefb8378ed51bec597c899</anchor>
      <arglist>(int32_t n)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::LoanedSamples&lt; T &gt;</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>acf328113d3517da39cd46adeb9ed8ad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::LoanedSamples&lt; T &gt;</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a9c1eb84ae2ed9ccfc8ec5f5b04592a4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>ab91cb9795dc6524743a832de50498d0e</anchor>
      <arglist>(SamplesFWIterator sfit, int32_t max_samples)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a34de1dc5f6ab88d82d90b3125e9f68e2</anchor>
      <arglist>(SamplesFWIterator sfit, int32_t max_samples)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a8b61df4a4b81f027ef3f24cc5f5ef8e7</anchor>
      <arglist>(SamplesBIIterator sbit)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>take</name>
      <anchorfile>classdds_1_1sub_1_1DataReader_1_1Selector.html</anchorfile>
      <anchor>a8b953af9fe203cc1394ccc825512660f</anchor>
      <arglist>(SamplesBIIterator sbit)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::GenerationCount</name>
    <filename>classdds_1_1sub_1_1GenerationCount.html</filename>
    <member kind="function">
      <type></type>
      <name>GenerationCount</name>
      <anchorfile>classdds_1_1sub_1_1GenerationCount.html</anchorfile>
      <anchor>aa0bf9ad5a5b893495bdcd1aaadc5b011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenerationCount</name>
      <anchorfile>classdds_1_1sub_1_1GenerationCount.html</anchorfile>
      <anchor>ac4a127121695ce4c22bd16f0ef47b789</anchor>
      <arglist>(int32_t disposed_count, int32_t no_writers_count)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>disposed</name>
      <anchorfile>classdds_1_1sub_1_1GenerationCount.html</anchorfile>
      <anchor>acfc735ef1e69a279b66dcda4fd32b0dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>no_writers</name>
      <anchorfile>classdds_1_1sub_1_1GenerationCount.html</anchorfile>
      <anchor>aa61d7a439396249e439ff0ac55bbe290</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::Rank</name>
    <filename>classdds_1_1sub_1_1Rank.html</filename>
    <member kind="function">
      <type></type>
      <name>Rank</name>
      <anchorfile>classdds_1_1sub_1_1Rank.html</anchorfile>
      <anchor>aa4bb2c62616a0c54e109449acaf6ce0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rank</name>
      <anchorfile>classdds_1_1sub_1_1Rank.html</anchorfile>
      <anchor>a71177190b4f249c7ba1cb2f6f14fed3c</anchor>
      <arglist>(int32_t sample_rank, int32_t generation_rank, int32_t absolute_generation_rank)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>sample</name>
      <anchorfile>classdds_1_1sub_1_1Rank.html</anchorfile>
      <anchor>a95365259edf929f3245bb4ea72cdaaff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>generation</name>
      <anchorfile>classdds_1_1sub_1_1Rank.html</anchorfile>
      <anchor>a6e7c65785a703851c89dfaeb8c2d8ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>absolute_generation</name>
      <anchorfile>classdds_1_1sub_1_1Rank.html</anchorfile>
      <anchor>a376a386832ee3216e3ebea63d747931f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::Sample</name>
    <filename>classdds_1_1sub_1_1Sample.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>aebb910b5514ea8048f6a0b85b93eaf1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>a7c2a351fd74ac499b53b54a5018d048f</anchor>
      <arglist>(const T &amp;data, const SampleInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>a740a609b2236538be456ce86f2e2a639</anchor>
      <arglist>(const rti::sub::LoanedSample&lt; T &gt; &amp;sample_ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>a8bfa6f731a81f793dc5a8e5553933b12</anchor>
      <arglist>(const Sample &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const DataType &amp;</type>
      <name>data</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>ac570189f016bf00bb5256a04f1d64ea4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>data</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>a458c9f6179aa11bdb0f61bf35f0f2447</anchor>
      <arglist>(const DataType &amp;the_data)</arglist>
    </member>
    <member kind="function">
      <type>const SampleInfo &amp;</type>
      <name>info</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>a32ea11f3265f0f173e502e31e6a83f64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>info</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>ad47720eff687ddc8a5f53dc4d75100df</anchor>
      <arglist>(const SampleInfo &amp;the_info)</arglist>
    </member>
    <member kind="function">
      <type>Sample &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1sub_1_1Sample.html</anchorfile>
      <anchor>a57a0a7956ebfca628d4e7133ef8adc28</anchor>
      <arglist>(const rti::sub::LoanedSample&lt; T &gt; &amp;sample_ref)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::SampleInfo</name>
    <filename>classdds_1_1sub_1_1SampleInfo.html</filename>
    <member kind="function">
      <type>dds::core::Time</type>
      <name>source_timestamp</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>abb3b1b191bc4705e0ee482153056be83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::sub::status::DataState</type>
      <name>state</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a3df3a75de0ca2ccc1876e80a945172c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::sub::GenerationCount</type>
      <name>generation_count</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>ae19381c7ddd5a0e0a2b183867afdc807</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Rank</type>
      <name>rank</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>ab481090cb07f081a1f7027bdd660a751</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>af77d354c564302067f707013f3053a2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>ad1e2acb57dc6a306e7fd87bdd4c84072</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>publication_handle</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a726b5b3a91bc9eab3d5b0af332e90341</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::Time</type>
      <name>reception_timestamp</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>abd95f6aba466a25ecf93d59162f64007</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>publication_sequence_number</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a1ef838cc1a17fa02e043e49d283d289c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>reception_sequence_number</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a6b9186010516c6d7651379b0ded6e8c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>original_publication_virtual_guid</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a12072c6ffa309d44e10201f9ec125ac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>original_publication_virtual_sequence_number</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a957823c3326cb943955fff5dfa53a90a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleIdentity</type>
      <name>original_publication_virtual_sample_identity</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a156c43baf1752a054744de5a513c31bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>related_original_publication_virtual_guid</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a89a321bebce10fe5af0d5a73519ca528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>related_original_publication_virtual_sequence_number</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a636763b991c5eac739adc98bfbcd4018</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleIdentity</type>
      <name>related_original_publication_virtual_sample_identity</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a5dd16124e81e12f8d10775d2700268ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleFlag</type>
      <name>flag</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>ae85f8bc9194c560d6d2dedd65a28be45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>source_guid</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a02114b56a866fac45c24a2248671c7a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>related_source_guid</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>abaa4038c655d3186c04ea687f2bb3bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>related_subscription_guid</name>
      <anchorfile>classdds_1_1sub_1_1SampleInfo.html</anchorfile>
      <anchor>a4cf5a4704854531b4e5f1c580e7f9491</anchor>
      <arglist>() const</arglist>
    </member>
    <docanchor file="classdds_1_1sub_1_1SampleInfo">Interpretation_SampleInfo</docanchor>
    <docanchor file="classdds_1_1sub_1_1SampleInfo">Interpretation_generation_count</docanchor>
    <docanchor file="classdds_1_1sub_1_1SampleInfo">Interpretation_rank</docanchor>
    <docanchor file="classdds_1_1sub_1_1SampleInfo">Interpretation_counters_ranks</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::sub::Subscriber</name>
    <filename>classdds_1_1sub_1_1Subscriber.html</filename>
    <base>dds::core::Entity</base>
    <member kind="function">
      <type></type>
      <name>Subscriber</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a8e26f3f691f0b421da4bfdbf899c0083</anchor>
      <arglist>(const ::dds::domain::DomainParticipant &amp;participant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Subscriber</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>ab1671766748436c1a35b5156d5db25fd</anchor>
      <arglist>(const ::dds::domain::DomainParticipant &amp;dp, const dds::sub::qos::SubscriberQos &amp;qos, dds::sub::SubscriberListener *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_datareaders</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a2405cbe584b3efba00959a6fb354462a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listener</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>ad0224ff1e8287e5f7096da1aa6e66cc2</anchor>
      <arglist>(Listener *listener, const dds::core::status::StatusMask &amp;event_mask)</arglist>
    </member>
    <member kind="function">
      <type>Listener *</type>
      <name>listener</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>aab995d3adbeb09848cd6d3d715fe923a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::SubscriberQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a8074933bd88a14a853eab68f9bce43ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a8dd049344872e2bd5987812208d720bb</anchor>
      <arglist>(const dds::sub::qos::SubscriberQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::qos::DataReaderQos</type>
      <name>default_datareader_qos</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>aa4e8ed304ab93ba92d2e4885832a6233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Subscriber &amp;</type>
      <name>default_datareader_qos</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a0c59360758764a031940c8f131e40b8d</anchor>
      <arglist>(const dds::sub::qos::DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>const dds::domain::DomainParticipant &amp;</type>
      <name>participant</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a2d9b187aa9baadda125bb0fe39d2efc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Subscriber</type>
      <name>builtin_subscriber</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>aec280a7aabcebc868a80b4fadbda86ba</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_subscribers</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>ab633d0544091e7d75524e6bdefeeb396</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, SubscriberForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_subscribers</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a5e24de56326287b0c7b8c6cf1c95a6a1</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, SubscriberBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Subscriber</type>
      <name>find_subscriber</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a4eee2cba68953efaf65d2e8be4815b2c</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, const std::string &amp;subscriber_name)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Subscriber</type>
      <name>implicit_subscriber</name>
      <anchorfile>classdds_1_1sub_1_1Subscriber.html</anchorfile>
      <anchor>a330cf06b4880c960f1b6baf6fa4cff4f</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::LoanedSamples</name>
    <filename>classdds_1_1sub_1_1LoanedSamples.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>SampleIterator&lt; T &gt;</type>
      <name>iterator</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a993a3702ae5993ffeadf1fb6a79cc216</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoanedSamples</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a771e5c08d4d4e2d18e0bd909a0b53309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LoanedSamples</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a5d507aa00146b87c7664d0e511ead416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>operator[]</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a88f20e71e3af3da2e087d952fef1ebad</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>length</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a5b2068d3ff02a2099070acfda874e10c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>return_loan</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a2ee7565b32560ab659981da69a2f4bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a417790627e30ca877a6a556014973227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>afd989c219c45584247b7715a16927fb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a2451ed408be2d5428543097ef4bd0416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>ac7357ac20f073839b1c762d8fd88620d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a873602001bfc3387d7494f621de11b76</anchor>
      <arglist>(LoanedSamples &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoanedSamples</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>af3f948bca0ea0f50a07e31d93831acb2</anchor>
      <arglist>(LoanedSamples &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;</type>
      <name>move</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a7942c44d62d3dc5daf18c01ae444cd0b</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a96d9b8a8912f9016edd952ba05bc29df</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::const_iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>ad2904cf001c1fdd6aa90c0e157ad18bd</anchor>
      <arglist>(const LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a4e3891ac1270cec12a652668dc0f6cbb</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;::const_iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>ab0f9d0a711e0164ca9407ea9545f5123</anchor>
      <arglist>(const LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a3090d109658a9bc7600ce17435cbe8ff</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls1, LoanedSamples&lt; T &gt; &amp;ls2)</arglist>
    </member>
    <member kind="function">
      <type>ValidSampleIterator&lt; T &gt;</type>
      <name>valid_samples</name>
      <anchorfile>classdds_1_1sub_1_1LoanedSamples.html</anchorfile>
      <anchor>a5417c8de7de7098e10ead01915b1b0cf</anchor>
      <arglist>(const SampleIterator&lt; T &gt; &amp;sample_iterator)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::sub::cond</name>
    <filename>namespacedds_1_1sub_1_1cond.html</filename>
    <class kind="class">dds::sub::cond::ReadCondition</class>
  </compound>
  <compound kind="class">
    <name>dds::sub::cond::ReadCondition</name>
    <filename>classdds_1_1sub_1_1cond_1_1ReadCondition.html</filename>
    <base>dds::core::cond::Condition</base>
    <member kind="function">
      <type></type>
      <name>ReadCondition</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a09fd5c55a7f2a17ac9c8a43966df1b72</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::sub::status::DataState &amp;status)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadCondition</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>ac57f388d407ea6e1f063e7ef9447a438</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::sub::status::DataState &amp;status, const Functor &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>const dds::sub::status::DataState</type>
      <name>state_filter</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>aad25dcc2c2e4072029af9bb1c03ac419</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const AnyDataReader &amp;</type>
      <name>data_reader</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a9b3fb9db7cc0d11ed397dabd2eebbe7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a37f1368bbcb2f60093b0faeb5a81a60f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a2c4ae232f7bc65a22762f879a5116f2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>a951e1017981f4110068dbf801d8bb29e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trigger_value</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>adb43cddbf06e930d9e6b388847b11b2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::cond::dds::sub::cond::QueryCondition</name>
    <filename>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</filename>
    <base>dds::sub::cond::ReadCondition</base>
    <member kind="typedef">
      <type>DELEGATE::iterator</type>
      <name>iterator</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>aef96ddb9c385e2fdbdddad9ac16a5063</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DELEGATE::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>a2dbf4d71d1e65b21e620d6fad625e4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QueryCondition</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>a63dc6249311fa2f0940ab39173591f2a</anchor>
      <arglist>(const dds::sub::Query &amp;query, const dds::sub::status::DataState &amp;status)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QueryCondition</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>a1c2c64e6e8dccafab08b9c2397291fd4</anchor>
      <arglist>(const dds::sub::Query &amp;query, const dds::sub::status::DataState &amp;status, const Functor &amp;functor)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>expression</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>a846f8efcf9446a070e2dfb1e45f17998</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>parameters</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>a75294b14cdfae2490faf0b553788d8a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameters</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>acbf8f7dfcf434df65bc86adc66e960dd</anchor>
      <arglist>(const FWIterator &amp;begin, const FWIterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>parameters_length</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1dds_1_1sub_1_1cond_1_1QueryCondition.html</anchorfile>
      <anchor>a39b76d4ef52d80fb89e5459cbb38b97d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadCondition</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a09fd5c55a7f2a17ac9c8a43966df1b72</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::sub::status::DataState &amp;status)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadCondition</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>ac57f388d407ea6e1f063e7ef9447a438</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::sub::status::DataState &amp;status, const Functor &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>const dds::sub::status::DataState</type>
      <name>state_filter</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>aad25dcc2c2e4072029af9bb1c03ac419</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const AnyDataReader &amp;</type>
      <name>data_reader</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a9b3fb9db7cc0d11ed397dabd2eebbe7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a37f1368bbcb2f60093b0faeb5a81a60f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>classdds_1_1sub_1_1cond_1_1ReadCondition.html</anchorfile>
      <anchor>a2c4ae232f7bc65a22762f879a5116f2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>a951e1017981f4110068dbf801d8bb29e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trigger_value</name>
      <anchorfile>classdds_1_1core_1_1cond_1_1Condition.html</anchorfile>
      <anchor>adb43cddbf06e930d9e6b388847b11b2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::sub::qos</name>
    <filename>namespacedds_1_1sub_1_1qos.html</filename>
    <class kind="class">dds::sub::qos::DataReaderQos</class>
    <class kind="class">dds::sub::qos::SubscriberQos</class>
  </compound>
  <compound kind="class">
    <name>dds::sub::qos::DataReaderQos</name>
    <filename>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</filename>
    <member kind="function">
      <type></type>
      <name>DataReaderQos</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>ad951293ecebeb5b247924aab36145a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataReaderQos &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>afbc2a898dde2e6b5e34da220c01a3aae</anchor>
      <arglist>(const dds::topic::qos::TopicQos &amp;topic_qos)</arglist>
    </member>
    <member kind="function">
      <type>const POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>a26d4910587e5d74b4450d3c048095162</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>a27021d05b09f790af3613e2fd9e837a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataReaderQos &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>a613e6e7dfc98b883380cd3bb8f3ed93e</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>DataReaderQos &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>a7fa94722fb18e004a9e469602b91b0e0</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const DataReaderQos &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1DataReaderQos.html</anchorfile>
      <anchor>a1dcd2821407f891f888a0ee4c2a72e47</anchor>
      <arglist>(Policy &amp;p) const </arglist>
    </member>
    <docanchor file="classdds_1_1sub_1_1qos_1_1DataReaderQos">DataReaderQos_policies</docanchor>
  </compound>
  <compound kind="class">
    <name>dds::sub::qos::SubscriberQos</name>
    <filename>classdds_1_1sub_1_1qos_1_1SubscriberQos.html</filename>
    <member kind="function">
      <type>const POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1SubscriberQos.html</anchorfile>
      <anchor>a31d5f018023c57a4a14dae3fb54a4585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1sub_1_1qos_1_1SubscriberQos.html</anchorfile>
      <anchor>abc0e48b2ee8dfa0baa1ff346a933bfbc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::sub::status</name>
    <filename>namespacedds_1_1sub_1_1status.html</filename>
    <class kind="class">dds::sub::status::SampleState</class>
    <class kind="class">dds::sub::status::ViewState</class>
    <class kind="class">dds::sub::status::InstanceState</class>
    <class kind="class">dds::sub::status::DataState</class>
  </compound>
  <compound kind="class">
    <name>dds::sub::status::SampleState</name>
    <filename>classdds_1_1sub_1_1status_1_1SampleState.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; OMG_DDS_STATE_BIT_COUNT &gt;</type>
      <name>MaskType</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1SampleState.html</anchorfile>
      <anchor>aa287b1b7e6f31f1135b85d917af937f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1SampleState.html</anchorfile>
      <anchor>ab9e7a403bbf761a02339c45f54d232f7</anchor>
      <arglist>(const MaskType &amp;other)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleState</type>
      <name>read</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1SampleState.html</anchorfile>
      <anchor>af336814879880b9e5bfb02e0a30219fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleState</type>
      <name>not_read</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1SampleState.html</anchorfile>
      <anchor>ad84dc3347fda6f76a38278e953f1e52e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleState</type>
      <name>any</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1SampleState.html</anchorfile>
      <anchor>a45d07d5561bb4468d0aa41788fd55f06</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::status::ViewState</name>
    <filename>classdds_1_1sub_1_1status_1_1ViewState.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; OMG_DDS_STATE_BIT_COUNT &gt;</type>
      <name>MaskType</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1ViewState.html</anchorfile>
      <anchor>a1b6c8b8a3d7ec9b08a90118b6869e57f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ViewState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1ViewState.html</anchorfile>
      <anchor>a6e0c79b61e75e577a67fdc4855e363fb</anchor>
      <arglist>(const MaskType &amp;other)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ViewState</type>
      <name>new_view</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1ViewState.html</anchorfile>
      <anchor>a14bf7741004a0b1a6682b6d678ea3103</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ViewState</type>
      <name>not_new_view</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1ViewState.html</anchorfile>
      <anchor>a5103698cd3439f316b9bb4dd886290a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ViewState</type>
      <name>any</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1ViewState.html</anchorfile>
      <anchor>a91fd917b322fee6df93fce850188d95f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::status::InstanceState</name>
    <filename>classdds_1_1sub_1_1status_1_1InstanceState.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; OMG_DDS_STATE_BIT_COUNT &gt;</type>
      <name>MaskType</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>a57b6d3f1504a471aadd60018d005f91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InstanceState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>a397cdd43a9ad0d7b15c304665ffbbaee</anchor>
      <arglist>(const MaskType &amp;other)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InstanceState</type>
      <name>alive</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>aa84c5cb12f5dfe392bb80710cc2ef070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InstanceState</type>
      <name>not_alive_disposed</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>a2e518cf3afa4fa47ad989ee81a5cb27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InstanceState</type>
      <name>not_alive_no_writers</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>aaaf8cee2916adfe3dce35985dc2a05f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InstanceState</type>
      <name>not_alive_mask</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>ae192646dc0a1907f8d7fb0335862e733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const InstanceState</type>
      <name>any</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1InstanceState.html</anchorfile>
      <anchor>a559209357d8f64d21afec18184ab3707</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::sub::status::DataState</name>
    <filename>classdds_1_1sub_1_1status_1_1DataState.html</filename>
    <member kind="function">
      <type></type>
      <name>DataState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a3df1ad8c03505bb1e895a231b46f9571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a9869bfe16bf8c78a536a9dc6db5cb9f6</anchor>
      <arglist>(const SampleState &amp;sample_state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>ac697bfc73c854ad29c0641114defe83a</anchor>
      <arglist>(const ViewState &amp;view_state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>ace275a0a05cb39f18da31d066d49d63d</anchor>
      <arglist>(const InstanceState &amp;instance_state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataState</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a940b2e5f21385d78cc8eb8d6d55663d2</anchor>
      <arglist>(const SampleState &amp;sample_state, const ViewState &amp;view_state, const InstanceState &amp;instance_state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>afa26ab5c9e311ed94161d1b18e6aeff2</anchor>
      <arglist>(const DataState &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a5f682de104c3bb145d80041836baa026</anchor>
      <arglist>(const DataState &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>DataState &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a5af981103ba84ed08e2f6a9d32f7b5d1</anchor>
      <arglist>(const SampleState &amp;sample_state)</arglist>
    </member>
    <member kind="function">
      <type>DataState &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a8db87e861a6b1713f995d915a8a1844b</anchor>
      <arglist>(const InstanceState &amp;instance_state)</arglist>
    </member>
    <member kind="function">
      <type>DataState &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a7ce654b8488c54138ba75fe573bdc17f</anchor>
      <arglist>(const ViewState &amp;view_state)</arglist>
    </member>
    <member kind="function">
      <type>const DataState &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a9cf347b87868505979ea66cda2fb3224</anchor>
      <arglist>(SampleState &amp;sample_state) const </arglist>
    </member>
    <member kind="function">
      <type>const DataState &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a2c5dbb53796378252dce5cfbff074699</anchor>
      <arglist>(InstanceState &amp;instance_state) const </arglist>
    </member>
    <member kind="function">
      <type>const DataState &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a87368ef70169176fc6bcf5d744dd4d7f</anchor>
      <arglist>(ViewState &amp;view_state) const </arglist>
    </member>
    <member kind="function">
      <type>const SampleState &amp;</type>
      <name>sample_state</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>aa975d1ed24f208afd2094b70044b1b39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sample_state</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a5038d051ce905639c713875b9ed2025f</anchor>
      <arglist>(const SampleState &amp;sample_state)</arglist>
    </member>
    <member kind="function">
      <type>const InstanceState &amp;</type>
      <name>instance_state</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>afdb693d004755b9f2b21fbda4a72456f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>instance_state</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a2823ef02550b6163483e5cfb81ce5001</anchor>
      <arglist>(const InstanceState &amp;instance_state)</arglist>
    </member>
    <member kind="function">
      <type>const ViewState &amp;</type>
      <name>view_state</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>af9e2c7bdb4bb7c733310cf0f1370ef92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>view_state</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>aa948b782a90362302c980419b8583edc</anchor>
      <arglist>(const ViewState &amp;view_state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DataState</type>
      <name>any</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a02dd70ef45d53be6ccf28429a8480af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DataState</type>
      <name>new_data</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>ab7de639659d8c924c237211c6bb36fd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DataState</type>
      <name>any_data</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>a82cdbd6d371c7def50b63d1cbf3fbaf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DataState</type>
      <name>new_instance</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>ad14326c8d3ac460590b8af2dcb1479c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classdds_1_1sub_1_1status_1_1DataState.html</anchorfile>
      <anchor>aa340993749e1d9099fdc6dd6545cbefd</anchor>
      <arglist>(DataState &amp;left, DataState &amp;right) OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::topic</name>
    <filename>namespacedds_1_1topic.html</filename>
    <namespace>dds::topic::qos</namespace>
    <class kind="class">dds::topic::AnyTopic</class>
    <class kind="class">dds::topic::ParticipantBuiltinTopicData</class>
    <class kind="class">dds::topic::TopicBuiltinTopicData</class>
    <class kind="class">dds::topic::PublicationBuiltinTopicData</class>
    <class kind="class">dds::topic::SubscriptionBuiltinTopicData</class>
    <class kind="class">dds::topic::BuiltinTopicKey</class>
    <class kind="class">dds::topic::ContentFilteredTopic</class>
    <class kind="class">dds::topic::Filter</class>
    <class kind="class">dds::topic::TopicInstance</class>
    <class kind="class">dds::topic::TopicListener</class>
    <class kind="class">dds::topic::NoOpTopicListener</class>
    <class kind="struct">dds::topic::is_topic_type</class>
    <class kind="struct">dds::topic::topic_type_support</class>
    <class kind="struct">dds::topic::topic_type_name</class>
    <class kind="class">dds::topic::Topic</class>
    <class kind="class">dds::topic::TopicDescription</class>
    <member kind="function">
      <type>Topic&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a7d5684913d3e6c310840fc0f1def1640</anchor>
      <arglist>(const AnyTopic &amp;any_topic)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_any_topic</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>ac0abcfdd6270e3ef7b4de16d75f20662</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, int32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_any_topic</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a15aa7465ae7aef9ec5916d979fdd3de0</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::TopicBuiltinTopicData</type>
      <name>discover_topic_data</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a6836d04d19c1e58acb9f164df975a8c4</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;topic_handle)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_topic_data</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a9187d3ce7d1c40ab82c532a2050ffe8e</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, const dds::core::InstanceHandleSeq &amp;handles)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_topic_data</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a374c52890b42bb468b95bd18e6d0daef</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, int32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_topic_data</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a42029daa380ab2b6ac546d3f04f172cf</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a5ba2a6029acf87272c417370ceef1b71</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>ad73abb76dce6924d35338f4c853df307</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>TOPIC</type>
      <name>find</name>
      <anchorfile>namespacedds_1_1topic.html</anchorfile>
      <anchor>a7520cb8425f188b5e2f5e44edf8107d6</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>participant_topic_name</name>
      <anchorfile>group__DDSParticipantBuiltInTopicModule.html</anchorfile>
      <anchor>ga7fec452b46f2dad47e00d10b53c9bc32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>topic_topic_name</name>
      <anchorfile>group__DDSTopicBuiltInTopicModule.html</anchorfile>
      <anchor>ga972cf41f2731a1c76418cd0860999e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>publication_topic_name</name>
      <anchorfile>group__DDSPublicationBuiltInTopicModule.html</anchorfile>
      <anchor>ga361f4a40ddaaba2f1b5f963f92ca9121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>subscription_topic_name</name>
      <anchorfile>group__DDSSubscriptionBuiltInTopicModule.html</anchorfile>
      <anchor>ga0421bff6abf9f32307fd02dc6b4ef2e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::AnyTopic</name>
    <filename>classdds_1_1topic_1_1AnyTopic.html</filename>
    <member kind="function">
      <type></type>
      <name>AnyTopic</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>a43eb7b80080f2269bb8bfee3af17d8e8</anchor>
      <arglist>(const dds::topic::Topic&lt; T &gt; &amp;topic)</arglist>
    </member>
    <member kind="function">
      <type>dds::domain::DomainParticipant</type>
      <name>domain_participant</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>ab61028afd49ace73bf228f6af6593711</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::InconsistentTopicStatus</type>
      <name>inconsistent_topic_status</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>a457ddaa09c258eccb30dd576a0031984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>ae4636bb3bbed9c7dd85e322dffaa4787</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>abf7567748cb0fe00e1bd9516276da495</anchor>
      <arglist>(const dds::topic::qos::TopicQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>a25ec061ea650a00dc93fc271a138b742</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>a0cd66860c6e6ff510d6d7bfcc0774b82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>af37bc825a29780a4b35dbf78ddadfe00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Topic&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>ab1159364b088f87545ffdedad8bbd940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Topic&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>classdds_1_1topic_1_1AnyTopic.html</anchorfile>
      <anchor>a7d5684913d3e6c310840fc0f1def1640</anchor>
      <arglist>(const AnyTopic &amp;any_topic)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::ParticipantBuiltinTopicData</name>
    <filename>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</filename>
    <member kind="function">
      <type></type>
      <name>TParticipantBuiltinTopicData</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>aedf15094c61cd01f4799b6c525eb3f1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a746a829176d50309137599aa9d65f4cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::UserData &amp;</type>
      <name>user_data</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a4e0155c96df8aa74a624c971213bcf62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::Property &amp;</type>
      <name>property</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a5e9d4a24e4d51677018f053a6e987763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ProtocolVersion &amp;</type>
      <name>rtps_protocol_version</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a03735d7a6f1765a9e0b50e7da624c68d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::VendorId &amp;</type>
      <name>rtps_vendor_id</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a214e8b1ddf48db9fe3677e6707457077</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>dds_builtin_endpoints</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a3fec52445abe55aa5fe18e5a13710ece</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::vector&lt; rti::core::Locator &gt; &amp;</type>
      <name>default_unicast_locators</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>aabfcb0eac7cec5ece8fb264e1704656e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ProductVersion &amp;</type>
      <name>product_version</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a8f6186bfc995b69bd5a0a934c14a1e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::EntityName &amp;</type>
      <name>participant_name</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a3a1c9ec8b6cda6b0ecd52ba3d343d1b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>domain_id</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a7cab4e5d95dba869f405b93470734a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::TransportInfoSeq &amp;</type>
      <name>transport_info</name>
      <anchorfile>classdds_1_1topic_1_1ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>ae52b1d8e3b5fe6928d69a51d30998a33</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::TopicBuiltinTopicData</name>
    <filename>classdds_1_1topic_1_1TopicBuiltinTopicData.html</filename>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>afdca0f8f1fdc6a8c7eaf418ab824ebc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a976881eae0410e03a72c119f18f13e26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>adba5d61afe2be60f21a399f094e0a3d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Durability &amp;</type>
      <name>durability</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a7d56c44dc239a2af26103351ecb46807</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::DurabilityService &amp;</type>
      <name>durability_service</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a830b0b77c1132f755e4dd003732b32a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Deadline &amp;</type>
      <name>deadline</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>ac55b6bdbd5baf7937734dc1e6e3a91a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::LatencyBudget &amp;</type>
      <name>latency_budget</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a2724eff6c1a2af888b63bb6eb2276931</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Liveliness &amp;</type>
      <name>liveliness</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>aa87847f0734d7d79f86a53487f18049e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Reliability &amp;</type>
      <name>reliability</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a2fc4f2150d9a4f3e42dded30e7a09e63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::TransportPriority &amp;</type>
      <name>transport_priority</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>accb03931ebe851a455599a820e9d3830</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Lifespan &amp;</type>
      <name>lifespan</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>aa0177490b87e7c511b4ac7f8f064f8ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::DestinationOrder &amp;</type>
      <name>destination_order</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>af9d0bc1bd048098bcfff21dfe2746873</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::History &amp;</type>
      <name>history</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a5249fb3511d120f53ed2ecbe67eff0df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::ResourceLimits &amp;</type>
      <name>resource_limits</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a70d7a2dd7d7ded905e8def4776986a6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Ownership &amp;</type>
      <name>ownership</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a004288f79087c3d3e992e818cc2b445e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::TopicData &amp;</type>
      <name>topic_data</name>
      <anchorfile>classdds_1_1topic_1_1TopicBuiltinTopicData.html</anchorfile>
      <anchor>a60dfe137d7cb6e5cb24c78f89c400a95</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::PublicationBuiltinTopicData</name>
    <filename>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</filename>
    <member kind="function">
      <type></type>
      <name>TPublicationBuiltinTopicData</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a554daaab4e640ffcd62867a5f8596062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a71149c34ee3efccbccbf4acd2c5aac32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>participant_key</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac14daab88d66d754c0f3c7ea2b2df48d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>topic_name</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a6582c70c098ff68882218f47aff97bd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac8eed173eea6f7efd4057357ca5c9ac6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Durability &amp;</type>
      <name>durability</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>aa45d69a4ca322afbb67105a597bef3cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::DurabilityService &amp;</type>
      <name>durability_service</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a0450a667f1b8bf1b0587b7530a7fb937</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Deadline &amp;</type>
      <name>deadline</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a261d235060649c647c4f13e56bedfddd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::LatencyBudget &amp;</type>
      <name>latency_budget</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a82cf843def301e8b581a3263489f5ff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Liveliness &amp;</type>
      <name>liveliness</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a85b7f23de79fe46067da080a6430faef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Reliability &amp;</type>
      <name>reliability</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a8ad06a073ade55d601d6f318942d6286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Lifespan &amp;</type>
      <name>lifespan</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>af544f559b3def44fe1fea324bb1b0002</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::UserData &amp;</type>
      <name>user_data</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ae17da22f5eab96d0b2e7cfcd35480bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Ownership &amp;</type>
      <name>ownership</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac3d1dcea998fea9032397bcd9f6a7194</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::OwnershipStrength &amp;</type>
      <name>ownership_strength</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a4a6563423ffd946e669664b3c2172714</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::DestinationOrder &amp;</type>
      <name>destination_order</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>af8ec853a96e99f36591b5939e6224b60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Presentation &amp;</type>
      <name>presentation</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>af51f49066601dc4b163621e981d7b7a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Partition &amp;</type>
      <name>partition</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a7375caecae3c3007913861df951b61a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::TopicData &amp;</type>
      <name>topic_data</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a2286e7fe317024823594c90541eed3d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::GroupData &amp;</type>
      <name>group_data</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a35a3a979aaa711efaa9d5b963ecd645c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::optional&lt; dds::core::xtypes::DynamicType &gt;</type>
      <name>type</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>aa4af5c32e3bc413bd263b709c367631d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;</type>
      <name>get_type_no_copy</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a713bd589777cd98b2c6c2a78fc595fa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>publisher_key</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a1ba3ce7a23d7727971067a78c2cf0789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::Property &amp;</type>
      <name>property</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a5e9d4a24e4d51677018f053a6e987763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::vector&lt; rti::core::Locator &gt; &amp;</type>
      <name>unicast_locators</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a949366b5da074e33372422f34a0185c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::Guid &amp;</type>
      <name>virtual_guid</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>aa4ee09acef93f38e0f69fac273a5accf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ProtocolVersion &amp;</type>
      <name>rtps_protocol_version</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a03735d7a6f1765a9e0b50e7da624c68d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::VendorId &amp;</type>
      <name>rtps_vendor_id</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a214e8b1ddf48db9fe3677e6707457077</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ProductVersion &amp;</type>
      <name>product_version</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a8f6186bfc995b69bd5a0a934c14a1e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::LocatorFilter &amp;</type>
      <name>locator_filter</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac7aa198833b7e9807bca1f948ec1f23a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_positive_acks</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>abd71c783706e79e7c3f2f6327f0e9a0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::EntityName &amp;</type>
      <name>publication_name</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a39c4134ab5cc70514b35ac5538c1df36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::Service &amp;</type>
      <name>service</name>
      <anchorfile>classdds_1_1topic_1_1PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a43d7f5b642925648dfad0ad84abbab0b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::SubscriptionBuiltinTopicData</name>
    <filename>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</filename>
    <member kind="function">
      <type></type>
      <name>TSubscriptionBuiltinTopicData</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a04404d8ccecbc603eb208540551d92dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>key</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a117a112d019819b079ed15b7d416f7e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>participant_key</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a467411cf53f77eb67e200ad96e07a46e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>topic_name</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a918a5d24c83d1be5581ea44c50777c5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a6f99d1305fae988484670fb790be1868</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Durability &amp;</type>
      <name>durability</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a0fdc7ed556efcf5882b7a4da5f74acee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Deadline &amp;</type>
      <name>deadline</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>aa97f42c78917a93db0c4eb77fa3415fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::LatencyBudget &amp;</type>
      <name>latency_budget</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a8a87fadbb5919cd313e58acacab0d0a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Liveliness &amp;</type>
      <name>liveliness</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a82ba64d6a5fba0e81b55de1243ccb195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Reliability &amp;</type>
      <name>reliability</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a6f702cc65ce6b591d8cd53f2e04472ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Ownership &amp;</type>
      <name>ownership</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a7cd05348214e573bdd0fd93dd29cd3a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::DestinationOrder &amp;</type>
      <name>destination_order</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a916ac82aa64b2350cbaf3e2b2601f27b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::UserData &amp;</type>
      <name>user_data</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>af5b0d2611aee248ff9def8ceff17aff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::TimeBasedFilter &amp;</type>
      <name>time_based_filter</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a66c733b3378ceb4577a8c0dc2ae93577</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Presentation &amp;</type>
      <name>presentation</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a1856e77439c65d388b0ef403bab07792</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::Partition &amp;</type>
      <name>partition</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a28e99834415a399058f2e5b90c36c3e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::TopicData &amp;</type>
      <name>topic_data</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a8aa6ddcc33783894dab53f2824aa3b19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::GroupData &amp;</type>
      <name>group_data</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>ac8f77ca1abd9421489047ed88748eab0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::optional&lt; dds::core::xtypes::DynamicType &gt;</type>
      <name>type</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>aa4af5c32e3bc413bd263b709c367631d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;</type>
      <name>get_type_no_copy</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a713bd589777cd98b2c6c2a78fc595fa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::BuiltinTopicKey &amp;</type>
      <name>subscriber_key</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>acb390e90aed51b2b3d8ed1bbbd1cb221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::Property &amp;</type>
      <name>property</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a5e9d4a24e4d51677018f053a6e987763</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::vector&lt; rti::core::Locator &gt; &amp;</type>
      <name>unicast_locators</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a949366b5da074e33372422f34a0185c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::vector&lt; rti::core::Locator &gt; &amp;</type>
      <name>multicast_locators</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>afa0f30809cc317e40c62b3160695a30a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ContentFilterProperty &amp;</type>
      <name>content_filter_property</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>aac620b9bda70aee14c0c8baa76008298</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::Guid &amp;</type>
      <name>virtual_guid</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>aa4ee09acef93f38e0f69fac273a5accf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ProtocolVersion &amp;</type>
      <name>rtps_protocol_version</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a03735d7a6f1765a9e0b50e7da624c68d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::VendorId &amp;</type>
      <name>rtps_vendor_id</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a214e8b1ddf48db9fe3677e6707457077</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ProductVersion &amp;</type>
      <name>product_version</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a8f6186bfc995b69bd5a0a934c14a1e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_positive_acks</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>abd71c783706e79e7c3f2f6327f0e9a0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::EntityName &amp;</type>
      <name>subscription_name</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a7cbe63143ded9ed1a308c56d26743094</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::policy::Service &amp;</type>
      <name>service</name>
      <anchorfile>classdds_1_1topic_1_1SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a43d7f5b642925648dfad0ad84abbab0b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::BuiltinTopicKey</name>
    <filename>classdds_1_1topic_1_1BuiltinTopicKey.html</filename>
    <member kind="function">
      <type></type>
      <name>TBuiltinTopicKey</name>
      <anchorfile>classdds_1_1topic_1_1BuiltinTopicKey.html</anchorfile>
      <anchor>a6665e917ba963bf649536be8b48e5b29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint32_t &gt;</type>
      <name>value</name>
      <anchorfile>classdds_1_1topic_1_1BuiltinTopicKey.html</anchorfile>
      <anchor>a9bf9e6f868516716f5830320d1147293</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::ContentFilteredTopic</name>
    <filename>classdds_1_1topic_1_1ContentFilteredTopic.html</filename>
    <templarg>T</templarg>
    <base>dds::topic::TopicDescription</base>
    <member kind="function">
      <type></type>
      <name>ContentFilteredTopic</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>ad7bf390e6c44d0abdbf46e180990f9af</anchor>
      <arglist>(const Topic&lt; T &gt; &amp;topic, const std::string &amp;name, const dds::topic::Filter &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filter_expression</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>aef1042d76405e0c95dacaa44486ecc09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::StringSeq</type>
      <name>filter_parameters</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>ade3305423bc76cd37e7133112141db6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filter_parameters</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>abcdbff08059f1846e2814abcc44a5368</anchor>
      <arglist>(const FwdIterator &amp;begin, const FwdIterator &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>const dds::topic::Topic&lt; T &gt; &amp;</type>
      <name>topic</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>a1810a63da3a9e7c7d2342a474f866a28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filter</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>a6a3754a544208f07b6667e0f96bb0462</anchor>
      <arglist>(const dds::topic::Filter &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_to_expression_parameter</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>a594551118518209f441685499513c07d</anchor>
      <arglist>(int32_t index, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_from_expression_parameter</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>a0268328012a742cb3ca8e408a96bf736</anchor>
      <arglist>(int32_t index, const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>a6aad505d00388008910e2610894847bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>af65e7e021f94b5b85f5009c998306891</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::domain::DomainParticipant &amp;</type>
      <name>participant</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>aa52d2a61c8c9d909ca57d0dfb238cce3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_registered_content_filters</name>
      <anchorfile>classdds_1_1topic_1_1ContentFilteredTopic.html</anchorfile>
      <anchor>aa60bef0d6a216b2cc3047d85808a5a37</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, BinIterator begin)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::Filter</name>
    <filename>classdds_1_1topic_1_1Filter.html</filename>
    <member kind="function">
      <type></type>
      <name>Filter</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a574b1e9c423133559c123fa4d9dccfe0</anchor>
      <arglist>(const std::string &amp;filter_expression)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Filter</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a2c9e24a399007762e6151dda96239079</anchor>
      <arglist>(const std::string &amp;filter_expression, const FwdIterator &amp;params_begin, const FwdIterator &amp;params_end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Filter</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a01b2fddeb50ef5e542f6a939dc398174</anchor>
      <arglist>(const std::string &amp;query_expression, const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>expression</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a6eeb932df2cdadb8f9ffe8b1b41bf15c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>adef3ed0feccbe5599211cf790c378a92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a6a2c5e0afa5f18f1da9b1db47b38bbf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a016f37545eef926ddefd9e3cc29ac7c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a35cbe2cf8d9f25862ccaaec75363a0a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Filter &amp;</type>
      <name>parameters</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a3735a7c7c22eefcae17a443d66f68f09</anchor>
      <arglist>(const FwdITerator &amp;begin, const FwdITerator end)</arglist>
    </member>
    <member kind="function">
      <type>Filter &amp;</type>
      <name>add_parameter</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a4f991e412bfcee83deca1fd4a8e69885</anchor>
      <arglist>(const std::string &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>parameters_length</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a27981c554843a944990f8675d135530b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a1d89c28bd42ba9a52da008bb69367171</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::Filter &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1Filter.html</anchorfile>
      <anchor>a8819790ed953bdb3e5681181b32ece58</anchor>
      <arglist>(const std::string &amp;the_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::TopicInstance</name>
    <filename>classdds_1_1topic_1_1TopicInstance.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TopicInstance</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a3d5ac4ae8617647b7f481ad3f015aac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TopicInstance</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>aad356a1956946db0be420409065b2772</anchor>
      <arglist>(const ::dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TopicInstance</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a8d231b8643ce3a70fbeb960cf2b9e553</anchor>
      <arglist>(const ::dds::core::InstanceHandle &amp;handle, const T &amp;the_sample)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator dds::core::InstanceHandle</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a795c35a4869d97762ad4b3c49aae5787</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>handle</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>aaa319671f80442fd9cdb3c163815aa64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a2b2222a24650474305f8f42ac330d2fd</anchor>
      <arglist>(const ::dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>sample</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a2d14fbe26d1613bffaa1a66e6cc8a44f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>sample</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a36091440e70b2e2ff51907bce59b0b10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sample</name>
      <anchorfile>classdds_1_1topic_1_1TopicInstance.html</anchorfile>
      <anchor>a34c6307012e599dc898993f90ee2a066</anchor>
      <arglist>(const T &amp;the_sample)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::TopicListener</name>
    <filename>classdds_1_1topic_1_1TopicListener.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_inconsistent_topic</name>
      <anchorfile>classdds_1_1topic_1_1TopicListener.html</anchorfile>
      <anchor>abd7427ed185dffad80fb6cc91407e158</anchor>
      <arglist>(Topic&lt; T &gt; &amp;topic, const dds::core::status::InconsistentTopicStatus &amp;status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::NoOpTopicListener</name>
    <filename>classdds_1_1topic_1_1NoOpTopicListener.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">dds::topic::TopicListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_inconsistent_topic</name>
      <anchorfile>classdds_1_1topic_1_1NoOpTopicListener.html</anchorfile>
      <anchor>ac4495f6cf89a79fcdd46b38de8b0273d</anchor>
      <arglist>(Topic&lt; T &gt; &amp;, const dds::core::status::InconsistentTopicStatus &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dds::topic::is_topic_type</name>
    <filename>structdds_1_1topic_1_1is__topic__type.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>dds::topic::topic_type_support</name>
    <filename>structdds_1_1topic_1_1topic__type__support.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>dds::topic::topic_type_name</name>
    <filename>structdds_1_1topic_1_1topic__type__name.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>dds::topic::Topic</name>
    <filename>classdds_1_1topic_1_1Topic.html</filename>
    <templarg>T</templarg>
    <base>dds::topic::TopicDescription</base>
    <member kind="function">
      <type></type>
      <name>Topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a64859d7217e66c50a611061f2cc787a7</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>ab327a36b03741a1e0ec8a894d429a67e</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp, const std::string &amp;topic_name, const std::string &amp;type_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>abe31bc44f6d795431185b3cc8dc38482</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp, const std::string &amp;topic_name, const dds::topic::qos::TopicQos &amp;qos, dds::topic::TopicListener&lt; T &gt; *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a4bcaf522e27de62f988776fbf34f8863</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;topic_name, const std::string &amp;type_name, const dds::topic::qos::TopicQos &amp;qos, dds::topic::TopicListener&lt; T &gt; *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a9dfe25dec8794e3ad50abf6d924a017c</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;topic_name, const dds::core::xtypes::DynamicType &amp;type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>af650b7c49011f6ebd49321abc1a5809f</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;topic_name, const dds::core::xtypes::DynamicType &amp;type, const dds::topic::qos::TopicQos &amp;qos, dds::topic::TopicListener&lt; T &gt; *listener=NULL, const dds::core::status::StatusMask &amp;mask=dds::core::status::StatusMask::all())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listener</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>abf8b4eea509f4744de12b8c80d8c4e43</anchor>
      <arglist>(Listener *the_listener, const ::dds::core::status::StatusMask &amp;event_mask)</arglist>
    </member>
    <member kind="function">
      <type>Listener *</type>
      <name>listener</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>ae23104d2b3f120f375c8d111a0f91c3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::topic::qos::TopicQos</type>
      <name>qos</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a1a15373143946fba9fd89aad9cbe21ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qos</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>ab167a62f37d271834ac912c8d3ef313d</anchor>
      <arglist>(const dds::topic::qos::TopicQos &amp;the_qos)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::status::InconsistentTopicStatus</type>
      <name>inconsistent_topic_status</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a294cf7da8e6fadd6bfc2f057e999c8bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>a6aad505d00388008910e2610894847bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>af65e7e021f94b5b85f5009c998306891</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::domain::DomainParticipant &amp;</type>
      <name>participant</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>aa52d2a61c8c9d909ca57d0dfb238cce3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_any_topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>ac0abcfdd6270e3ef7b4de16d75f20662</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, int32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_any_topic</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a15aa7465ae7aef9ec5916d979fdd3de0</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>dds::topic::TopicBuiltinTopicData</type>
      <name>discover_topic_data</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a1a735375a9fdcc675579f86d8947bc82</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;topic_handle)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_topic_data</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a9187d3ce7d1c40ab82c532a2050ffe8e</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, const dds::core::InstanceHandleSeq &amp;handles)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_topic_data</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a374c52890b42bb468b95bd18e6d0daef</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, int32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>discover_topic_data</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a42029daa380ab2b6ac546d3f04f172cf</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, BinIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a5ba2a6029acf87272c417370ceef1b71</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignore</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>ad73abb76dce6924d35338f4c853df307</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, FwdIterator begin, FwdIterator end)</arglist>
    </member>
    <member kind="function">
      <type>TOPIC</type>
      <name>find</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a7520cb8425f188b5e2f5e44edf8107d6</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_topics</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a85b0d0e498da9a0aa18055f3d1815f4c</anchor>
      <arglist>(dds::domain::DomainParticipant participant, AnyTopicBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_topics</name>
      <anchorfile>classdds_1_1topic_1_1Topic.html</anchorfile>
      <anchor>a9675dba8eed07287106616f81706fd76</anchor>
      <arglist>(dds::domain::DomainParticipant participant, AnyTopicForwardIterator begin, uint32_t max_size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dds::topic::TopicDescription</name>
    <filename>classdds_1_1topic_1_1TopicDescription.html</filename>
    <templarg></templarg>
    <base>dds::core::Entity</base>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>a6aad505d00388008910e2610894847bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>type_name</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>af65e7e021f94b5b85f5009c998306891</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::domain::DomainParticipant &amp;</type>
      <name>participant</name>
      <anchorfile>classdds_1_1topic_1_1TopicDescription.html</anchorfile>
      <anchor>aa52d2a61c8c9d909ca57d0dfb238cce3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afbb1832f08c711ec6bc3a17e31d1bb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::status::StatusMask</type>
      <name>status_changes</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>acdda22b434936dc3897a7e3070f8dddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::InstanceHandle</type>
      <name>instance_handle</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>aa939658bf27aa3bb20cf5f1acdcd6378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>afb9d5bf145ddf0096ca22ad31e0a3e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a19de3f3ffae7901686cf156ad9f1e762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TO</type>
      <name>polymorphic_cast</name>
      <anchorfile>classdds_1_1core_1_1Entity.html</anchorfile>
      <anchor>a6a2ec9aef91a1e2b78eec14d1a3ac7aa</anchor>
      <arglist>(FROM &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dds::topic::qos</name>
    <filename>namespacedds_1_1topic_1_1qos.html</filename>
    <class kind="class">dds::topic::qos::TopicQos</class>
  </compound>
  <compound kind="class">
    <name>dds::topic::qos::TopicQos</name>
    <filename>classdds_1_1topic_1_1qos_1_1TopicQos.html</filename>
    <member kind="function">
      <type></type>
      <name>TopicQos</name>
      <anchorfile>classdds_1_1topic_1_1qos_1_1TopicQos.html</anchorfile>
      <anchor>ad1f5e28b14b64c8c886de0b5b92f7106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1topic_1_1qos_1_1TopicQos.html</anchorfile>
      <anchor>a13ed44bff07d2e515c70df3afb5db462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POLICY &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1topic_1_1qos_1_1TopicQos.html</anchorfile>
      <anchor>a031c463b5cca48bc4637a6f5e32d7b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TopicQos &amp;</type>
      <name>policy</name>
      <anchorfile>classdds_1_1topic_1_1qos_1_1TopicQos.html</anchorfile>
      <anchor>a1249adb18fadccd274c535550c1cf57b</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>TopicQos &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classdds_1_1topic_1_1qos_1_1TopicQos.html</anchorfile>
      <anchor>a1e6df2eabeb832db505f9a7fb3a73cf9</anchor>
      <arglist>(const Policy &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const TopicQos &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classdds_1_1topic_1_1qos_1_1TopicQos.html</anchorfile>
      <anchor>ae55a7eee99bf75e8dc3268de7b190a14</anchor>
      <arglist>(Policy &amp;p) const </arglist>
    </member>
    <docanchor file="classdds_1_1topic_1_1qos_1_1TopicQos">TopicQos_policies</docanchor>
  </compound>
  <compound kind="namespace">
    <name>rti</name>
    <filename>namespacerti.html</filename>
    <namespace>rti::core</namespace>
    <namespace>rti::config</namespace>
    <namespace>rti::domain</namespace>
    <namespace>rti::pub</namespace>
    <namespace>rti::all</namespace>
    <namespace>rti::sub</namespace>
    <namespace>rti::topic</namespace>
    <namespace>rti::util</namespace>
  </compound>
  <compound kind="namespace">
    <name>rti::all</name>
    <filename>namespacerti_1_1all.html</filename>
  </compound>
  <compound kind="namespace">
    <name>rti::config</name>
    <filename>namespacerti_1_1config.html</filename>
    <class kind="struct">rti::config::Verbosity_def</class>
    <class kind="struct">rti::config::LogCategory_def</class>
    <class kind="struct">rti::config::PrintFormat_def</class>
    <class kind="class">rti::config::Logger</class>
    <class kind="class">rti::config::ScopedLoggerVerbosity</class>
    <class kind="class">rti::config::LibraryVersion</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; Verbosity_def &gt;</type>
      <name>Verbosity</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gabdf11dc8ae0483b9343bd479f531f84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; LogCategory_def &gt;</type>
      <name>LogCategory</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga30a7d85a0befb3d5e9d36e2d65b6c575</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; PrintFormat_def &gt;</type>
      <name>PrintFormat</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga1fadb354cac13a99d67e5d8cc78fa8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>LibraryVersion</type>
      <name>core_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga04789ae393049e20275488dd8d3caa9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>core_build_number</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga5f1b0a897203910c741c32373c2996b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LibraryVersion</type>
      <name>c_api_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gaa8f61326baa35d0a99347ffedb069cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>c_build_number</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga475cfdec026fc2ad5a5e416faaa013ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LibraryVersion</type>
      <name>cpp_api_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga4ff6bfba9694530d37cb897c96488798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cpp_build_number</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gad39bd970a8d65ff413c7ad0b462292ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rti::core::ProductVersion</type>
      <name>product_version</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga45aa793251a9e896c9fe6492cb84c532</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::config::Verbosity_def</name>
    <filename>structrti_1_1config_1_1Verbosity__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SILENT</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4a5021f00fb14cea1f63ca6e5149ce201a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERRORY</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4a4bf6a667b49f2469e8e37bbaf22e7f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WARNING</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4a25db6f047c06014161da9fe154971fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_LOCAL</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4a54900baceeeef7c59652d1394b6db74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_REMOTE</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4a47c7669e34d0f109b9fe68d76b30f4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_ALL</name>
      <anchorfile>structrti_1_1config_1_1Verbosity__def.html</anchorfile>
      <anchor>a6aa0a6e3276b2f2a5d16d6d99e4b11d4a053847e1f943c9b07d90e749d7d136d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::config::LogCategory_def</name>
    <filename>structrti_1_1config_1_1LogCategory__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLATFORM</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1a78cfe3a7637d4a802c559fe7e308c909</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMMUNICATION</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1a60ade57a493260c1df903db31a35c789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATABASE</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1abc224422fbc2aba78f5e748d1a7474fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTITIES</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1aa11d6902d9195d8bac5ca89433031958</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>API</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1a1197262adf796e13541e5b2af299951a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALL_CATEGORIES</name>
      <anchorfile>structrti_1_1config_1_1LogCategory__def.html</anchorfile>
      <anchor>a3feb447d91d7fb9e2765092ac6b02ee1a3580b994e3a2c41e4f17f017b887d6c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::config::PrintFormat_def</name>
    <filename>structrti_1_1config_1_1PrintFormat__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aa64b3ff3294d64c783dd6398491bdecb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIMESTAMPED</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aa92e83a32fb00f52d548a8957e9ab09fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERBOSE</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aaa229a3c2622e8f833e2627035330657b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERBOSE_TIMESTAMPED</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aa87b995158a5f1f578e5f04e93d1fdee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEBUG</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aa71860495c9cf2412572333bde8b5697c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINIMAL</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aa65505eb0e231e5ee54684e2fb673e630</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAXIMAL</name>
      <anchorfile>structrti_1_1config_1_1PrintFormat__def.html</anchorfile>
      <anchor>a74b9960c8a110900136283c5b30e1d9aaecfd9506991d8e2632fa6ec658b3e0d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::config::Logger</name>
    <filename>classrti_1_1config_1_1Logger.html</filename>
    <member kind="function">
      <type>Verbosity</type>
      <name>verbosity</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>ad8462dab30068bcc94a4b467f022572c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Verbosity</type>
      <name>verbosity_by_category</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>af42bb9718a9cbff25cca6e4633c76914</anchor>
      <arglist>(LogCategory category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verbosity</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a4927d89d4c3aab2dc36379cd4aa21898</anchor>
      <arglist>(Verbosity verbosity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verbosity_by_category</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a492a369fa3a6f8aa7c3b856ff5281797</anchor>
      <arglist>(LogCategory category, Verbosity verbosity)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>output_file</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a9828806f4e54fb77e023603c7b2d4a4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_file</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a43dece66cfa293d50fb71d0b57c84ecc</anchor>
      <arglist>(FILE *out)</arglist>
    </member>
    <member kind="function">
      <type>PrintFormat</type>
      <name>print_format</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>aca87e1b414e582efbac3be10f50922a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_format</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a444a6a4eb8991defe63699ba659c5626</anchor>
      <arglist>(PrintFormat print_format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Logger &amp;</type>
      <name>instance</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a3600b9c1d7349778487e0b3f7ef0ee21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize_instance</name>
      <anchorfile>classrti_1_1config_1_1Logger.html</anchorfile>
      <anchor>a7c611a0a6488e73821c7cbb255e02f84</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::config::ScopedLoggerVerbosity</name>
    <filename>classrti_1_1config_1_1ScopedLoggerVerbosity.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedLoggerVerbosity</name>
      <anchorfile>classrti_1_1config_1_1ScopedLoggerVerbosity.html</anchorfile>
      <anchor>a92f1bf1ef9d039c1751c1468a8c692f4</anchor>
      <arglist>(Verbosity verbosity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedLoggerVerbosity</name>
      <anchorfile>classrti_1_1config_1_1ScopedLoggerVerbosity.html</anchorfile>
      <anchor>a203c80e861725525e5f369ded77c0852</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::config::LibraryVersion</name>
    <filename>classrti_1_1config_1_1LibraryVersion.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>major_version</name>
      <anchorfile>classrti_1_1config_1_1LibraryVersion.html</anchorfile>
      <anchor>ac6d511b8eb9bf46bb2531a66d28b22f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>minor_version</name>
      <anchorfile>classrti_1_1config_1_1LibraryVersion.html</anchorfile>
      <anchor>a609d169ef9ffd7f462482b2d6f1ecacd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>release_version</name>
      <anchorfile>classrti_1_1config_1_1LibraryVersion.html</anchorfile>
      <anchor>ad9b5fe09e168cac15c4f6d9d59290d8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>build_version</name>
      <anchorfile>classrti_1_1config_1_1LibraryVersion.html</anchorfile>
      <anchor>af2fae9f893285ba1bd097ea406c6dd0b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::core</name>
    <filename>namespacerti_1_1core.html</filename>
    <namespace>rti::core::builtin_profiles</namespace>
    <namespace>rti::core::xtypes</namespace>
    <class kind="class">rti::core::AllocationSettings</class>
    <class kind="class">rti::core::ContentFilterProperty</class>
    <class kind="class">rti::core::Cookie</class>
    <class kind="struct">rti::core::DiscoveryPluginPromiscuityKind_def</class>
    <class kind="class">rti::core::EndpointGroup</class>
    <class kind="class">rti::core::Guid</class>
    <class kind="class">rti::core::ListenerBinder</class>
    <class kind="struct">rti::core::LocatorKind_def</class>
    <class kind="class">rti::core::Locator</class>
    <class kind="class">rti::core::LocatorFilterElement</class>
    <class kind="class">rti::core::LongDouble</class>
    <class kind="class">rti::core::optional_value</class>
    <class kind="class">rti::core::pointer</class>
    <class kind="class">rti::core::TransportUnicastSettings</class>
    <class kind="class">rti::core::TransportMulticastSettings</class>
    <class kind="class">rti::core::ChannelSettings</class>
    <class kind="class">rti::core::RtpsReliableReaderProtocol</class>
    <class kind="class">rti::core::ProductVersion</class>
    <class kind="class">rti::core::ProtocolVersion</class>
    <class kind="class">rti::core::QosProviderParams</class>
    <class kind="class">rti::core::RtpsWellKnownPorts</class>
    <class kind="class">rti::core::SampleFlag</class>
    <class kind="class">rti::core::SampleIdentity</class>
    <class kind="class">rti::core::SequenceNumber</class>
    <class kind="struct">rti::core::ThreadSettingsCpuRotationKind_def</class>
    <class kind="class">rti::core::ThreadSettingsKindMask</class>
    <class kind="class">rti::core::ThreadSettings</class>
    <class kind="struct">rti::core::TransportClassId_def</class>
    <class kind="class">rti::core::TransportInfo</class>
    <class kind="class">rti::core::VendorId</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; DiscoveryPluginPromiscuityKind_def &gt;</type>
      <name>DiscoveryPluginPromiscuityKind</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>gaaf3568521f01a78e82f9f6e92bb66963</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::vector&lt; EndpointGroup &gt;</type>
      <name>EndpointGroupSeq</name>
      <anchorfile>group__DDSAvailabilityQosModule.html</anchorfile>
      <anchor>ga0df8fa9e2c0cd5e1eb89189633873cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; LocatorKind_def &gt;</type>
      <name>LocatorKind</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>ac9f23bd6b062c1c37a36d53ad2eb3349</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TransportUnicastSettings &gt;</type>
      <name>TransportUnicastSettingsSeq</name>
      <anchorfile>group__DDSTransportUnicastQosModule.html</anchorfile>
      <anchor>gad35fea8c0a16a6eabc362f0b178c7997</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; TransportMulticastSettings &gt;</type>
      <name>TransportMulticastSettingsSeq</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>ga3a1651f93039999e0c4fe1bc7a9fb2a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ChannelSettings &gt;</type>
      <name>ChannelSettingsSeq</name>
      <anchorfile>group__DDSMultiChannelQosModule.html</anchorfile>
      <anchor>ga784543a34566c06c1d27a62dcfd13fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; ThreadSettingsCpuRotationKind_def &gt;</type>
      <name>ThreadSettingsCpuRotationKind</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>abfe793ff6d3f52488ea5bb8b95e4d78b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; TransportClassId_def &gt;</type>
      <name>TransportClassId</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>ab2b6b721cb7ccf7e01885537eb01002d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::vector&lt; TransportInfo &gt;</type>
      <name>TransportInfoSeq</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>a6a557dead56b47a916d050834d2b0199</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill_array</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>ad3c6332c7d4885fa32dac51030791d90</anchor>
      <arglist>(dds::core::array&lt; T, N &gt; &amp;array, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill_array</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>a2e71408470876ff6d5e144f5b83477bd</anchor>
      <arglist>(dds::core::array&lt; dds::core::array&lt; ArrayType, N &gt;, M &gt; &amp;multi_array, const FinalType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize_native_array</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>accb83a48450977e947156d33d0965ec9</anchor>
      <arglist>(dds::core::array&lt; T, N &gt; &amp;array, InitFunc init_func)</arglist>
    </member>
    <member kind="function">
      <type>ListenerBinder&lt; Entity, Listener &gt;</type>
      <name>bind_listener</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>a836945e1beb8629a0724d5a98576f372</anchor>
      <arglist>(Entity entity, Listener *the_listener, dds::core::status::StatusMask mask)</arglist>
    </member>
    <member kind="function">
      <type>ListenerBinder&lt; Entity, Listener &gt;</type>
      <name>bind_and_manage_listener</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>a412f1cf3df142ee8b28a1e70fc823b8e</anchor>
      <arglist>(Entity entity, Listener *the_listener, dds::core::status::StatusMask mask)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacerti_1_1core.html</anchorfile>
      <anchor>ac45e19c19c222d577343f8aca2704a01</anchor>
      <arglist>(std::ostream &amp;out, const pointer&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="variable">
      <type>const int32_t</type>
      <name>PUBLICATION_PRIORITY_UNDEFINED</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>ga4461993d47131cf122fe2d00edc2e1d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32_t</type>
      <name>PUBLICATION_PRIORITY_AUTOMATIC</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>gaacde23fdff64b64407e229773f51de91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::AllocationSettings</name>
    <filename>classrti_1_1core_1_1AllocationSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>AllocationSettings</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>af2e78f89242f057cdb424e78341bc0d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AllocationSettings</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>af9528a93a7098aadeb070813006687ed</anchor>
      <arglist>(int32_t the_initial_count, int32_t the_max_count, int32_t the_incremental_count)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_count</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>a90ad7ea9eca7bcda92275db203422642</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings &amp;</type>
      <name>initial_count</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>abe957ff7d87bcd22d480799db3daf105</anchor>
      <arglist>(int32_t the_initial_count)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_count</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>abb45b271548814432693e559579c6c7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings &amp;</type>
      <name>max_count</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>a048f094748f7434eaad3829e9d5da31c</anchor>
      <arglist>(int32_t the_max_count)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>incremental_count</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>a695f3fecf72232f91a9ae61c897d4a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings &amp;</type>
      <name>incremental_count</name>
      <anchorfile>classrti_1_1core_1_1AllocationSettings.html</anchorfile>
      <anchor>a0f0073b864443d999cd5173d7ef7e6d2</anchor>
      <arglist>(int32_t the_incremental_count)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::ContentFilterProperty</name>
    <filename>classrti_1_1core_1_1ContentFilterProperty.html</filename>
    <member kind="function">
      <type>optional_string</type>
      <name>content_filter_topic_name</name>
      <anchorfile>classrti_1_1core_1_1ContentFilterProperty.html</anchorfile>
      <anchor>adaaa6256340a386466c139dac0fba180</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>expression_parameters</name>
      <anchorfile>classrti_1_1core_1_1ContentFilterProperty.html</anchorfile>
      <anchor>a5db82e758eeb5eaca09e45f3c669f2d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>optional_string</type>
      <name>filter_class_name</name>
      <anchorfile>classrti_1_1core_1_1ContentFilterProperty.html</anchorfile>
      <anchor>a421a5106d101ca2805566ff5bc9e1f41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>optional_string</type>
      <name>filter_expression</name>
      <anchorfile>classrti_1_1core_1_1ContentFilterProperty.html</anchorfile>
      <anchor>abfdf1c204cb91347ac28fe266ef72bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>optional_string</type>
      <name>related_topic_name</name>
      <anchorfile>classrti_1_1core_1_1ContentFilterProperty.html</anchorfile>
      <anchor>a576e636a8e9f4c9c4b072a50f001051e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::Cookie</name>
    <filename>classrti_1_1core_1_1Cookie.html</filename>
    <member kind="function">
      <type></type>
      <name>Cookie</name>
      <anchorfile>classrti_1_1core_1_1Cookie.html</anchorfile>
      <anchor>a3e8236ca369ea240b9223060095f1299</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Cookie</name>
      <anchorfile>classrti_1_1core_1_1Cookie.html</anchorfile>
      <anchor>a1a301f34883c2c6a597d9918aede4222</anchor>
      <arglist>(const ByteContainer &amp;bytes)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::vector&lt; uint8_t &gt; &amp;</type>
      <name>value</name>
      <anchorfile>classrti_1_1core_1_1Cookie.html</anchorfile>
      <anchor>abdee7d4ecc8c46dbb4e033f439767f25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::vector&lt; uint8_t &gt; &amp;</type>
      <name>value</name>
      <anchorfile>classrti_1_1core_1_1Cookie.html</anchorfile>
      <anchor>a7b31b6edff7e7b9338af2a194b8455f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef">
      <type>dds::core::vector&lt; Cookie &gt;</type>
      <name>CookieSeq</name>
      <anchorfile>classrti_1_1core_1_1Cookie.html</anchorfile>
      <anchor>a07ffeb76c2049d62833fdad123ce4811</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classrti_1_1core_1_1Cookie.html</anchorfile>
      <anchor>ac78888965d26933c8df886e684fcc34c</anchor>
      <arglist>(std::ostream &amp;out, const Cookie &amp;cookie)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::DiscoveryPluginPromiscuityKind_def</name>
    <filename>structrti_1_1core_1_1DiscoveryPluginPromiscuityKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1DiscoveryPluginPromiscuityKind__def.html</anchorfile>
      <anchor>a708523e550a649dcc11e4c03de335bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVER_MATCHING_REMOTE_ENTITIES</name>
      <anchorfile>structrti_1_1core_1_1DiscoveryPluginPromiscuityKind__def.html</anchorfile>
      <anchor>a708523e550a649dcc11e4c03de335bf2a0d0a16de9a5b96804617c33527aa27a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISCOVER_ALL_REMOTE_ENTITIES</name>
      <anchorfile>structrti_1_1core_1_1DiscoveryPluginPromiscuityKind__def.html</anchorfile>
      <anchor>a708523e550a649dcc11e4c03de335bf2a510872373b2e31d0b6f0c39b7c3d5045</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::EndpointGroup</name>
    <filename>classrti_1_1core_1_1EndpointGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>EndpointGroup</name>
      <anchorfile>classrti_1_1core_1_1EndpointGroup.html</anchorfile>
      <anchor>aa5325155897d822429c7c757ee4bb17b</anchor>
      <arglist>(const std::string &amp;the_role_name, int32_t the_quorum_count)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>role_name</name>
      <anchorfile>classrti_1_1core_1_1EndpointGroup.html</anchorfile>
      <anchor>a3ea8f1aaadbd75e41a648d6d47692fd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EndpointGroup &amp;</type>
      <name>role_name</name>
      <anchorfile>classrti_1_1core_1_1EndpointGroup.html</anchorfile>
      <anchor>a2c3320761f063b26f00adeca47f2ec02</anchor>
      <arglist>(const std::string &amp;the_role_name)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>quorum_count</name>
      <anchorfile>classrti_1_1core_1_1EndpointGroup.html</anchorfile>
      <anchor>a71083bdcfa52a28f523268169657f415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EndpointGroup &amp;</type>
      <name>quorum_count</name>
      <anchorfile>classrti_1_1core_1_1EndpointGroup.html</anchorfile>
      <anchor>a5dc5188ae58ff9a4fec0b14e6bc894a0</anchor>
      <arglist>(int32_t the_quorum_count)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::Guid</name>
    <filename>classrti_1_1core_1_1Guid.html</filename>
    <member kind="function">
      <type></type>
      <name>Guid</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>add9e1a649ff3e94f60bb2c329e73700f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>a357069920b265c778104968ad173cc6d</anchor>
      <arglist>(uint32_t index)</arglist>
    </member>
    <member kind="function">
      <type>const uint8_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>a12503870febd4f5955b28462a8bbded9</anchor>
      <arglist>(uint32_t index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>a91c56c66ae38498ebce7ef5eddcfd3e8</anchor>
      <arglist>(const Guid &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>ac6ba5a446d09ce8a9e923ec2cca89c98</anchor>
      <arglist>(const Guid &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>a2ba28c4ee6de5bf01888bc1afa4fd870</anchor>
      <arglist>(const Guid &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>a6d98c0293c3e5ff68c61d4fe3ac19c97</anchor>
      <arglist>(const Guid &amp;other) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Guid</type>
      <name>unknown</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>ad13643a79d87cb8f0c839f4617f987f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Guid</type>
      <name>automatic</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>ae26459347c87966a25d3f21751c4447a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>LENGTH</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>acf6284c575652f6655c1b8142b138bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classrti_1_1core_1_1Guid.html</anchorfile>
      <anchor>a8965a0218807db23e4d4d16cc9423001</anchor>
      <arglist>(std::ostream &amp;out, const Guid &amp;guid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::ListenerBinder</name>
    <filename>classrti_1_1core_1_1ListenerBinder.html</filename>
    <templarg>Entity</templarg>
    <templarg>Listener</templarg>
    <member kind="function">
      <type>Listener *</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1ListenerBinder.html</anchorfile>
      <anchor>ab2a4dd707e99b8b0029146ed9de7d1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Listener *</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1ListenerBinder.html</anchorfile>
      <anchor>a08e53769562c8404e42788c75537559e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a299077d89db9f6d7bd5ab89066fdf204</anchor>
      <arglist>(dds::core::null_type &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a547cbbc6b49a439af09a48d638bea36a</anchor>
      <arglist>(const Reference &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a0c9d73c46fbb46f5c401181874097827</anchor>
      <arglist>(const Reference&lt; D &gt; &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a211079c559cbe5c2e7d9ce47a2df888f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a0df735ee4a9486961d3e02c4649b24fe</anchor>
      <arglist>(const R &amp;ref) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a1d08e6b9d1a68929182e9182cdf6ce5a</anchor>
      <arglist>(const R &amp;ref) const </arglist>
    </member>
    <member kind="function">
      <type>Reference &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a1552f9f52091531d9f25681dbbb27dbf</anchor>
      <arglist>(const null_type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>aa848aad5a5553c4b8e388954c3f5bf63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>ac55dde1123835df8b0d2238c6e60ccbd</anchor>
      <arglist>(const null_type) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a23171148a4c69662a7a799f0d5dc5c3d</anchor>
      <arglist>(const null_type) const </arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE_REF_T &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>ac4711eb43fd9a6e7f4af185896f6bd8c</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE_REF_T &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>adccba565e07cf945be333811230b3462</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a4f8e3737a67c3aa46c4ba5faaad65eff</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a3282b6cd2f63a812c5e98393dce099ad</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>ListenerBinder&lt; Entity, Listener &gt;</type>
      <name>bind_listener</name>
      <anchorfile>classrti_1_1core_1_1ListenerBinder.html</anchorfile>
      <anchor>a836945e1beb8629a0724d5a98576f372</anchor>
      <arglist>(Entity entity, Listener *the_listener, dds::core::status::StatusMask mask)</arglist>
    </member>
    <member kind="function">
      <type>ListenerBinder&lt; Entity, Listener &gt;</type>
      <name>bind_and_manage_listener</name>
      <anchorfile>classrti_1_1core_1_1ListenerBinder.html</anchorfile>
      <anchor>a412f1cf3df142ee8b28a1e70fc823b8e</anchor>
      <arglist>(Entity entity, Listener *the_listener, dds::core::status::StatusMask mask)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::LocatorKind_def</name>
    <filename>structrti_1_1core_1_1LocatorKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1LocatorKind__def.html</anchorfile>
      <anchor>a98b8f4dfe306fb6fd5b66c56935e7091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>structrti_1_1core_1_1LocatorKind__def.html</anchorfile>
      <anchor>a98b8f4dfe306fb6fd5b66c56935e7091abaef380587aa93012862a82d866af4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDPv4</name>
      <anchorfile>structrti_1_1core_1_1LocatorKind__def.html</anchorfile>
      <anchor>a98b8f4dfe306fb6fd5b66c56935e7091a12e5a3555db2b5b453df40885f3ae703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHMEM</name>
      <anchorfile>structrti_1_1core_1_1LocatorKind__def.html</anchorfile>
      <anchor>a98b8f4dfe306fb6fd5b66c56935e7091a4a30af89d18b2022225a0792ced1b88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDPv6</name>
      <anchorfile>structrti_1_1core_1_1LocatorKind__def.html</anchorfile>
      <anchor>a98b8f4dfe306fb6fd5b66c56935e7091aebb532672dc47a1ec3fce9cc6f753464</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::Locator</name>
    <filename>classrti_1_1core_1_1Locator.html</filename>
    <member kind="function">
      <type></type>
      <name>Locator</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>aaa93a7e8b181e99c80bd42278e2ed87e</anchor>
      <arglist>(const rti::core::LocatorKind::type the_kind, uint32_t the_port, const dds::core::ByteSeq &amp;the_address)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::LocatorKind::type</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a30d202b2261fa8edd2a1d99bdc4a210c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Locator &amp;</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a0b570195708997699adb9c7b0165682e</anchor>
      <arglist>(const rti::core::LocatorKind::type the_kind)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>port</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a89e9dff938a575a8763adaddeb596951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Locator &amp;</type>
      <name>port</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a98f063dad13f42cf3609773be4cb81c0</anchor>
      <arglist>(uint32_t the_port)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::ByteSeq</type>
      <name>address</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>ab0eb6e8a22b5fe217dcf249caced2879</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Locator &amp;</type>
      <name>address</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a0a9e06503b4ac2b93071bf4a033b1f71</anchor>
      <arglist>(const dds::core::ByteSeq &amp;the_address)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Locator</type>
      <name>Invalid</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a493380d0b00f802b4420e203af07d548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Locator &gt;</type>
      <name>LocatorSeq</name>
      <anchorfile>classrti_1_1core_1_1Locator.html</anchorfile>
      <anchor>a620badf95954a6d8743b7ed5b7b0bb36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::LocatorFilterElement</name>
    <filename>classrti_1_1core_1_1LocatorFilterElement.html</filename>
    <member kind="function">
      <type></type>
      <name>LocatorFilterElement</name>
      <anchorfile>classrti_1_1core_1_1LocatorFilterElement.html</anchorfile>
      <anchor>aa452d908939530f23dea9b644ce01067</anchor>
      <arglist>(const std::string &amp;the_filter_expression, const rti::core::LocatorSeq &amp;the_locators)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::LocatorSeq</type>
      <name>locators</name>
      <anchorfile>classrti_1_1core_1_1LocatorFilterElement.html</anchorfile>
      <anchor>a73fdde781c8c399f778e79d897aea826</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocatorFilterElement &amp;</type>
      <name>locators</name>
      <anchorfile>classrti_1_1core_1_1LocatorFilterElement.html</anchorfile>
      <anchor>a7b17282a7459852b8ceb1ed6f96ca221</anchor>
      <arglist>(const LocatorSeq &amp;the_locators)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filter_expression</name>
      <anchorfile>classrti_1_1core_1_1LocatorFilterElement.html</anchorfile>
      <anchor>a1c1cce6d1ff37f69dda171f98c5ebbf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocatorFilterElement &amp;</type>
      <name>filter_expression</name>
      <anchorfile>classrti_1_1core_1_1LocatorFilterElement.html</anchorfile>
      <anchor>a3385bfd2fdc6aeb685fdfa0c5356fd8a</anchor>
      <arglist>(const std::string &amp;the_expression)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::LongDouble</name>
    <filename>classrti_1_1core_1_1LongDouble.html</filename>
    <member kind="function">
      <type></type>
      <name>LongDouble</name>
      <anchorfile>classrti_1_1core_1_1LongDouble.html</anchorfile>
      <anchor>a7c08d94f2e102681473c8919db003827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>operator[]</name>
      <anchorfile>classrti_1_1core_1_1LongDouble.html</anchorfile>
      <anchor>a6f2edd6f195034a1974bd8dfdd657ce2</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrti_1_1core_1_1LongDouble.html</anchorfile>
      <anchor>a65f3b9b6d6501247f426ead1538da7c1</anchor>
      <arglist>(size_t i)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::optional_value</name>
    <filename>classrti_1_1core_1_1optional__value.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>optional_value</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>a2058b1d6d6c6b8175372dc23f742259d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional_value</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>a748b9648acd34fde8179f9a86cd22041</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional_value</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>ab2b36304f985389db3ea0e12c0d44d8b</anchor>
      <arglist>(bool condition, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optional_value</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>ab43aa35933ff8b67e265127236ec716e</anchor>
      <arglist>(const optional_value&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_set</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>a5587e43ab001873940dffc0b59c1213b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>aad1d9092f33f856aeefd602f1bf50f89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>a0e797108161db524613d7aac44b6b800</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1optional__value.html</anchorfile>
      <anchor>aff96b34dec3912caf0a80294666415e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::pointer</name>
    <filename>classrti_1_1core_1_1pointer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>pointer</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>a4bd3f2d0f14728993c9182c06c4d62cc</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pointer</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>aaab52533735c26860f75b7af80272e90</anchor>
      <arglist>(T *ptr) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>a2f99335cd1a5f7e394740d8db19967e3</anchor>
      <arglist>(T *ptr) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>afb094421d8bbdf2e65fe4dc105e610d0</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>pointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>a64f9f96fd83c985eb7efbc9eaf9048d1</anchor>
      <arglist>(T *other) OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>adc0b02e74f2a4369a1d1eae2db5f0766</anchor>
      <arglist>(const pointer&lt; T &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrti_1_1core_1_1pointer.html</anchorfile>
      <anchor>a7c94ecaa54ad1c1c86fb835c5e077baa</anchor>
      <arglist>(const pointer&lt; T &gt; &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::TransportUnicastSettings</name>
    <filename>classrti_1_1core_1_1TransportUnicastSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportUnicastSettings</name>
      <anchorfile>classrti_1_1core_1_1TransportUnicastSettings.html</anchorfile>
      <anchor>abadbc3eed0fd05b5a6fb06cd9231d579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportUnicastSettings</name>
      <anchorfile>classrti_1_1core_1_1TransportUnicastSettings.html</anchorfile>
      <anchor>a2fcb22aa49d5fc32ee533e33f26b698a</anchor>
      <arglist>(const dds::core::StringSeq &amp;transports, int32_t receive_port=0)</arglist>
    </member>
    <member kind="function">
      <type>TransportUnicastSettings &amp;</type>
      <name>transports</name>
      <anchorfile>classrti_1_1core_1_1TransportUnicastSettings.html</anchorfile>
      <anchor>a0643c63da0786c12897c51de6925d567</anchor>
      <arglist>(const dds::core::StringSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>transports</name>
      <anchorfile>classrti_1_1core_1_1TransportUnicastSettings.html</anchorfile>
      <anchor>a94b8d8dbd750e43bfa1865352cc73e5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TransportUnicastSettings &amp;</type>
      <name>receive_port</name>
      <anchorfile>classrti_1_1core_1_1TransportUnicastSettings.html</anchorfile>
      <anchor>a047b92973fc9a643d81200ac54ba1466</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>receive_port</name>
      <anchorfile>classrti_1_1core_1_1TransportUnicastSettings.html</anchorfile>
      <anchor>ab724445cb746085c74613822dd7a3572</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::TransportMulticastSettings</name>
    <filename>classrti_1_1core_1_1TransportMulticastSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportMulticastSettings</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>ac45497083372ee3e3fe327a965d6d1c3</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_transports, const std::string &amp;the_receive_address, int32_t the_receive_port)</arglist>
    </member>
    <member kind="function">
      <type>TransportMulticastSettings &amp;</type>
      <name>transports</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>a11983d225832ee1a3ab361c2da232124</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_transports)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>transports</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>a0a24e25938f9b797efcc4efb9eb7c680</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TransportMulticastSettings &amp;</type>
      <name>receive_address</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>ac61ac4893d577d55473407932d39d145</anchor>
      <arglist>(const std::string &amp;the_receive_address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>receive_address</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>a7990619c282a4726d76a1d942ff69db9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TransportMulticastSettings &amp;</type>
      <name>receive_port</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>a84d00cea1c6ea25a6cb027a7109b9ac0</anchor>
      <arglist>(int32_t the_receive_port)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>receive_port</name>
      <anchorfile>classrti_1_1core_1_1TransportMulticastSettings.html</anchorfile>
      <anchor>adc943d2f90532e848ccd79995bdf0b00</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::ChannelSettings</name>
    <filename>classrti_1_1core_1_1ChannelSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>ChannelSettings</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>adaf6b4f08acb060beec4d3f2ee6b64d4</anchor>
      <arglist>(const TransportMulticastSettingsSeq &amp;the_multicast_settings, const std::string &amp;the_filter_expression, int32_t the_priority)</arglist>
    </member>
    <member kind="function">
      <type>ChannelSettings &amp;</type>
      <name>multicast_settings</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>a81fbffb5735e5ec1f614620d1d54b1b7</anchor>
      <arglist>(const TransportMulticastSettingsSeq &amp;the_multicast_settings)</arglist>
    </member>
    <member kind="function">
      <type>TransportMulticastSettingsSeq</type>
      <name>multicast_settings</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>a65dd2e2e772958b96ef7a478f43f8924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ChannelSettings &amp;</type>
      <name>filter_expression</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>ae6f722dbc4b5e795e3da808c392865ba</anchor>
      <arglist>(const std::string &amp;the_filter_expression)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filter_expression</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>afd7cc98e1901637a632973ccb48ac6f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ChannelSettings &amp;</type>
      <name>priority</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>a5bbe9d3d01d06ed7b95561100c60c9fe</anchor>
      <arglist>(int32_t the_priority)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>priority</name>
      <anchorfile>classrti_1_1core_1_1ChannelSettings.html</anchorfile>
      <anchor>a09d247493968cb26739403a78fff802b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::RtpsReliableReaderProtocol</name>
    <filename>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</filename>
    <member kind="function">
      <type></type>
      <name>RtpsReliableReaderProtocol</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>ac1c39207f27dda49f473e2b2242be9f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>min_heartbeat_response_delay</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a2d8850d3bc7909515597c9f620773816</anchor>
      <arglist>(const dds::core::Duration &amp;the_min_heartbeat_response_delay)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>min_heartbeat_response_delay</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a0260c21f3c9c3711383851a95bae3eb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>max_heartbeat_response_delay</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a778165d6dc85c302e95db9624a5c719e</anchor>
      <arglist>(const dds::core::Duration &amp;the_max_heartbeat_response_delay)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_heartbeat_response_delay</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a40f7faf0d26794ff841708d8e641fc9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>heartbeat_suppression_duration</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>ae09cf6e16046762694ef29a9e4edc26b</anchor>
      <arglist>(const dds::core::Duration &amp;the_heartbeat_suppression_duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>heartbeat_suppression_duration</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a097d6560d1549a128546c4261d129f44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>nack_period</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>add6029e7b80d329999fa92cfaae7c090</anchor>
      <arglist>(const dds::core::Duration &amp;the_nack_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>nack_period</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a6d2b6b7ccacb75056f11c3c5772e6d43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>receive_window_size</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a139a3c7db43d02c5dacc5117f9a10fec</anchor>
      <arglist>(int32_t the_receive_window_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>receive_window_size</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a1d889590fc364a5ffcdca8323c84dd94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>round_trip_time</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>aabc0806004b10e406e47d5d9ded4e243</anchor>
      <arglist>(const dds::core::Duration &amp;the_round_trip_time)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>round_trip_time</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>a77ff24e84d55707a7df1313d8b3ace13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>app_ack_period</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>aafd5abd558cb359aa4dae192c5a5b000</anchor>
      <arglist>(const dds::core::Duration &amp;the_app_ack_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>app_ack_period</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>ae9961198c337d87172c26a622298af8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>samples_per_app_ack</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>aeac0887cd15029a4035f7bcf73945890</anchor>
      <arglist>(int32_t the_samples_per_app_ack)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>samples_per_app_ack</name>
      <anchorfile>classrti_1_1core_1_1RtpsReliableReaderProtocol.html</anchorfile>
      <anchor>ab8bf4e799368ee87c4f3dc142991a6cf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::ProductVersion</name>
    <filename>classrti_1_1core_1_1ProductVersion.html</filename>
    <member kind="function">
      <type></type>
      <name>ProductVersion</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>af76cc8537b1f41036e101fd46276d0b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>to_string</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>a85899d60db1f3cf0082a2772a51170d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>major_version</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>aa695fd3fa983209f1788f78d5ec4f7c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>minor_version</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>af2a8a7fe8d98f8685559cab65b9f9995</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>release_version</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>a71d98daf2da8418f99c1f2e3242bf3c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>revision_version</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>a2c0d7be2548d01d86068adf26577916b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProductVersion</type>
      <name>current</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>a358044b80394cee82ec8d2e78e32a526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProductVersion</type>
      <name>unknown</name>
      <anchorfile>classrti_1_1core_1_1ProductVersion.html</anchorfile>
      <anchor>a8744caa0dcefbc0a2c36cfb29a84a98a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::ProtocolVersion</name>
    <filename>classrti_1_1core_1_1ProtocolVersion.html</filename>
    <member kind="function">
      <type></type>
      <name>ProtocolVersion</name>
      <anchorfile>classrti_1_1core_1_1ProtocolVersion.html</anchorfile>
      <anchor>a910d446a4d22e67d9aacbd6d7057d3a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProtocolVersion</name>
      <anchorfile>classrti_1_1core_1_1ProtocolVersion.html</anchorfile>
      <anchor>a615061a07ea9bc76236f32ce7ce65689</anchor>
      <arglist>(uint8_t major, uint8_t minor)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>major_version</name>
      <anchorfile>classrti_1_1core_1_1ProtocolVersion.html</anchorfile>
      <anchor>a8e86f311edf5c377b5d485a920959d81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>minor_version</name>
      <anchorfile>classrti_1_1core_1_1ProtocolVersion.html</anchorfile>
      <anchor>a1c80040b79105116d81a681299cf5ddd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProtocolVersion</type>
      <name>current</name>
      <anchorfile>classrti_1_1core_1_1ProtocolVersion.html</anchorfile>
      <anchor>aa229e302a9b47e041caaa33f73950348</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::QosProviderParams</name>
    <filename>classrti_1_1core_1_1QosProviderParams.html</filename>
    <member kind="function">
      <type></type>
      <name>QosProviderParams</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a76135a67e4381b44b1b31d68f66e951e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>string_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a90f50be55c423383417bc6c71fb1abe7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QosProviderParams &amp;</type>
      <name>string_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>aa6f694842bfadce1bdfe70a5106c6352</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_string_profile)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>url_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a99ea9943c78b2b7ba5d19669361702c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QosProviderParams &amp;</type>
      <name>url_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a70a7a6ac4ab893d4278b5795d01d0dda</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_url_profile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignore_user_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>acde767b6c0b80bc26d69872897f26170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QosProviderParams &amp;</type>
      <name>ignore_user_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a0748c5c82add084e266195a8de885fa1</anchor>
      <arglist>(bool the_ignore_user_profile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignore_environment_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a529a4740e58cf3782c4a2ebd5f733b68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QosProviderParams &amp;</type>
      <name>ignore_environment_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a49ea4b008fb20b0cd1e251a282b2bb32</anchor>
      <arglist>(bool the_ignore_environment_profile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignore_resource_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a91da58afabe0ceab697c001211c55456</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QosProviderParams &amp;</type>
      <name>ignore_resource_profile</name>
      <anchorfile>classrti_1_1core_1_1QosProviderParams.html</anchorfile>
      <anchor>a164a414d41952a09f66637ed66c110bc</anchor>
      <arglist>(bool the_ignore_resource_profile)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::RtpsWellKnownPorts</name>
    <filename>classrti_1_1core_1_1RtpsWellKnownPorts.html</filename>
    <member kind="function">
      <type></type>
      <name>RtpsWellKnownPorts</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a489a944d0c781cfc966f17a2bd2e7e27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RtpsWellKnownPorts</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a9661d4fc819425a1a34d08f5553c1e44</anchor>
      <arglist>(int32_t the_port_base, int32_t the_domain_id_gain, int32_t the_participant_id_gain, int32_t the_builtin_multicast_port_offset, int32_t the_builtin_unicast_port_offset, int32_t the_user_multicast_port_offset, int32_t the_user_unicast_port_offset)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>port_base</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a296d92e383df6cf398548a3be717d17a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>port_base</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>ae6fea6b6b1c4989f240546abb37d11b6</anchor>
      <arglist>(int32_t the_port_base)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>domain_id_gain</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>aed60d071b47461c920e033f46716d1fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>domain_id_gain</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>aa937c8acd1882b039b2e519e2d814456</anchor>
      <arglist>(int32_t the_domain_id_gain)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>participant_id_gain</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>ab6bcff1684f0d65224b2b460c3e4f710</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>participant_id_gain</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>ac39f30d5c67a43ba358a30a87049f923</anchor>
      <arglist>(int32_t the_participant_id_gain)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>builtin_multicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>ac0f0feff2d8974f1b808f5dfea4436d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>builtin_multicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a9e1762dafed5e69df0224d643b4d8bb4</anchor>
      <arglist>(int32_t the_builtin_multicast_port_offset)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>builtin_unicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>ad5033aad8f0a2bc4ebcb588593d631f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>builtin_unicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a9707815ad63038840cfc4add6473872e</anchor>
      <arglist>(int32_t the_builtin_unicast_port_offset)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>user_multicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a72b7bd3e7eb6f1ea010c7f8038b02abb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>user_multicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a5bad84329792a95d14982408cb5fe638</anchor>
      <arglist>(int32_t the_user_multicast_port_offset)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>user_unicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>a4b695ec83a2a4aea706aab1d229d90d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsWellKnownPorts &amp;</type>
      <name>user_unicast_port_offset</name>
      <anchorfile>classrti_1_1core_1_1RtpsWellKnownPorts.html</anchorfile>
      <anchor>ae13711f853f2e435e0c1d8b27a8bdec5</anchor>
      <arglist>(int32_t the_user_unicast_port_offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RtpsWellKnownPorts</type>
      <name>Interoperable</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga022e87f275ec987ea043e81171df259e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RtpsWellKnownPorts</type>
      <name>BackwardsCompatible</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gad6965043809248096dc1a51aab4fade4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::SampleFlag</name>
    <filename>classrti_1_1core_1_1SampleFlag.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; 32 &gt;</type>
      <name>MaskType</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>a9e55c97f809115805ed72f1359e46c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleFlag</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>aadf1f88c190a30a228097b21534714a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleFlag</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>a69e21e9f8621e366942efabdb9f4c8e7</anchor>
      <arglist>(uint64_t mask)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleFlag</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>aa94245176227eafd2857d6b0f74ed681</anchor>
      <arglist>(const MaskType &amp;mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleFlag</type>
      <name>redelivered</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>a3f2093c99ad6f11152f584f525840325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleFlag</type>
      <name>intermediate_reply_sequence</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>ae952f3f23a99805c48650acffbc1a456</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleFlag</type>
      <name>replicate</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>aad57b96bb1bbacc11a54c894e015f417</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleFlag</type>
      <name>last_shared_reader_queue</name>
      <anchorfile>classrti_1_1core_1_1SampleFlag.html</anchorfile>
      <anchor>acc85db2f91c25f8084436c694669b6e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::SampleIdentity</name>
    <filename>classrti_1_1core_1_1SampleIdentity.html</filename>
    <member kind="function">
      <type></type>
      <name>SampleIdentity</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>aec99f1479631bcc58f6ea8e2376b8476</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleIdentity</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>af647f93e2296e03ea65a57aca4117866</anchor>
      <arglist>(const Guid &amp;the_writer_guid, const SequenceNumber &amp;the_sequence_number)</arglist>
    </member>
    <member kind="function">
      <type>const Guid &amp;</type>
      <name>writer_guid</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>a2ec8b96b4ed6fb79bf6957c7c8fb8d25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Guid &amp;</type>
      <name>writer_guid</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>ae1dfaea799c8cee0a532a9c13654a7e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SequenceNumber &amp;</type>
      <name>sequence_number</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>a4479103101366743c6ee20c0ad853f6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber &amp;</type>
      <name>sequence_number</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>ab9e2dbe9b304d351fa6f6b2ae23c2538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleIdentity</type>
      <name>automatic</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>a47a8514171fdb12b1e4a4a7912fc9eae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleIdentity</type>
      <name>unknown</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>a4258bd3dc57a0ad3af32cb07272748a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classrti_1_1core_1_1SampleIdentity.html</anchorfile>
      <anchor>a8a4e469a544625a562fcc7cb6881cf7a</anchor>
      <arglist>(std::ostream &amp;out, const SampleIdentity &amp;sid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::SequenceNumber</name>
    <filename>classrti_1_1core_1_1SequenceNumber.html</filename>
    <member kind="function">
      <type></type>
      <name>SequenceNumber</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a2c3c0f31de77aee9d68d29bd7d257251</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SequenceNumber</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>ac90120210802701c0ce2176033bce080</anchor>
      <arglist>(int32_t high_value, uint32_t low_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SequenceNumber</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a4ce0c55c0c9554d342f928ee6d28e9fb</anchor>
      <arglist>(int64_t the_value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>high</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a97dc7aca8911cae8e5b9ff5d0c611e77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber &amp;</type>
      <name>high</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a4580e1116a3101eab3321d8c5f67be33</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>low</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a38faaccf781f6a3354c10f582bdfea40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber &amp;</type>
      <name>low</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>aa5432a56c806a53ea8d83bb20d5304dc</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>value</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a8ec3f6ab0b8bfa0fd0ea6c3022b51cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a5a0729350492ff513ca253b046d41c72</anchor>
      <arglist>(long long value)</arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber</type>
      <name>operator+</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a0e522c5485b424616ad8ffc34aa1f219</anchor>
      <arglist>(const SequenceNumber &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber</type>
      <name>operator-</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a57521b1df39f85d76a8d9ec3c66a8990</anchor>
      <arglist>(const SequenceNumber &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber &amp;</type>
      <name>operator+=</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a6888e94cba42b5a18969f8870fcea4f7</anchor>
      <arglist>(const SequenceNumber &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber &amp;</type>
      <name>operator-=</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>ab4f27e766f85ae9350214a2b1d6e4e46</anchor>
      <arglist>(const SequenceNumber &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber</type>
      <name>operator++</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>ab8be77ebea7d6ae5491b68a4ac9d3812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber</type>
      <name>operator++</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a6bc5ec10cd7abb3be81f87aae6cafb98</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber</type>
      <name>operator--</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>aa5c19ed1edcae9e4836c7cec422b1224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SequenceNumber</type>
      <name>operator--</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a15d390d9e30745cd073cf6d3de00478d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a3d9c6f499165adef8bc32ef0db42ee02</anchor>
      <arglist>(const SequenceNumber &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>ad9816d185a8d7590b8a7aaa380521a43</anchor>
      <arglist>(const SequenceNumber &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>ae999eba1336ce3e5f85fe9271566de42</anchor>
      <arglist>(const SequenceNumber &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>afa0e8628c0150717406357177f8cf9df</anchor>
      <arglist>(const SequenceNumber &amp;other) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SequenceNumber</type>
      <name>zero</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a1d43a1406cb0fc23485b5b4292b34fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SequenceNumber</type>
      <name>unknown</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a69226051f67877dbd8e2f0df450ed957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SequenceNumber</type>
      <name>maximum</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a93db0376088ab033fd8ae489974c71fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SequenceNumber</type>
      <name>automatic</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a824798c8aacda7273f41a2c5897db8de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classrti_1_1core_1_1SequenceNumber.html</anchorfile>
      <anchor>a3607355e430941cec608317154a55aff</anchor>
      <arglist>(std::ostream &amp;out, const SequenceNumber &amp;sn)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::ThreadSettingsCpuRotationKind_def</name>
    <filename>structrti_1_1core_1_1ThreadSettingsCpuRotationKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1ThreadSettingsCpuRotationKind__def.html</anchorfile>
      <anchor>a3ad0a7fa67965d1587f87651c968b990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_ROTATION</name>
      <anchorfile>structrti_1_1core_1_1ThreadSettingsCpuRotationKind__def.html</anchorfile>
      <anchor>a3ad0a7fa67965d1587f87651c968b990af515c92ae93c5abfaebe214201ac247c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROUND_ROBIN</name>
      <anchorfile>structrti_1_1core_1_1ThreadSettingsCpuRotationKind__def.html</anchorfile>
      <anchor>a3ad0a7fa67965d1587f87651c968b990a4ae4360ccc8d6cf3532b9211f3214f44</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structrti_1_1core_1_1ThreadSettingsCpuRotationKind__def">ThreadSettingsCpuRotationKind_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::ThreadSettingsKindMask</name>
    <filename>classrti_1_1core_1_1ThreadSettingsKindMask.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; 4 &gt;</type>
      <name>MaskType</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a1dc116e6f8d321a87204d1676f344418</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThreadSettingsKindMask</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a3bf496752a9a1ef713d3473f48a6a84c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThreadSettingsKindMask</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>ac79fe3d5c6476ddca8563b5610783cff</anchor>
      <arglist>(uint64_t mask)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThreadSettingsKindMask</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a823251e24f952ce4bf49a51d65ce16d6</anchor>
      <arglist>(const MaskType &amp;mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ThreadSettingsKindMask</type>
      <name>floating_point</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a58b1e3c93343daf438fa3220033aa8a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ThreadSettingsKindMask</type>
      <name>stdio</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a0be7bc7febdb5a12db411b85e8c42f8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ThreadSettingsKindMask</type>
      <name>realtime_priority</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>af7a6f7db3c73164b486c25aaa230b32e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ThreadSettingsKindMask</type>
      <name>priority_enforce</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a05b248c5189a333a904df1a30bba77b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const ThreadSettingsKindMask</type>
      <name>cancel_asynchronous</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettingsKindMask.html</anchorfile>
      <anchor>a8801fa3db9f83a82e6a71248b69eb769</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::ThreadSettings</name>
    <filename>classrti_1_1core_1_1ThreadSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadSettings</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>ad08ac117606f2e15b108e082afc5f119</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThreadSettings</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>afb8b3565382cd2fa8613667169cec830</anchor>
      <arglist>(ThreadSettingsKindMask the_mask, int32_t the_priority, int32_t the_stack_size, dds::core::vector&lt; int32_t &gt; the_cpu_list, ThreadSettingsCpuRotationKind::type the_cpu_rotation)</arglist>
    </member>
    <member kind="function">
      <type>ThreadSettingsKindMask</type>
      <name>mask</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a6123dbb8bb30f795d86730049cfa7a15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThreadSettings &amp;</type>
      <name>mask</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a0a1aee6a768775c601fa3ca791815ea6</anchor>
      <arglist>(ThreadSettingsKindMask the_mask)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>priority</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a523bfb2a08e6d14acd1239ba3c67db72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThreadSettings &amp;</type>
      <name>priority</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a31a7e88cae01cbb0ddae8d0d3d741427</anchor>
      <arglist>(int32_t the_priority)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>stack_size</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a760f1bc3df5b35142612a1035ab101a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThreadSettings &amp;</type>
      <name>stack_size</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a336d7bd5ca29b784d7916a470d9c944a</anchor>
      <arglist>(int32_t the_stack_size)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::vector&lt; int32_t &gt;</type>
      <name>cpu_list</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>ae1fda1192c1e67ccf87c689df8ec056a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThreadSettings &amp;</type>
      <name>cpu_list</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a01a7d0c6f6973ccf87cd0eaee220de06</anchor>
      <arglist>(const dds::core::vector&lt; int32_t &gt; &amp;the_cpu_list)</arglist>
    </member>
    <member kind="function">
      <type>ThreadSettingsCpuRotationKind</type>
      <name>cpu_rotation</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a40949a79fbd89268cab9328f148db9c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ThreadSettings &amp;</type>
      <name>cpu_rotation</name>
      <anchorfile>classrti_1_1core_1_1ThreadSettings.html</anchorfile>
      <anchor>a91ca661b462a173fd6e3886914ac4399</anchor>
      <arglist>(ThreadSettingsCpuRotationKind the_cpu_rotation)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::TransportClassId_def</name>
    <filename>structrti_1_1core_1_1TransportClassId__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa046a055c5147111ab61788ba5e408643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDPv4</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daaa38d57ec3f2c5b9a88366695abe0b213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHMEM</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa79190d15e385c97763689ce07d3ff923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHMEM_510</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daab4c08cabdc15e6658f65de92114b89b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDPv6</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa361873ab981381523b0b2589eb64a7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDPv6_510</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa6f8594cfd6ca72d98e75945c52671094</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DTLS</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa6b7612927f8cb599506a3f0c15a53ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAN</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa7fda1b033a55811cc870c256129598b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCPV4_LAN</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa4979075a25b02eb2cbcb8f96405b8b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCPV4_WAN</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daa063113c2d8e1f53990e4229b90a7c902</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TLSV4_LAN</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daadcfc4150fcdffb396ee348c0627f7ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TLSV4_WAN</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daafff14d7eb55dfb94b8da5711ae59fc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESERVED_RANGE</name>
      <anchorfile>structrti_1_1core_1_1TransportClassId__def.html</anchorfile>
      <anchor>a8108db86ada07cda8d7d578ba37db7daaec6de3b448cb34a5f9ed4053090faf40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::TransportInfo</name>
    <filename>classrti_1_1core_1_1TransportInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportInfo</name>
      <anchorfile>classrti_1_1core_1_1TransportInfo.html</anchorfile>
      <anchor>aeecbb938cb0415ea853ac4bf5ded519f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportInfo</name>
      <anchorfile>classrti_1_1core_1_1TransportInfo.html</anchorfile>
      <anchor>a47bba63d3ff5c7e04131c1337afc6a71</anchor>
      <arglist>(const rti::core::TransportClassId::type &amp;the_class_id, int32_t the_message_size_max)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::TransportClassId</type>
      <name>class_id</name>
      <anchorfile>classrti_1_1core_1_1TransportInfo.html</anchorfile>
      <anchor>a9314fb9e22fec1df560a01f3387005c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TransportInfo &amp;</type>
      <name>class_id</name>
      <anchorfile>classrti_1_1core_1_1TransportInfo.html</anchorfile>
      <anchor>a2b5d14a16c76a206b9514fb50142780f</anchor>
      <arglist>(const rti::core::TransportClassId::type &amp;the_class_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>message_size_max</name>
      <anchorfile>classrti_1_1core_1_1TransportInfo.html</anchorfile>
      <anchor>a6254424635f6725c28f6ab11c26876b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TransportInfo &amp;</type>
      <name>message_size_max</name>
      <anchorfile>classrti_1_1core_1_1TransportInfo.html</anchorfile>
      <anchor>aaad0d22ddde6e9e424c1c34bf1080c7c</anchor>
      <arglist>(int32_t the_message_size_max)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::VendorId</name>
    <filename>classrti_1_1core_1_1VendorId.html</filename>
    <member kind="function">
      <type></type>
      <name>VendorId</name>
      <anchorfile>classrti_1_1core_1_1VendorId.html</anchorfile>
      <anchor>a6872b50b00df55f14f27bd31889d4deb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>value</name>
      <anchorfile>classrti_1_1core_1_1VendorId.html</anchorfile>
      <anchor>a46da7026e4f675760890dfc30f04f7ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VendorId</type>
      <name>unknown</name>
      <anchorfile>classrti_1_1core_1_1VendorId.html</anchorfile>
      <anchor>a343389a08414d11b1c86056edfaae9f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::core::builtin_profiles</name>
    <filename>namespacerti_1_1core_1_1builtin__profiles.html</filename>
    <namespace>rti::core::builtin_profiles::qos_lib</namespace>
    <namespace>rti::core::builtin_profiles::qos_lib_exp</namespace>
  </compound>
  <compound kind="namespace">
    <name>rti::core::builtin_profiles::qos_lib</name>
    <filename>namespacerti_1_1core_1_1builtin__profiles_1_1qos__lib.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>library_name</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gab82d311dfc92a2f46a7ba5e3626c313f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga59809488ef455e9ae3595544d23067b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline_5_0_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga0d88b7b0a66ac9703fefba94aa550c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline_5_1_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga6298527152f0cc8313e88bdd218ebde6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>baseline_5_2_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga2e40b3c7cf527e4487e4763b2a16dfc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_common</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaf927520e5486f34d1f612d6f305833a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_monitoring_common</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga64ea20ea386769f101a7696cc8bbb34c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_connext_micro_compatibility</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga500cbaace2e81eb83b2de6f1bca0f2e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_other_dds_vendor_compatibility</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9d872c7eb5b6c9e4daa3cf2594f490cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_510_transport_compatibility</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaaeb1900a685cdda3fd7528f932bb58f6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::core::builtin_profiles::qos_lib_exp</name>
    <filename>namespacerti_1_1core_1_1builtin__profiles_1_1qos__lib__exp.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>library_name</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga299a4715ed82e3775542b1451299e1d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga60fd12b920c5278b5b35a5d222f68185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga58788ffe9bd4a9cb1c7a11c1d1d37386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_best_effort</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gab1e9dd6db55a361b1c5929b2dd52aa06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_high_throughput</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga34dfe5c4bb8edd906d93c54882e7d172</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_low_latency</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga475e062f20bbe95fc1900603e0e5da88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_participant_large_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa0223237b3b1a6e7a10e7759fcb6c01e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_participant_large_data_monitoring</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga214a1ef8a7ac7b3c31979e5a132749d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga49f34509fffb1b18a2c1d071ea3c6cb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga30c594c606b6658c2cc4a3eef2fb378e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data_fast_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga276200c8e8ab61a0f47186413ff4c477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data_medium_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga280bcbe56c75c058a7dfe3cb101fcf81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_strict_reliable_large_data_slow_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae17499c375337b34852e2c09c524839e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data_fast_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga2b5fb624526e18eb64c87b9701ddb313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data_medium_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga5616c11302f6a2e551b31f52d74e336a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_large_data_slow_flow</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga2c84c225b7fe2b3636c26b5a257998bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_transient_local</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9b7f8bdb91277a61bd1555f6f66c1fe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_transient</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gadd7a7ed58dc0d341cc3072bf672442be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_keep_last_reliable_persistent</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga7a3d7f406776bee3a59f3f1434fab16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generic_auto_tuning</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa8785882cfd165d62bafb570ed4bd43e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_periodic_data</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga6a692e98d73e921e3a7026bd35b4d2ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_streaming</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae07146a98e377b638ab77bbfb10d45cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_reliable_streaming</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga74c8f9f10590fec49ab2b764041c3ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_event</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaac25508caf9da8d3584ed874e8a4e716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_alarm_event</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaaaa2a7607b8c989dd1ded7a5933e4ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_status</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga373546b64a4b2236ae8cd2e86a3e9316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_alarm_status</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gac2999e918ebc26a6333ecc96fecc4ab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pattern_last_value_cache</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaeb296fb16729b4c87d5acf1b62c250d8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::cond::WaitSetProperty</name>
    <filename>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>WaitSetProperty</name>
      <anchorfile>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</anchorfile>
      <anchor>aaa728a8cc7c351206268c55152046ce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaitSetProperty</name>
      <anchorfile>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</anchorfile>
      <anchor>ad62dddac0fd296f29456aeb08cd7361d</anchor>
      <arglist>(int32_t the_max_event_count, const dds::core::Duration &amp;the_max_event_delay)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_event_count</name>
      <anchorfile>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</anchorfile>
      <anchor>a21ad44b36f4940d38a2874f11ba74f6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WaitSetProperty &amp;</type>
      <name>max_event_count</name>
      <anchorfile>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</anchorfile>
      <anchor>ad0c3a75a199ef92850fd10d90e075483</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_event_delay</name>
      <anchorfile>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</anchorfile>
      <anchor>a392265523dc4e073b24cc55496d7f301</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WaitSetProperty &amp;</type>
      <name>max_event_delay</name>
      <anchorfile>classrti_1_1core_1_1cond_1_1WaitSetProperty.html</anchorfile>
      <anchor>ad0b747d14a65b79154bb0e34ceb4b1f5</anchor>
      <arglist>(const dds::core::Duration &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DomainParticipantResourceLimits</name>
    <filename>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</filename>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_writer_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ae4084b63d8c03f747cea8e0838b4103e</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>local_writer_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a5d4e22e471aeeead9a828e915ac2c1e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_reader_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>abac9a566246ddb9b9ceb55687403030a</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>local_reader_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a06d57f13eb8c32053ee93a206b860263</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_publisher_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a40c4ef3ff0a7f56c08f7eb88e2f65cb2</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>local_publisher_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a6e1d38a6e9600500784f0becf236e152</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_subscriber_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa99cb60d1068b77eee7c0c55bbe071b6</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_topic_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa545d17d8f625b70aa44d56f26145430</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>local_topic_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a221f51bcb88d2d0b0dfe9a44f81340e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>remote_writer_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a39e31029e0f407942f8288758ddc4d57</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>remote_writer_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a6800c3e96ff9e43ff89fb615ffcb4598</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>remote_reader_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ae59a887c55c31c5fdf665ee07cdda7a8</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>remote_reader_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a0ae0ddfe0f5fdad86c123535d6a08206</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>remote_participant_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>abc98c27527fc2b753bfc972984b6381f</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>remote_participant_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a3bddae2384cd057d7368197ccf6cb7ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>matching_writer_reader_pair_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a6be814b0aa7c5c0f764149f89d712ffd</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>matching_writer_reader_pair_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a0dfa01bd24ea0e98c67ba1f9d3d3dc24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>matching_reader_writer_pair_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a30e52d4c5e3d758548b90416b30a96a4</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>matching_reader_writer_pair_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a71d898911c090af0245a0a13aebe00ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>ignored_entity_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>af10fb50822974ddc9e7e760ed5b01c7d</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>ignored_entity_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa6672899b80c138c9201194eca4be983</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>content_filtered_topic_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aefe4c042cab4a9116e483c677925ec0b</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>content_filtered_topic_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a02d06143a13f23a0503338c0412a0911</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>content_filter_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ae0250fa6dd29542f88a26ae6c1c90f6d</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>content_filter_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a694e8b9c9717345da035ed3c66c006d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>read_condition_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ac42cbf799be6a65b7f04fd080a5f9e33</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>read_condition_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a148a190f70552d6b7790bde484916def</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>query_condition_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a218c8afc12a1e24769a2b40f548f8a39</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>query_condition_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>abbd4f232166657319d016bc67901eb05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>outstanding_asynchronous_sample_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>af32c2e80fe1cb453072ccc088e768163</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>outstanding_asynchronous_sample_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a48b5b718970cfd2585ab895efd17b963</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>flow_controller_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a34b80437321ce9453fe7c600102b9ae5</anchor>
      <arglist>(const AllocationSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>AllocationSettings</type>
      <name>flow_controller_allocation</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a892494fbf6b0b5f56592c7863f2a3e3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_writer_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a7202fbb2783b85f7fafe19116afcad4d</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>local_writer_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aebe06cee39a03b67fdf793f07f0e7a4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_reader_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ad8c5973617867b4c11a865fe1d622941</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>local_reader_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a023e5adac56c516141edff1ee50580f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_publisher_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a2f72e959aa313b99b9d32a87ca0ceb99</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>local_publisher_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a9617772b0983cb219f6b4e19cba5c199</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_subscriber_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a79af3e6d9db86bdda025a2840ec18735</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>local_subscriber_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aaadcafd1dfb6b5f5f6da795b33fbad04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>local_topic_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a8dc069b289e9c28fbc1b31c701fa36bc</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>local_topic_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a04a0d90bc03fd98cbe81bcc1408247ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>remote_writer_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a39f003901f5090fe452b2ecd12bb1bb8</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>remote_writer_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa77808547013f0b190d2b96fd02f3fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>remote_reader_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ad99696eb5132c92a482cd0ef354c6cee</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>remote_reader_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a578a9706cf418c9eae3d7b09ff5b400b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>remote_participant_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a2bce8f3ee0b430b5740e6b0b0c1742cd</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>remote_participant_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a276a20a702f24422124ddcfc7d64d6b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>matching_writer_reader_pair_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a188d2784eb5368c3ddd9093ed2e70379</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>matching_writer_reader_pair_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ad2739a0d89061f69fb51e0301cf022c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>matching_reader_writer_pair_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a040b2eda22d3c591226f00ed07fddd48</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>matching_reader_writer_pair_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>adbed9d5f28a776d0a0807f4e9bb502b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>ignored_entity_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a320294daeb76fb114464aa0398419b27</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>ignored_entity_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aab388fb571c7107f7d067372feef9f84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>content_filtered_topic_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a09809e7138d4ed1fec33759948ed9b35</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>content_filtered_topic_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a2cbe391033b0d4cd705b44ef45420c5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>content_filter_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>af5b4a303abfd83c94bfc2ed5d8f664e6</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>content_filter_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a7c05afd4950a82fcd17e9c65cdc77b00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>flow_controller_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aed22c5d4e7f75e8076c2cf9cdc0ca70d</anchor>
      <arglist>(int32_t hash_buckets)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>flow_controller_hash_buckets</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ae173639ead6b4d288d3748da98da3ca1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>max_gather_destinations</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a62ad2ada3514442cfaf5252cb2212569</anchor>
      <arglist>(int32_t max_destinations)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_gather_destinations</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a35209f549484808469333b12d24a1c9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>participant_user_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a85a0bd5301db7515d2d17f6cf6302429</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>participant_user_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a1a9ba6066274e4505035672e1c4d56d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>topic_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a8266ec7385a1c01372870bc3b8bcc6cb</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>topic_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a41c4113e87d60e813ed6833deaa42e7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>publisher_group_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a50bc5f148623cb4ddeb6d0a224c04334</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>publisher_group_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a44513297bd335af36887b8b9349b80c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>subscriber_group_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a77ccae459eb4ac54a6b526f1b59af16f</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>subscriber_group_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>affcb2de7a1b9937b6b4b95e4d57f0f4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>writer_user_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>acfb44e14aa31c007c2d51975e7ea795f</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>writer_user_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa62f6234aca8459a2a566d651edc0db4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>reader_user_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ab340c2328a6e5e098053407471f53170</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>reader_user_data_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa76ecd8bcdb52fedb9b34675ad16587f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>max_partitions</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a69a6abc657e4c8e477f8f4099077cd88</anchor>
      <arglist>(int32_t partitions)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_partitions</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a9f862d00d58efada39eaf44e7bb2b003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>max_partition_cumulative_characters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a6ff7e3b1fadea707c173259bcffc8544</anchor>
      <arglist>(int32_t max_characters)</arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>type_code_max_serialized_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a921f05bc9645ed197daa44de1e8ad8a0</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>type_code_max_serialized_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a6f66f367f8d6c1edd6a4e172a9f6c896</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>type_object_max_serialized_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ad74dde4c5193bd3b98f7042c7f1a356a</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>type_object_max_serialized_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a34607bd6ac72c0dfac088ee1943fa58d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>type_object_max_deserialized_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a505a8ecc4b2c4c038f253c9b434b9363</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>type_object_max_deserialized_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a4a24b614b9aaeb341edf4a3e0054190b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>deserialized_type_object_dynamic_allocation_threshold</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ab025bb0ba363052c27d5b6fcf0f12e48</anchor>
      <arglist>(int32_t threshold)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>deserialized_type_object_dynamic_allocation_threshold</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a3fd1ac11b372386cab1f5474be4a3f3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>contentfilter_property_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aed0ba520c63c7a1d34b353a4f4c66100</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>contentfilter_property_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ab8b6de5cc0e2aac5ab6ab8fb760b8dc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>channel_seq_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>afc03c2b6d565171aa598ce8085a17008</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>channel_seq_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a55c88a2482d56aeecacbf3fe59ed33e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>channel_filter_expression_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa8fd4af65f2ba4b75287a2df0e3274e2</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>channel_filter_expression_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>af2e614fdfe893ab8f96e5735c4522833</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>participant_property_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aaa4e5f9f251a4a795fd8b818d7a66dbc</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>participant_property_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a352f6b53c7ae648d33c52e18e0c85faf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>participant_property_string_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a507d384efb2437c3af5950d29852ae87</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>participant_property_string_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a625a58de6edf811cc008a3796c378b75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>writer_property_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a63ca00f9aee46d2f693051a5a7893379</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>writer_property_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a846a2960b2ee67cd92e046fdbc0aa59e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>writer_property_string_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>aa200aa97e18805195d5c0ee162380180</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>writer_property_string_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a1d29712754e5f234222ad01f99879ed1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>reader_property_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a6d8a7ff97e356afc96a0d4eda629d707</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>reader_property_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ac0a550c92abb6c0be5940ac45346b1e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>reader_property_string_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a2b4d02ba82b6ec532c1b824b7aa61222</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>reader_property_string_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ae4cf5f1993cf7980bfec127b62ae9c3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>max_endpoint_groups</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a9305e89792503a87f4b6d93b2822b99f</anchor>
      <arglist>(int32_t max_groups)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_endpoint_groups</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>addd4cf1397e364e7076d3471036ccbe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>max_endpoint_group_cumulative_characters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a71a3e0157aefbebaa709a393ca725daa</anchor>
      <arglist>(int32_t max_cumulative_characters)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_endpoint_group_cumulative_characters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>ab9fd6c7a86c9512865bc060aa5504319</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>transport_info_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>acc4dc62d8fd5ef3b1aaed62363724843</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>transport_info_list_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>afd4b9dddd348da8a1193c6885b38f350</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantResourceLimits &amp;</type>
      <name>ignored_entity_replacement_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a0aadf46a614953814e0ec1e5542014b8</anchor>
      <arglist>(IgnoredEntityReplacementKind max_length)</arglist>
    </member>
    <member kind="function">
      <type>IgnoredEntityReplacementKind</type>
      <name>ignored_entity_replacement_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DomainParticipantResourceLimits.html</anchorfile>
      <anchor>a5e8e8d5b8d4f594a8ec6a59e6da34ed0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TransportBuiltin</name>
    <filename>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportBuiltin</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a35875fdae9f01e072e779d9729d299d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportBuiltin</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>ac9f20f6f6930bddbd01fd6eac24fd0d9</anchor>
      <arglist>(const rti::core::policy::TransportBuiltinMask &amp;the_mask)</arglist>
    </member>
    <member kind="function">
      <type>TransportBuiltin &amp;</type>
      <name>mask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>ae0301e26f438f47abbb52afb04e265ae</anchor>
      <arglist>(rti::core::policy::TransportBuiltinMask the_mask)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::policy::TransportBuiltinMask</type>
      <name>mask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a38011952453120566ff6711fc09edcfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransportBuiltin</type>
      <name>All</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a02ddda4164f1fb986e61f1edb95c2792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransportBuiltin</type>
      <name>None</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a375e32668594b9569d84fee58dc0c1ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransportBuiltin</type>
      <name>Shmem</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a4d4494f28dcf74f43d90f42cb4500acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransportBuiltin</type>
      <name>UDPv4</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>ac0eebe1ac507fd9bce7f16b65993f6d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransportBuiltin</type>
      <name>UDPv6</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a5c9a7b76a3077394988200510428a96d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>SHMEM_ALIAS</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a7cdfaeaf85c2a1e1c30e13c368990537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UDPv4_ALIAS</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>a3233e9ba6f65877033a5b6f30a96c2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UDPv6_ALIAS</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltin.html</anchorfile>
      <anchor>aefb226eafc9a289eadb42e529b4598fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TransportUnicast</name>
    <filename>classrti_1_1core_1_1policy_1_1TransportUnicast.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportUnicast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportUnicast.html</anchorfile>
      <anchor>af3f17e48ed20d4a89eac5abd853663a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportUnicast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportUnicast.html</anchorfile>
      <anchor>ab06be2b066f9f905fde4b8a8b5109736</anchor>
      <arglist>(const rti::core::TransportUnicastSettingsSeq &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>TransportUnicast &amp;</type>
      <name>settings</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportUnicast.html</anchorfile>
      <anchor>abc375d8e1d1fe28eaf25361781087830</anchor>
      <arglist>(const rti::core::TransportUnicastSettingsSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::TransportUnicastSettingsSeq</type>
      <name>settings</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportUnicast.html</anchorfile>
      <anchor>afa75a7383ccb3e516d7d6593a25f64a4</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1TransportUnicast">DDSTransportUnicastQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Database</name>
    <filename>classrti_1_1core_1_1policy_1_1Database.html</filename>
    <member kind="function">
      <type>Database &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>ab666ca6ac8ba3c6edb8f55b876bd6765</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_thread)</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a60a3a59c11132acf49861afcef8abea0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>ac8f030ae2e4139def9dabce588302c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>shutdown_timeout</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a2eeb14d87c94eeaaacab421e06d37591</anchor>
      <arglist>(const dds::core::Duration &amp;the_shutdown_timeout)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>shutdown_timeout</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>af5211713de74151a3806937d1e8d5210</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>cleanup_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>aa8355af1b421552c887236e44299edbd</anchor>
      <arglist>(const dds::core::Duration &amp;the_cleanup_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>cleanup_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a51aaef36866396c5baf7e7f8d1a0f72f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>shutdown_cleanup_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>abca37c452568f7640c5fddd4ee919f2f</anchor>
      <arglist>(const dds::core::Duration &amp;period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>shutdown_cleanup_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a8dd641349c7ec331e1edbe257f7d54bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>initial_records</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>adf0979fd629a11737a5f974eb23a5cf6</anchor>
      <arglist>(int32_t the_initial_records)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_records</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a85803312081b9b2bcd5dd858a691fe1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>max_skiplist_level</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>aaaecef41949c0f7081eaa08674ab8655</anchor>
      <arglist>(int32_t the_max_skiplist_level)</arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>max_weak_references</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>ad10c8431cd24504187867a1a035653e2</anchor>
      <arglist>(int32_t the_max_weak_references)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_weak_references</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a98f3fe70c6c0b975303277701e8b9b49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Database &amp;</type>
      <name>initial_weak_references</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>ab656eb33cac61afd5e0d5a8e921d2f83</anchor>
      <arglist>(int32_t the_initial_weak_references)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_weak_references</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Database.html</anchorfile>
      <anchor>a3138544c2f97b9fd46fea66888819c71</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Discovery</name>
    <filename>classrti_1_1core_1_1policy_1_1Discovery.html</filename>
    <member kind="function">
      <type></type>
      <name>Discovery</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>aa80d5aa86e0a02640eca2c5c14c490a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Discovery &amp;</type>
      <name>enabled_transports</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a4e3f4619e616e1f6afe74b312d0fd3f4</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_enabled_transports)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>enabled_transports</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a9ea26aee967d0093865e7a5f22cb2583</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Discovery &amp;</type>
      <name>initial_peers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>add4990bc17ecbaa6f152ea548530cc0a</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_initial_peers)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>initial_peers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a28746038c50e96a8aae5ffa6807d45b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Discovery &amp;</type>
      <name>multicast_receive_addresses</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a5c2300dcda25c2c34e3bccc7c717d3f6</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_multicast_receive_addresses)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>multicast_receive_addresses</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>ac7fb07130e1ec3b26c6603fec25ee7c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Discovery &amp;</type>
      <name>metatraffic_transport_priority</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a84b61c084683df8c892d30127507cf07</anchor>
      <arglist>(int32_t the_metatraffic_transport_priority)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>metatraffic_transport_priority</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a95438849e35d0d4ada83aa9094b740d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Discovery &amp;</type>
      <name>accept_unknown_peers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a67d7ba4e8977e21e675c6350bf838df6</anchor>
      <arglist>(bool the_accept_unknown_peers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>accept_unknown_peers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a58256a2a6b309956fc511d1dc47d7aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Discovery &amp;</type>
      <name>enable_endpoint_discovery</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a4e4c32e03e1d523bc30ddd12d9921b79</anchor>
      <arglist>(bool the_enable_endpoint_discovery)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enable_endpoint_discovery</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Discovery.html</anchorfile>
      <anchor>a673a75d802264eebea97d30feb8688e8</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1Discovery">DDSDiscoveryQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::EntityName</name>
    <filename>classrti_1_1core_1_1policy_1_1EntityName.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityName</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>a3a3ce7af1d55fc1cd36859aa7fabea38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityName</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>a3cbdda0ff8d6e025b34a5524e8c4a707</anchor>
      <arglist>(const std::string &amp;the_name)</arglist>
    </member>
    <member kind="function">
      <type>EntityName &amp;</type>
      <name>name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>a24772f2957f128f0cf5f3fd044fe8f51</anchor>
      <arglist>(const rti::core::optional_value&lt; std::string &gt; &amp;the_name)</arglist>
    </member>
    <member kind="function">
      <type>EntityName &amp;</type>
      <name>name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>a1202b2d14f9a8960174d9397bf26baa5</anchor>
      <arglist>(const char *the_name)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::optional_value&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>accaa75ae7ee4569dc4b29282c45d951e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EntityName &amp;</type>
      <name>role_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>aa819329016ca3d5cfb425182dc85ad95</anchor>
      <arglist>(const rti::core::optional_value&lt; std::string &gt; &amp;the_name)</arglist>
    </member>
    <member kind="function">
      <type>EntityName &amp;</type>
      <name>role_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>aa09227062ae2028d9ee08c03083b100e</anchor>
      <arglist>(const char *the_name)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::optional_value&lt; std::string &gt;</type>
      <name>role_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1EntityName.html</anchorfile>
      <anchor>a4d1f5554037bcf90f4bd11a3fce7bc79</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1EntityName">DDSEntityNameQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Property</name>
    <filename>classrti_1_1core_1_1policy_1_1Property.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>Entry</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a738ff73b80705bdc33af64d42c1c6f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a17c908cdcb71e6327418683db7a8e3b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a90abdbaf162c65b062e2658c4113dbc8</anchor>
      <arglist>(EntryIter begin, EntryIter end, bool propagate=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a5d195176a76ffd7531054a647ec9e868</anchor>
      <arglist>(std::initializer_list&lt; Entry &gt; entries)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a04b8eaa89c7f685ef8c30dd3b54773dd</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a4f025fbd50495346bf9aa72a4440774f</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::optional_value&lt; std::string &gt;</type>
      <name>try_get</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>ae2cfccd1d300c8bff1b2a17952decff2</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>Property &amp;</type>
      <name>set</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a875608f220fb257654b3e07db5aba227</anchor>
      <arglist>(const Entry &amp;property, bool propagate=false)</arglist>
    </member>
    <member kind="function">
      <type>Property &amp;</type>
      <name>set</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a370fc461d35bcc3623b6824d979752e4</anchor>
      <arglist>(EntryIter begin, EntryIter end, bool propagate=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>ad0e6df6cb8048d31ec1d44c9994a7e47</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a30f2eac0506efeb17abb12754d618bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>get_all</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>aace9e977551cd542c5c6d23d7b4dfd5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>a0524bf361c3bb1073e02d29e946dcd2d</anchor>
      <arglist>(std::initializer_list&lt; Entry &gt; entries, bool propagate=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propagate</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Property.html</anchorfile>
      <anchor>abfe2f5b7cf6b6dfa26bfdfb08342681f</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1Property">DDSPropertyQosModule_usage</docanchor>
    <docanchor file="classrti_1_1core_1_1policy_1_1Property">DDSPropertyQosModule_usage_reasons</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::LocatorFilter</name>
    <filename>classrti_1_1core_1_1policy_1_1LocatorFilter.html</filename>
    <member kind="typedef">
      <type>rti::core::LocatorFilterElement</type>
      <name>Filter</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a0dbbaa68d87d8727be9fd188858fadac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Filter &gt;</type>
      <name>FilterSeq</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a32a5c25e9065a3a40041fef41a76c8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocatorFilter</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a379d438f80b5072f1562e3013d0d08a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocatorFilter</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>ad6f1955fd5d6ea8f8a7e21aefd54dad5</anchor>
      <arglist>(const FilterSeq &amp;the_locator_filters, const std::string &amp;the_filter_name=rti::topic::stringmatch_filter_name())</arglist>
    </member>
    <member kind="function">
      <type>LocatorFilter &amp;</type>
      <name>locator_filters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a632c31fccf3f02dfb0403885c2a85462</anchor>
      <arglist>(const FilterSeq &amp;the_locator_filters)</arglist>
    </member>
    <member kind="function">
      <type>FilterSeq</type>
      <name>locator_filters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a371a6dcd4b8a9d18a5dd5c0ae3d67369</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocatorFilter &amp;</type>
      <name>filter_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a4e18c78a596cf66cd1a924c5cc9ec81c</anchor>
      <arglist>(const std::string &amp;the_filter_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filter_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1LocatorFilter.html</anchorfile>
      <anchor>a473f52fae783031175bffbf7a7b42517</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Service</name>
    <filename>classrti_1_1core_1_1policy_1_1Service.html</filename>
    <member kind="function">
      <type></type>
      <name>Service</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a329ef45aa4ca099db9d86af1f107e7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Service</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a6a2d4f137b6c504018ba826a0454b1ab</anchor>
      <arglist>(rti::core::policy::ServiceKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>Service &amp;</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a69c611c677fcbf4aaae9799a9aab9d73</anchor>
      <arglist>(const rti::core::policy::ServiceKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::policy::ServiceKind</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a1d635b360268a2399f6ae6d70150af10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>NoService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a8fe4ed08a3c5258164b08ce9dee8c64c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>PersistenceService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a11b74e527b02d5e7b793bc6cda26e011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>QueuingService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a46be137d699745b388e8747b36c88056</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>RoutingService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>aac0af05702d105c436c81b2887045e5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>RecordingService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>aa809c02f76513433b8d54cc1f025c165</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>DatabaseIntegrationService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a47790d661305daac77a3af2350e73398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Service</type>
      <name>ReplayService</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Service.html</anchorfile>
      <anchor>a684d289dec04d11edd2a32ab7309f7da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::MultiChannel</name>
    <filename>classrti_1_1core_1_1policy_1_1MultiChannel.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiChannel</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1MultiChannel.html</anchorfile>
      <anchor>af8007eb016443c0a42e48cae2de5c47b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiChannel</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1MultiChannel.html</anchorfile>
      <anchor>a9622e8e37746750b32e4adaf6fbc6b5d</anchor>
      <arglist>(const rti::core::ChannelSettingsSeq &amp;the_channels, const std::string &amp;the_filter_name=rti::topic::stringmatch_filter_name())</arglist>
    </member>
    <member kind="function">
      <type>MultiChannel &amp;</type>
      <name>channels</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1MultiChannel.html</anchorfile>
      <anchor>a4fc87ff4b904a7e12b16f41a09ee3d66</anchor>
      <arglist>(const rti::core::ChannelSettingsSeq &amp;the_channels)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::ChannelSettingsSeq</type>
      <name>channels</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1MultiChannel.html</anchorfile>
      <anchor>a56a606c233ec50176aa5a150bd6e8d65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MultiChannel &amp;</type>
      <name>filter_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1MultiChannel.html</anchorfile>
      <anchor>ac4c2fc32356444426c796424dbc4f77a</anchor>
      <arglist>(const std::string &amp;the_filter_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filter_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1MultiChannel.html</anchorfile>
      <anchor>a732b5c8fc3a74e8066ddb2d9e98484f9</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1PublishMode">DDSMultiChannelQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::PublishMode</name>
    <filename>classrti_1_1core_1_1policy_1_1PublishMode.html</filename>
    <member kind="function">
      <type></type>
      <name>PublishMode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a226aef248f6a15254341527a0eb45341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PublishMode &amp;</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a8beee8c22d5a8c1b415929495a55f19e</anchor>
      <arglist>(const rti::core::policy::PublishModeKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::policy::PublishModeKind</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a2f8d1b7d9235808409026bc4b9332c67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>flow_controller_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a377dfe56cd5bce1f71c48f76a5ddec98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PublishMode &amp;</type>
      <name>flow_controller_name</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>ace1704d7b276f91d14a70405ad2509b8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>priority</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a385a7ce633dc1b0d6cf6cc4fb3a4d8c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PublishMode &amp;</type>
      <name>priority</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>abc9c9a1a306745f93242ac311206b698</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PublishMode</type>
      <name>Synchronous</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a68631ff436492f40f8d9d60fede169ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PublishMode</type>
      <name>Asynchronous</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>abdb5bbc90838aa5448f5e5cefe7b8a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PublishMode</type>
      <name>Asynchronous</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>acf7f3a7a95250347e8b2bcb164ecbbcf</anchor>
      <arglist>(const std::string &amp;flow_controller_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PublishMode</type>
      <name>Asynchronous</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1PublishMode.html</anchorfile>
      <anchor>a2a0ec7aff8c1f2651ab7bb5b82a47706</anchor>
      <arglist>(const std::string &amp;flow_controller_name, int32_t priority)</arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1PublishMode">DDSMultiChannelQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::WireProtocol</name>
    <filename>classrti_1_1core_1_1policy_1_1WireProtocol.html</filename>
    <member kind="function">
      <type></type>
      <name>WireProtocol</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>aec2cfefc8b746ba1f259459d91c4a05d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>participant_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>ae1b842e97b5d6d5b6c3970d70a4552ae</anchor>
      <arglist>(int32_t the_participant_id)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>participant_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a919e520b0372c62f7afb23bc1a3272c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>rtps_host_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>aa350ac2c88ddf111b789d0764014b059</anchor>
      <arglist>(uint32_t the_rtps_host_id)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>rtps_host_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a076284655bddcf4e8e0865daaa9a9943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>rtps_app_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>aa36f88028db39a51a48ddb9908cf7264</anchor>
      <arglist>(uint32_t the_rtps_app_id)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>rtps_app_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a65b2e3b80450d7f8b5f584fa1535f060</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>rtps_instance_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a13b70f9fd7bd7f5209c03ef77f43e4b3</anchor>
      <arglist>(uint32_t the_rtps_instance_id)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>rtps_instance_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a569b625d6d0e358f8868cff93fadcde8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>rtps_well_known_ports</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a898c0359cfbe7c95c3df59f14c7000d3</anchor>
      <arglist>(const rti::core::RtpsWellKnownPorts &amp;the_rtps_well_known_ports)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::RtpsWellKnownPorts</type>
      <name>rtps_well_known_ports</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a14b6e0a517cffcbec188d02ba7d2e97b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>rtps_reserved_port_mask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a212678e7a344e9abb4598425bc1f64c3</anchor>
      <arglist>(const RtpsReservedPortKindMask &amp;the_rtps_reserved_port_mask)</arglist>
    </member>
    <member kind="function">
      <type>RtpsReservedPortKindMask</type>
      <name>rtps_reserved_port_mask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>ad1636114645601e1a3565f92a8163b98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WireProtocol &amp;</type>
      <name>rtps_auto_id_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>af84075d94b9dab35731a85909d1c6257</anchor>
      <arglist>(const rti::core::policy::WireProtocolAutoKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::policy::WireProtocolAutoKind</type>
      <name>rtps_auto_id_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a75cee81b53991e752d98416a1ebc45c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const uint32_t</type>
      <name>RTPS_AUTO_ID</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1WireProtocol.html</anchorfile>
      <anchor>a08efb2b7bbfd6de649f6a606dc38c451</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1WireProtocol">DDSWireProtocolQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Batch</name>
    <filename>classrti_1_1core_1_1policy_1_1Batch.html</filename>
    <member kind="function">
      <type></type>
      <name>Batch</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>af653db6a371a210abbc000f9194f3f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Batch &amp;</type>
      <name>enable</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a2e88a4939b1fd730880d749fc1b52b3c</anchor>
      <arglist>(bool the_enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enable</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>aabd0ee5d1b087cdbf55e242e93ec7a54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Batch &amp;</type>
      <name>max_data_bytes</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a4daa6dd464e415099a1262290ef083fb</anchor>
      <arglist>(int32_t the_max_data_bytes)</arglist>
      <docanchor file="classrti_1_1core_1_1policy_1_1Batch">DDSBatchQosModule_max_data_bytes_consistency</docanchor>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_data_bytes</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a9b0fd25c9e2050c4af14b80e93e68c15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Batch &amp;</type>
      <name>max_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a52557fefdaca79768d0a9e811ac5e7c4</anchor>
      <arglist>(int32_t the_max_samples)</arglist>
      <docanchor file="classrti_1_1core_1_1policy_1_1Batch">DDSBatchQosModule_max_samples_consistency</docanchor>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>ae4d2ad5d80425acc95855cf3b30452d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Batch &amp;</type>
      <name>max_flush_delay</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>aa81000f83e590b59b3cc17e90ba41d30</anchor>
      <arglist>(const dds::core::Duration &amp;the_max_flush_delay)</arglist>
      <docanchor file="classrti_1_1core_1_1policy_1_1Batch">DDSBatchQosModule_max_flush_delay_consistency</docanchor>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_flush_delay</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>ac8e56e6cd05ee95af43448da52ab7ea0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Batch &amp;</type>
      <name>source_timestamp_resolution</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>ae089650c86ddb51718cd898849534467</anchor>
      <arglist>(const dds::core::Duration &amp;the_source_timestamp_resolution)</arglist>
      <docanchor file="classrti_1_1core_1_1policy_1_1Batch">DDSBatchQosModule_source_timestamp_resolution_consistency</docanchor>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>source_timestamp_resolution</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a9c6dec636b085db2e8ec8e228496527b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Batch &amp;</type>
      <name>thread_safe_write</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a88f12e82274913699f350617dde9eac3</anchor>
      <arglist>(bool the_thread_safe_write)</arglist>
      <docanchor file="classrti_1_1core_1_1policy_1_1Batch">DDSBatchQosModule_thread_safe_write_consistency</docanchor>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>thread_safe_write</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>af3e68b29e053346b8790b9ee439beca1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Batch</type>
      <name>Enabled</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a989f4156092654cedf7f135c21c59dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Batch</type>
      <name>Disabled</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a35f8af71e7386d11f6ce1d4c3d4863e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Batch</type>
      <name>EnabledWithMaxDataBytes</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a2c884ae308d15ef6c0df2d218c028d11</anchor>
      <arglist>(int32_t the_max_bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Batch</type>
      <name>EnabledWithMaxSamples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Batch.html</anchorfile>
      <anchor>a4bf2dff887d7253015cf1cda1619cb65</anchor>
      <arglist>(int32_t the_max_samples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::SystemResourceLimits</name>
    <filename>classrti_1_1core_1_1policy_1_1SystemResourceLimits.html</filename>
    <member kind="function">
      <type></type>
      <name>SystemResourceLimits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1SystemResourceLimits.html</anchorfile>
      <anchor>aed4b7fc7eeeb037ee98fe55878058247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SystemResourceLimits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1SystemResourceLimits.html</anchorfile>
      <anchor>ab180bd5321a38aa6d9769f596af20dd0</anchor>
      <arglist>(int32_t the_max_objects_per_thread)</arglist>
    </member>
    <member kind="function">
      <type>SystemResourceLimits &amp;</type>
      <name>max_objects_per_thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1SystemResourceLimits.html</anchorfile>
      <anchor>a1cf7b8e7486132076fc43b2952731ddb</anchor>
      <arglist>(int32_t the_max_objects_per_thread)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_objects_per_thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1SystemResourceLimits.html</anchorfile>
      <anchor>aa906896103b19fbe3e60bf80509d63b1</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1SystemResourceLimits">DDSSystemResourceLimitsQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DataWriterResourceLimits</name>
    <filename>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</filename>
    <member kind="function">
      <type></type>
      <name>DataWriterResourceLimits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>ac488f1949f417b660228fc2980fe7946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>initial_concurrent_blocking_threads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>ac8a31cb69e0862711d19f2a560477f87</anchor>
      <arglist>(int32_t the_initial_concurrent_blocking_threads)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_concurrent_blocking_threads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a5da881bac3b34d719e9da28286e8e2d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>max_concurrent_blocking_threads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a6d0610e447b6cb32b23f3d4445bc794e</anchor>
      <arglist>(int32_t the_max_concurrent_blocking_threads)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_concurrent_blocking_threads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a286c4f1316289807316607d91e07d79b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>max_remote_reader_filters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a78767fe828555fe02545f8c666b4a775</anchor>
      <arglist>(int32_t the_max_remote_reader_filters)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_reader_filters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a702731bad82504f838f9cf383876f1e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>initial_batches</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a894852bcc078ef147b160705247cea99</anchor>
      <arglist>(int32_t the_initial_batches)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_batches</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>ab6d1da4b7cc049544c1fc0cfe62e6744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>max_batches</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a5a3128caa28803c114a5bed305dc796d</anchor>
      <arglist>(int32_t the_max_batches)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_batches</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a1b31f6487fd2401e21bc22ceaa953db8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>cookie_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>add34b0f06266de7eff4fbfa86661ad00</anchor>
      <arglist>(int32_t max_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>cookie_max_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a055a78eb2ec28c45c608cb34c7456d65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>instance_replacement</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>af18f49b326eb2cf17807e4e92bf6374c</anchor>
      <arglist>(DataWriterResourceLimitsInstanceReplacementKind the_instance_replacement)</arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimitsInstanceReplacementKind</type>
      <name>instance_replacement</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>aad1e65fb9cf5020232a3d94f1b0b5510</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>replace_empty_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a92f9fe22c1b6938d19fe4e22f1608c66</anchor>
      <arglist>(bool the_replace_empty_instances)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replace_empty_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a0502ec112149f2fcd07e473c88af3fb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>autoregister_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a797c23bae5553aac1d9e597b6301b62b</anchor>
      <arglist>(bool the_autoregister_instances)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoregister_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>ae0f7e0d8bb21203240cb04776e2931d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>initial_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>ac5a3781de4e1d60c30736afed11e985e</anchor>
      <arglist>(int32_t the_initial_virtual_writers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>afe77962e27907eb2d2eeaea2111cc149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>max_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>abdcf305adb179fa8ef9ae8e30b89f6e9</anchor>
      <arglist>(int32_t the_max_virtual_writers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a5ce6b68f9ba651b871ae38b7004eb421</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>max_remote_readers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a69f4011de8fab6cdd2a06b3bf2dcf864</anchor>
      <arglist>(int32_t the_max_remote_readers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_readers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>abff510000bea71b9081137ba4a8aba3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterResourceLimits &amp;</type>
      <name>max_app_ack_remote_readers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a08b55eaf050d9cd2d2e3a43a097f7403</anchor>
      <arglist>(int32_t the_max_app_ack_remote_readers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_app_ack_remote_readers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterResourceLimits.html</anchorfile>
      <anchor>a5b7f269a4d1bc7aa7f2e2e3851163fa3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DataReaderResourceLimits</name>
    <filename>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</filename>
    <member kind="function">
      <type></type>
      <name>DataReaderResourceLimits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ab1491c1ac182f7b49d8111a6a993aab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_remote_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>aaf2c2030130fe254f09742302b6beef6</anchor>
      <arglist>(int32_t the_max_remote_writers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a4cf50ab97e409ee2d3662b66d40d5946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_remote_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a33466dc123f94b23eae592d664792162</anchor>
      <arglist>(int32_t the_max_remote_writers_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ab176c51db66353feef4beee4bb74b6b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_samples_per_remote_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a843b1e56a46d11df546911c7a7d929b8</anchor>
      <arglist>(int32_t the_max_samples_per_remote_writer)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples_per_remote_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a26e9b31280a16149ef8e16e74c159d00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a0e96cfcc20fa553f8a0fa58d4b6efe7a</anchor>
      <arglist>(int32_t the_max_infos)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a1b80b4eac2071a19c55f99cedc9adfd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>initial_remote_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ad28ec118e4547d04467812c97093a3c9</anchor>
      <arglist>(int32_t the_initial_remote_writers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_remote_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a5f5ab328cc3c39593d6070bc6528205f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>initial_remote_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ab75c499b7ed7887b50d7803268196206</anchor>
      <arglist>(int32_t the_initial_remote_writers_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_remote_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>abb0d31e9b0d588c215af96dcacc3a5dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a80df3c9c5f3e52193116c257d115b7f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>initial_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a27ab913a61a307350f4789f37387daab</anchor>
      <arglist>(int32_t the_initial_outstanding_reads)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ae36c164a5c9df7f7939e53894a508226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a9502966c7115a8342683a9563541d46e</anchor>
      <arglist>(int32_t the_max_outstanding_reads)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a39cd801f9df2b53992258a3044aa81de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_samples_per_read</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a60c935442b2bffb8acbdc71ae05326cd</anchor>
      <arglist>(int32_t the_max_samples_per_read)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples_per_read</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a1ed40e358555e1bf50ce1da98cf679e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>disable_fragmentation_support</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a402c42ca6e2d3e58f52c69887bdc480c</anchor>
      <arglist>(bool the_disable_fragmentation_support)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_fragmentation_support</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>aa6efa34e04e72d330437b9b9ef2d015f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a66442e068410c27384a2cb2812b28a3e</anchor>
      <arglist>(int32_t the_max_fragmented_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a2561c9a8a1c7d37aa57cf388e8e9c69e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>initial_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a17acb17b9ef5ffb7126c7a37d860f57a</anchor>
      <arglist>(int32_t the_initial_fragmented_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>aa86aa80b4c9036bc842669d67c22d7e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_fragmented_samples_per_remote_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a3399b71c5906902be89a4b5d5de2e762</anchor>
      <arglist>(int32_t the_max_fragmented_samples_per_remote_writer)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_fragmented_samples_per_remote_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ab020931ddb1e21eb8975f70054a9c386</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_fragments_per_sample</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a6daad429f29ae958e400a3d415b1dbe2</anchor>
      <arglist>(int32_t the_max_fragments_per_sample)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_fragments_per_sample</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ae1946e4336f6e667688cb061782b4155</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>dynamically_allocate_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a5235988e69052c6dd2441ace61359fa0</anchor>
      <arglist>(bool the_dynamically_allocate_fragmented_samples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dynamically_allocate_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>acd01c96e13e14b08545125471e6c7d97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_total_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a501c49e23ec86d894ebc913f532a6d99</anchor>
      <arglist>(int32_t the_max_total_instances)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_total_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ae8df57cbd65d11ad1454c2151aa66de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_remote_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a160fcbc5bb1c7890bd641f19bb0409fc</anchor>
      <arglist>(int32_t the_max_remote_virtual_writers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ad7c1ccbfbd437c24b95eb78f860ae780</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>initial_remote_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a2d66482197f90dd206399784e788e54d</anchor>
      <arglist>(int32_t the_initial_remote_virtual_writers)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_remote_virtual_writers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ae7d8ba194062615ad02c132e84624220</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_remote_virtual_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ab33ace5818469ef9273b4e181e772153</anchor>
      <arglist>(int32_t the_max_remote_virtual_writers_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_virtual_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a39208f0ed64b04cfa8b786ea6776c4f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>initial_remote_virtual_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ae817e760c2f90e4174cbd15aaa280d39</anchor>
      <arglist>(int32_t the_initial_remote_virtual_writers_per_instance)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_remote_virtual_writers_per_instance</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>aee3ec8eef686c4ab55191f5352214b40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_remote_writers_per_sample</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>ac018fc863e5bc83d396e4a2e5802f313</anchor>
      <arglist>(int32_t the_max_remote_writers_per_sample)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_remote_writers_per_sample</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>abe8b013b625f609628410f3c11ce84b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_query_condition_filters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a5dc0b97c463fd531a1dd00d95ce180ea</anchor>
      <arglist>(int32_t the_max_query_condition_filters)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_query_condition_filters</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a237895ee033e6b74aeac0b8c73b372c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>max_app_ack_response_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>abc77695f81cf933f693388f715997900</anchor>
      <arglist>(int32_t the_max_app_ack_response_length)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_app_ack_response_length</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>afd0e69751341b92b40ed3099ff9d4f54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderResourceLimits &amp;</type>
      <name>keep_minimum_state_for_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>afe05fabccf4e96f8acdd7397afe5f4d8</anchor>
      <arglist>(bool the_keep_minimum_state_for_instances)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keep_minimum_state_for_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderResourceLimits.html</anchorfile>
      <anchor>a9fd9f44633056796d5c484b4538df8ea</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TransportSelection</name>
    <filename>classrti_1_1core_1_1policy_1_1TransportSelection.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportSelection</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportSelection.html</anchorfile>
      <anchor>ae2cda0b008b98bc7a1c399ce47dcc7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportSelection</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportSelection.html</anchorfile>
      <anchor>ac97d8b0489b4e180e25ef2967959e13c</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_enabled_transports)</arglist>
    </member>
    <member kind="function">
      <type>TransportSelection &amp;</type>
      <name>enabled_transports</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportSelection.html</anchorfile>
      <anchor>ae7b71d77b633be101de69dc788143815</anchor>
      <arglist>(const dds::core::StringSeq &amp;the_enabled_transports)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::StringSeq</type>
      <name>enabled_transports</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportSelection.html</anchorfile>
      <anchor>a4adfc41be66d50e62ebb708796f2b1c2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DataReaderProtocol</name>
    <filename>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</filename>
    <member kind="function">
      <type></type>
      <name>DataReaderProtocol</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>ab6e3728f4a6bf25ae1ace325995b15d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>virtual_guid</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>ab1c3cbde6af92c43d5a348fa20b70c94</anchor>
      <arglist>(const rti::core::Guid &amp;the_virtual_guid)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>virtual_guid</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a5ba9ed74da1db01db5572b542dd3b478</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>rtps_object_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a063708c36a8b297bf11d39d74e376a51</anchor>
      <arglist>(uint32_t the_rtps_object_id)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>rtps_object_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a9669e1f58a295329284ed30ea57318b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>expects_inline_qos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a9ebf56771eeb654b543ef96f975abd59</anchor>
      <arglist>(bool the_expects_inline_qos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expects_inline_qos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>ae9c99ea0316804b606f9f528ef5cac57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>disable_positive_acks</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>af677701584b69b7c4d2231d402256cf4</anchor>
      <arglist>(bool the_disable_positive_acks)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_positive_acks</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a002ec2fe053aa84b49f14a8a7d690388</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>propagate_dispose_of_unregistered_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a4e876e18bd08ffc8bbfc9cc642476480</anchor>
      <arglist>(bool the_propagate_dispose_of_unregistered_instances)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propagate_dispose_of_unregistered_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a5e511033aa6a8f400f8dba02a7b3a256</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>propagate_unregister_of_disposed_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>aef73bce9cb477ea65ed2316f3971725e</anchor>
      <arglist>(bool the_propagate_unregister_of_disposed_instances)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propagate_unregister_of_disposed_instances</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a227087574adbe3f1a087b600c6362a4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataReaderProtocol &amp;</type>
      <name>rtps_reliable_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a69ba41c906a238caf102f26a73190543</anchor>
      <arglist>(const rti::core::RtpsReliableReaderProtocol &amp;the_rtps_reliable_reader)</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::RtpsReliableReaderProtocol &amp;</type>
      <name>rtps_reliable_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>a363eda4115fa10d76629cf4526034e94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::RtpsReliableReaderProtocol &amp;</type>
      <name>rtps_reliable_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataReaderProtocol.html</anchorfile>
      <anchor>ad419eb5c79695b39a4806ec7e9c6611b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::AsynchronousPublisher</name>
    <filename>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</filename>
    <member kind="function">
      <type></type>
      <name>AsynchronousPublisher</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a43ab2b25d39acd97e2798955f7624e25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AsynchronousPublisher &amp;</type>
      <name>disable_asynchronous_write</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>ae7efd87a0335db434f1ce50d06f77f90</anchor>
      <arglist>(bool the_disable_asynchronous_write)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_asynchronous_write</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a5a7646f9b746c8c2122da0055adf3e7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AsynchronousPublisher &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a6249d3964140d8c17c8e845001fe025e</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_thread)</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a9ed13d3c3126d52b91ab42f42e3b67f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>ae2084360634474ee1d03745ae4d30d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AsynchronousPublisher &amp;</type>
      <name>disable_asynchronous_batch</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a278429623c582d7bd658111a67cb62d4</anchor>
      <arglist>(bool the_disable_asynchronous_batch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_asynchronous_batch</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>aab85e2cad003f129e33b3d3686f1cfee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AsynchronousPublisher &amp;</type>
      <name>asynchronous_batch_thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a1b5c10d0e5d762d54f2a7bbd4af21450</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_asynchronous_batch_thread)</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ThreadSettings &amp;</type>
      <name>asynchronous_batch_thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a63d485897fcb8516358019bc730cb634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::ThreadSettings &amp;</type>
      <name>asynchronous_batch_thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a879ece349d868aec921847a870b39b55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AsynchronousPublisher</type>
      <name>Enabled</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a0f9001ee354a5e56d62a2b298e209ad5</anchor>
      <arglist>(bool enable_async_batch=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AsynchronousPublisher</type>
      <name>Disabled</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1AsynchronousPublisher.html</anchorfile>
      <anchor>a31d7c2adb55a99a4af1b2033d3d929ca</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1AsynchronousPublisher">DDSAsynchronousPublisherQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Event</name>
    <filename>classrti_1_1core_1_1policy_1_1Event.html</filename>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>ac77f19a9aedde95a4b34e50cda2b92e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>ad0658bd2c432f764bb739ad587c73107</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_thread, int32_t the_initial_count, int32_t the_max_count)</arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>a30146b5917aa6850c1777ed692cdf7ee</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_thread)</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>a708f3498e2ae4aab47f6b08fc874bc8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>a5fe7eac2a3fe85165644020173bc76f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>initial_count</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>a14db860f521141ff8fcb4367b4338d9a</anchor>
      <arglist>(int32_t the_initial_count)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_count</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>a227e8355b764dd530e2068843dea03fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>max_count</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>aa1f291369f3e52125a9491919279f9df</anchor>
      <arglist>(int32_t the_max_count)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_count</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Event.html</anchorfile>
      <anchor>a85f43656e6f160fa046d66bab64f3f7e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::Availability</name>
    <filename>classrti_1_1core_1_1policy_1_1Availability.html</filename>
    <member kind="function">
      <type></type>
      <name>Availability</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a6d16d68aeef493d29634eb94094f54e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Availability</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>ad1245e31379bf0966a3d416de5e2c7b9</anchor>
      <arglist>(bool the_enable_required_subscriptions, const dds::core::Duration &amp;the_data_waiting_time, const dds::core::Duration &amp;the_endpoint_waiting_time, const rti::core::EndpointGroupSeq &amp;the_required_enpoint_groups)</arglist>
    </member>
    <member kind="function">
      <type>Availability &amp;</type>
      <name>enable_required_subscriptions</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a68ba5c48f4c622b3d7ff64f86f412eb4</anchor>
      <arglist>(bool the_enable_required_subscriptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enable_required_subscriptions</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>ab50d88f680d4d0fcea8514d603268da1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Availability &amp;</type>
      <name>max_data_availability_waiting_time</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a2e289bb88026f60285fd4f39d3ffbdd1</anchor>
      <arglist>(const dds::core::Duration &amp;the_data_waiting_time)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_data_availability_waiting_time</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a058dad0a0a14182df4d3f6db7a6d4592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Availability &amp;</type>
      <name>max_endpoint_availability_waiting_time</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a7773bc87446be21c70e4650a3386d1cc</anchor>
      <arglist>(const dds::core::Duration &amp;the_endpoint_waiting_time)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_endpoint_availability_waiting_time</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a79e45a60ab31581cd9dde5da45a0b526</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Availability &amp;</type>
      <name>required_matched_endpoint_groups</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>a4548b7988f0b77071a12502a6379ca76</anchor>
      <arglist>(const rti::core::EndpointGroupSeq &amp;the_required_enpoint_groups)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::EndpointGroupSeq</type>
      <name>required_matched_endpoint_groups</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1Availability.html</anchorfile>
      <anchor>aa76fd51b2297239afb2a2f92105e8f51</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1Availability">DDSAvailabilityQosModule_usage</docanchor>
    <docanchor file="classrti_1_1core_1_1policy_1_1Availability">DDSAvailabilityQosModule_consistency</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::RtpsReliableWriterProtocol</name>
    <filename>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</filename>
    <member kind="function">
      <type></type>
      <name>RtpsReliableWriterProtocol</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a326417b53d772f0b3f6b88b34a694439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>low_watermark</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a0f31c1857b6c391448669f2d709b932f</anchor>
      <arglist>(int32_t the_low_watermark)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>low_watermark</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>aef80d35db071f12c5aea0c2148a1617d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>high_watermark</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a9f044eab6c71ec4ac2733b150ae37fd1</anchor>
      <arglist>(int32_t the_high_watermark)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>high_watermark</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a36a35384204b0fdc44940d022dc01adc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a44dfd598a9b1273a2997d7c99130edb9</anchor>
      <arglist>(const dds::core::Duration &amp;the_heartbeat_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ac005a0b925b23f6d21502ab9a2055cd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>fast_heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a635fb68d7a9906e1d608b42c85dab9d7</anchor>
      <arglist>(const dds::core::Duration &amp;the_fast_heartbeat_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>fast_heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a18a705269bdedd8aac49e82e15637807</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>late_joiner_heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a00ddd9bb0e7f44c20b33b8d03305004c</anchor>
      <arglist>(const dds::core::Duration &amp;the_late_joiner_heartbeat_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>late_joiner_heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ab53b2ce9350bcc8375daa28cc91e4500</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>virtual_heartbeat_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a0032dbc80954c6d83d0f02d0312b4612</anchor>
      <arglist>(const dds::core::Duration &amp;the_virtual_heartbeat_period)</arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>samples_per_virtual_heartbeat</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a13891056091c7eba61fb67707d515119</anchor>
      <arglist>(int32_t the_samples_per_virtual_heartbeat)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>samples_per_virtual_heartbeat</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ad46938a963b9b8391470532d033b9397</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>max_heartbeat_retries</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>aefb4519877c2c179dbfff506100066be</anchor>
      <arglist>(int32_t the_max_heartbeat_retries)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_heartbeat_retries</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a948e6d003103bae5b62226e0ce9ef44a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>inactivate_nonprogressing_readers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>afa667d55dbb82576b1d47be21ff131aa</anchor>
      <arglist>(bool the_inactivate_nonprogressing_readers)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inactivate_nonprogressing_readers</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a35bffb56200f4f83c407fc38d21cedf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>heartbeats_per_max_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>aefe08131e8e42138119a19f68cf11ec1</anchor>
      <arglist>(int32_t the_heartbeats_per_max_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>heartbeats_per_max_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ad0567008c629ff0d2c2828bfb3abb2b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>min_nack_response_delay</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>afe872c90869620009c2909ca64bb8037</anchor>
      <arglist>(const dds::core::Duration &amp;the_min_nack_response_delay)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>min_nack_response_delay</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ad835a45f6dda36c6e9b0cba718d49b38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>max_nack_response_delay</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a7146919fb7ec11d2f53df71d028318c9</anchor>
      <arglist>(const dds::core::Duration &amp;the_max_nack_response_delay)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_nack_response_delay</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>adc1b32d76286952110d6e2bdf3fece1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>nack_suppression_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a3cc05562049677473590021a903737f6</anchor>
      <arglist>(const dds::core::Duration &amp;the_nack_suppression_duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>nack_suppression_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ad6800bcf0cefd98a8c753c0d9412aa4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>max_bytes_per_nack_response</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ad62e3f08972591f1e7a1f7bd1446951b</anchor>
      <arglist>(int32_t the_max_bytes_per_nack_response)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_bytes_per_nack_response</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a52e3b278af166e5473dedec42176e9f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>disable_positive_acks_min_sample_keep_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a52517c6587f27b61c2dec6f0db840129</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>disable_positive_acks_min_sample_keep_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a97b08f7d19611a315006dead32d61ba7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>disable_positive_acks_max_sample_keep_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a35a05fff2b6e634e2d75e15a9617d7f1</anchor>
      <arglist>(const dds::core::Duration &amp;duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>disable_positive_acks_max_sample_keep_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>abaf0c7d631229253cb0dc314d81165e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>disable_positive_acks_enable_adaptive_sample_keep_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>aec7adcee897d0e6657d03865135f488f</anchor>
      <arglist>(bool disable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_positive_acks_enable_adaptive_sample_keep_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a678456b9ea1fa1c9ad376ec16f24fbf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>disable_positive_acks_decrease_sample_keep_duration_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a8b7d90b3c7997475ebf2a0523ae387fc</anchor>
      <arglist>(int32_t factor)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>disable_positive_acks_decrease_sample_keep_duration_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>ab7c5cebaee179ab08f71b5d3af79d993</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>disable_positive_acks_increase_sample_keep_duration_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a07e9c3aac4226a8535461a76a7092995</anchor>
      <arglist>(int32_t factor)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>disable_positive_acks_increase_sample_keep_duration_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a4e99d9221dc1aa71fd686e8e6dee38a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>min_send_window_size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a3850eb17902874588bf4135aa90f768f</anchor>
      <arglist>(int32_t the_min_send_window_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>min_send_window_size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a6566ad827427402c486362a605ae99ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>max_send_window_size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a45f219e689fa419b99219e9d6a70cd14</anchor>
      <arglist>(int32_t the_max_send_window_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_send_window_size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a86dc37ddd2ca2909fc9952511368014e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>send_window_update_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a6c433f2bbee1352c2e9b5c396fc973eb</anchor>
      <arglist>(const dds::core::Duration &amp;the_send_window_update_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>send_window_update_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a9b89b6203fa7890536463365c11f6327</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>send_window_increase_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a3df2533d01abc89d0fcdcb4135535f16</anchor>
      <arglist>(int32_t the_send_window_increase_factor)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>send_window_increase_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a05c193a7ecc8f9a5482566a46fdab50f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>send_window_decrease_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>af2ed21ac5ec3cb2ffb074121720f2221</anchor>
      <arglist>(int32_t the_send_window_decrease_factor)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>send_window_decrease_factor</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a741fbe94fd91798e1c216736226041a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>enable_multicast_periodic_heartbeat</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>aad75862962e2d25aa4edcf1f0f7a1d20</anchor>
      <arglist>(bool the_enable_multicast_periodic_heartbeat)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enable_multicast_periodic_heartbeat</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a3caf13b9f5d5ceda3b9b4a7b84bba61c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>multicast_resend_threshold</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>abfbac993a4130e17a941b88c54539c76</anchor>
      <arglist>(int32_t the_multicast_resend_threshold)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>multicast_resend_threshold</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReliableWriterProtocol.html</anchorfile>
      <anchor>a7a099ca92ba8bd10049b7567ed0dc0ec</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DataWriterProtocol</name>
    <filename>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</filename>
    <member kind="function">
      <type></type>
      <name>DataWriterProtocol</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a56eb05bbecc3eadee52f06f1552eb496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>virtual_guid</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a1082f93233e75c0ad36c44d92d18bac8</anchor>
      <arglist>(const rti::core::Guid &amp;the_virtual_guid)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>virtual_guid</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>ab02962bc9eb01ee11672307f28fdc3d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>rtps_object_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>ad536a4c7622f5f8a1ffd4a19cd260822</anchor>
      <arglist>(uint32_t the_rtps_object_id)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>rtps_object_id</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a30702208c3a930fbbc74ca8da6dfa10a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>push_on_write</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a9ca6d08cd4b746466044fe0928822dd3</anchor>
      <arglist>(bool the_push_on_write)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>push_on_write</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a883a9ca057fc8986cec090be0e9989eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>disable_positive_acks</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>abdf2408473c7abae6895e43377de0e6d</anchor>
      <arglist>(bool the_disable_positive_acks)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_positive_acks</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>ac513d6168d423c849d40a4baaaa8b00d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>disable_inline_keyhash</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a8ffd652fafb1b58100951541263c7e2a</anchor>
      <arglist>(bool the_disable_inline_keyhash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_inline_keyhash</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a1aca8ee9050fffcc04d11c13e37e491f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>serialize_key_with_dispose</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a925e93c037dd5d7885355d1bec26ceaa</anchor>
      <arglist>(bool the_serialize_key_with_dispose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize_key_with_dispose</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a8c6dafdbb7a293b7cec09f5e7415508d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>propagate_app_ack_with_no_response</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a6fa82ad7b27d1a5657d74cabca7ead67</anchor>
      <arglist>(bool the_propagate_app_ack_with_no_response)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propagate_app_ack_with_no_response</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>ad7055ca2f9898ac3c518e9085e21d96e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataWriterProtocol &amp;</type>
      <name>rtps_reliable_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a5c087cc6583d163299965f02657ef5e1</anchor>
      <arglist>(const RtpsReliableWriterProtocol &amp;the_rtps_reliable_writer)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableWriterProtocol &amp;</type>
      <name>rtps_reliable_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>af4473dd638a2cfe48c631adcb7d34c37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>rtps_reliable_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DataWriterProtocol.html</anchorfile>
      <anchor>a6a29128541f6bb48e80f38d85e32045a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::ExclusiveArea</name>
    <filename>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</filename>
    <member kind="function">
      <type></type>
      <name>ExclusiveArea</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</anchorfile>
      <anchor>a8fedcf8d86dfc2e571b9ae1a1fde30fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExclusiveArea</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</anchorfile>
      <anchor>abb11132ce4787cea1c2869222fafd38f</anchor>
      <arglist>(bool the_use_shared_exclusive_area)</arglist>
    </member>
    <member kind="function">
      <type>ExclusiveArea &amp;</type>
      <name>use_shared_exclusive_area</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</anchorfile>
      <anchor>a5635f78bd6e83691049ad3c3c856ea4b</anchor>
      <arglist>(bool the_use_shared_exclusive_area)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>use_shared_exclusive_area</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</anchorfile>
      <anchor>a8122598f6bbf9e9a3601d4e17c5da606</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ExclusiveArea</type>
      <name>SharedEA</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</anchorfile>
      <anchor>aeecec9f26b94a2418d758532156eb905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ExclusiveArea</type>
      <name>ExclusiveEA</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ExclusiveArea.html</anchorfile>
      <anchor>a274d347ee547d494eaf9b5a9ef1561a0</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1ExclusiveArea">DDSExclusiveAreaQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::ReceiverPool</name>
    <filename>classrti_1_1core_1_1policy_1_1ReceiverPool.html</filename>
    <member kind="function">
      <type></type>
      <name>ReceiverPool</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a15f91ecd1c2f269deb40370256045845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReceiverPool</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a5410a64e1cc13ba13c44f372a88d4302</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_thread, int32_t the_buffer_size, int32_t the_buffer_alignment)</arglist>
    </member>
    <member kind="function">
      <type>ReceiverPool &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a65c01dcec07f1808b882fe2632762a8a</anchor>
      <arglist>(const rti::core::ThreadSettings &amp;the_thread)</arglist>
    </member>
    <member kind="function">
      <type>const rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a1f6d254c8e5fff9877c2a3cc5df4b3d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::ThreadSettings &amp;</type>
      <name>thread</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a5eec943f7ed5c1b1c86fe621f6393401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReceiverPool &amp;</type>
      <name>buffer_size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>aa2b7b2cec1871d822b9a24cf02b03423</anchor>
      <arglist>(int32_t the_buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>buffer_size</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a439863138f7d508fa9bd347d5f65f909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReceiverPool &amp;</type>
      <name>buffer_alignment</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a7156953a99fccdb98a4fb15e26055955</anchor>
      <arglist>(int32_t the_buffer_alignment)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>buffer_alignment</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>af1388537729b333495bf205a60cb3766</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const int32_t</type>
      <name>LENGTH_AUTO</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1ReceiverPool.html</anchorfile>
      <anchor>a4a59e00cd9226fbf8d1c9537da7a14b1</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1ReceiverPool">DDSReceiverPoolQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::BuiltinTopicReaderResourceLimits</name>
    <filename>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</filename>
    <member kind="function">
      <type></type>
      <name>BuiltinTopicReaderResourceLimits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a456cc12962c059039e9994e54e48b861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>initial_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a45f5784fce7491b2b36f0d7ce0e751cc</anchor>
      <arglist>(int32_t the_initial_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a9cc5f5e0fcbbdc169ab393131619c7fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a6a57023a0424a1768e54c708531be1ee</anchor>
      <arglist>(int32_t the_max_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a9baf0cd081d26e517bb740760d126e5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>initial_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>adc4ed5c2705677642f249eb3817278d4</anchor>
      <arglist>(int32_t the_initial_infos)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a58a7e523e0408a7eac37f9c5058aef9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a40c1456cd943ce5bc17f7e48f39e2cae</anchor>
      <arglist>(int32_t the_max_infos)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_infos</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>ac23c7b4747c07545e0b90a731e05d4d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>initial_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a0bc30ff2f0fc863fa81a0a6aa1c44aae</anchor>
      <arglist>(int32_t the_initial_outstanding_reads)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a575350b63d5e39e3b87302184a794078</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>aa4892440f5ea4abd493a6906a188eda7</anchor>
      <arglist>(int32_t the_max_outstanding_reads)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_outstanding_reads</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>aadc7e87489a446ed3c25bd7ffbfe017b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_samples_per_read</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a5f7fdd501dbcac04efacc65154c43da3</anchor>
      <arglist>(int32_t the_max_samples_per_read)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_samples_per_read</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>af9f23250c39fb637389c2a122c6f5eb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>disable_fragmentation_support</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a97289fde258dccaeb3f6ff273f991972</anchor>
      <arglist>(bool the_disable_fragmentation_support)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disable_fragmentation_support</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a57522eb63e2143fa8e0a6c6c875d9f38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a5b4399c200014ba892bd4b90dbf47ae6</anchor>
      <arglist>(int32_t the_max_fragmented_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a457eee3eed46017e5c4f0af2dd2b14d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>initial_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a7a67ca56158d904a3ade4d97342f13ae</anchor>
      <arglist>(int32_t the_initial_fragmented_samples)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>abc6c868eb55f0c130f31bcac9ceb3b3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_fragmented_samples_per_remote_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a9d967e4c14eca7857fd80537767f9d80</anchor>
      <arglist>(int32_t the_max_fragmented_samples_per_remote_writer)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_fragmented_samples_per_remote_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>aee36afa9a55c6fcc76e5539546508cbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>max_fragments_per_sample</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>ab9005a4e2a67b65af951de405d2e0412</anchor>
      <arglist>(int32_t the_max_fragments_per_sample)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_fragments_per_sample</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a267f0f1d4154c440192a68f1da730b99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>dynamically_allocate_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>a747fb05b14c6564f685111de3230b403</anchor>
      <arglist>(bool the_dynamically_allocate_fragmented_samples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dynamically_allocate_fragmented_samples</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1BuiltinTopicReaderResourceLimits.html</anchorfile>
      <anchor>aa569d2b2e1596f7d5956592a447293bd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DiscoveryConfig</name>
    <filename>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</filename>
    <member kind="function">
      <type></type>
      <name>DiscoveryConfig</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a12b686024f8dad09c7e89b3b4ae5bc7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>participant_liveliness_lease_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a1abb7a780f0fa569be91b133e0eb571a</anchor>
      <arglist>(const dds::core::Duration &amp;the_participant_liveliness_lease_duration)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>participant_liveliness_lease_duration</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a62edc7d633c87393ae2da3dd9ae8d09f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>participant_liveliness_assert_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a8cd9934fd2e8b2a3a3f43313bbaa57a2</anchor>
      <arglist>(const dds::core::Duration &amp;the_participant_liveliness_assert_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>participant_liveliness_assert_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a43c2c7cfcd41a985a4c14ea038cad69f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>remote_participant_purge_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a7a40146dd2734301e4833d4c863fd428</anchor>
      <arglist>(RemoteParticipantPurgeKind the_remote_participant_purge_kind)</arglist>
    </member>
    <member kind="function">
      <type>RemoteParticipantPurgeKind</type>
      <name>remote_participant_purge_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ad03ae3f5eb5750448cf875a6ff6d3f0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>max_liveliness_loss_detection_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a44e7e8f60a7478e49bdc30056fe1e3f7</anchor>
      <arglist>(const dds::core::Duration &amp;the_max_liveliness_loss_detection_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_liveliness_loss_detection_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a86f8dcd317fb18dcec1151348923be67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>initial_participant_announcements</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a4d508ffe6331b5da044e71cd1007ec9d</anchor>
      <arglist>(int32_t the_initial_participant_announcements)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>initial_participant_announcements</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a1acf393d4924b9b3223de7e50b39ba2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>min_initial_participant_announcement_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>af8bdc2ca323c40ecd7fcee9c02a9482f</anchor>
      <arglist>(const dds::core::Duration &amp;the_min_initial_participant_announcement_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>min_initial_participant_announcement_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>adda57a7c24393a75635f6e51b1b0942c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>max_initial_participant_announcement_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aca39d4566ed318a1f83cd049819f6f8d</anchor>
      <arglist>(const dds::core::Duration &amp;the_max_initial_participant_announcement_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>max_initial_participant_announcement_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a8d51175c64465c707ab80ebc233fc4c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>participant_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aaa250dc88105c805842a4ab957e86170</anchor>
      <arglist>(const BuiltinTopicReaderResourceLimits &amp;the_participant_reader_resource_limits)</arglist>
    </member>
    <member kind="function">
      <type>const BuiltinTopicReaderResourceLimits &amp;</type>
      <name>participant_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>acc055c067fd74b60e589879260f84adb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>participant_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a326ee9b20a084a84a54a9484cc0fafc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>publication_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ad3a3480c42cc393a35f6f5ec11fff9a5</anchor>
      <arglist>(const RtpsReliableReaderProtocol &amp;the_publication_reader)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableReaderProtocol &amp;</type>
      <name>publication_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a6f33dccc72c06e9d6ed650e2c4af2019</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>publication_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a2c31a9e8b8d7dbfe34beacf6b7f064a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>publication_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aa93db0779fcb829eae4135b15700e138</anchor>
      <arglist>(const BuiltinTopicReaderResourceLimits &amp;the_publication_reader_resource_limits)</arglist>
    </member>
    <member kind="function">
      <type>const BuiltinTopicReaderResourceLimits &amp;</type>
      <name>publication_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a2ceb1c8eb42474c9695cd60b1bd014c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>publication_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a8446f3ca62c810e2e8f9cd909122db1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>subscription_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a4ae67eff84e107efe4546620c4ea1b1c</anchor>
      <arglist>(const RtpsReliableReaderProtocol &amp;the_subscription_reader)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableReaderProtocol &amp;</type>
      <name>subscription_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aff006e434937ae0c7d73ec942a14ec54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>subscription_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a6fee1b1466bbb903a3e51f6d5971d190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>subscription_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ab4024dfaee42ae81e60002a7d47b83a9</anchor>
      <arglist>(const BuiltinTopicReaderResourceLimits &amp;the_subscription_reader_resource_limits)</arglist>
    </member>
    <member kind="function">
      <type>const BuiltinTopicReaderResourceLimits &amp;</type>
      <name>subscription_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a30100a60d0db25f6f61b63383b7afcce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BuiltinTopicReaderResourceLimits &amp;</type>
      <name>subscription_reader_resource_limits</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a9339b06f8ca4cb174caf949c65a97ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>publication_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>afab81c6a13fef562f6c03cc9bb84b2e4</anchor>
      <arglist>(const RtpsReliableWriterProtocol &amp;the_publication_writer)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableWriterProtocol &amp;</type>
      <name>publication_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a963ccb717d7a977cde5327ab663aace3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>publication_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aa0386f6891f3bf0f13d6e7c670169a95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>publication_writer_data_lifecycle</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ad262a99abb1b65aba43168f356cc1f98</anchor>
      <arglist>(const dds::core::policy::WriterDataLifecycle &amp;the_publication_writer_data_lifecycle)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::WriterDataLifecycle &amp;</type>
      <name>publication_writer_data_lifecycle</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a56e5c6de9721d3d3b7efca51a8e8cd7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::WriterDataLifecycle &amp;</type>
      <name>publication_writer_data_lifecycle</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aad0fa4cf2369d3f3e01032b139692e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>subscription_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aede99690e761f38652ea27fde6f1330c</anchor>
      <arglist>(const RtpsReliableWriterProtocol &amp;the_subscription_writer)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableWriterProtocol &amp;</type>
      <name>subscription_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a9a08cc3c11a9248b04ec4a289ffce1ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>subscription_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a323e362ec8def75915f069a4abd12573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>subscription_writer_data_lifecycle</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a11e8db16d5ea3e72ac08de73516aa94c</anchor>
      <arglist>(const dds::core::policy::WriterDataLifecycle &amp;the_subscription_writer_data_lifecycle)</arglist>
    </member>
    <member kind="function">
      <type>const dds::core::policy::WriterDataLifecycle &amp;</type>
      <name>subscription_writer_data_lifecycle</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>abc5e328aab097c76bfea36df64440643</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::WriterDataLifecycle &amp;</type>
      <name>subscription_writer_data_lifecycle</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>acebfcdf2c17fb7dd7e774deabb7de6fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>builtin_discovery_plugins</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a0d43faaf0ed537046e7ce73256c2e41e</anchor>
      <arglist>(const DiscoveryConfigBuiltinPluginKindMask &amp;the_builtin_discovery_plugins)</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfigBuiltinPluginKindMask</type>
      <name>builtin_discovery_plugins</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ac75ca866db5b157fa25f20e365774968</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>participant_message_reader_reliability_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a60cd6c789a170aa453864a7a301ece42</anchor>
      <arglist>(dds::core::policy::ReliabilityKind the_participant_message_reader_reliability_kind)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::policy::ReliabilityKind</type>
      <name>participant_message_reader_reliability_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a75565e3fe9635e2bb27e3bbefde3fa9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>participant_message_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ae27aac725097c7841769ef1958483b74</anchor>
      <arglist>(const RtpsReliableReaderProtocol &amp;the_participant_message_reader)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableReaderProtocol &amp;</type>
      <name>participant_message_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aca61f3b999fe88467ec1f73ad783f825</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableReaderProtocol &amp;</type>
      <name>participant_message_reader</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aa0729a54ad8e85d2277c1dc2a4283951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>participant_message_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ac1dabedb78308d5996012dcbacba2ed5</anchor>
      <arglist>(const RtpsReliableWriterProtocol &amp;the_participant_message_writer)</arglist>
    </member>
    <member kind="function">
      <type>const RtpsReliableWriterProtocol &amp;</type>
      <name>participant_message_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a68c24fa598d92e88b77211cabdf63523</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RtpsReliableWriterProtocol &amp;</type>
      <name>participant_message_writer</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>ab017f7b03bec495ee25ae1341d137ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>publication_writer_publish_mode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>af4850291c825189b87a77b2bc2778b4e</anchor>
      <arglist>(const PublishMode &amp;the_publication_writer_publish_mode)</arglist>
    </member>
    <member kind="function">
      <type>const PublishMode &amp;</type>
      <name>publication_writer_publish_mode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a27cc6059316b6e0e12f5be0db4462a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PublishMode &amp;</type>
      <name>publication_writer_publish_mode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a00c8168c01d9e8f11ec618dd896d4e7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>subscription_writer_publish_mode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a7afd0353c45ebc75134f4777696ede81</anchor>
      <arglist>(const PublishMode &amp;the_subscription_writer_publish_mode)</arglist>
    </member>
    <member kind="function">
      <type>const PublishMode &amp;</type>
      <name>subscription_writer_publish_mode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a2998975c160850c6067620af7270eee5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PublishMode &amp;</type>
      <name>subscription_writer_publish_mode</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a0129815f77f9855189704a556d3d2fb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>asynchronous_publisher</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a735211658a655f65e511395e9b33cac5</anchor>
      <arglist>(const AsynchronousPublisher &amp;the_asynchronous_publisher)</arglist>
    </member>
    <member kind="function">
      <type>const AsynchronousPublisher &amp;</type>
      <name>asynchronous_publisher</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>aee890c522563e68f5604f9283854693d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AsynchronousPublisher &amp;</type>
      <name>asynchronous_publisher</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>adfe243f427a6cfe8c204830b665f802f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>default_domain_announcement_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>afaf11f1e4ed64c2484a1992d7c8a9703</anchor>
      <arglist>(const dds::core::Duration &amp;the_default_domain_announcement_period)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>default_domain_announcement_period</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a7f5f22f2f6327d8ea7ddb24e55e6a5ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DiscoveryConfig &amp;</type>
      <name>ignore_default_domain_announcements</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a23210fefaed7bbf95475c5593f91b311</anchor>
      <arglist>(bool the_ignore_default_domain_announcements)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignore_default_domain_announcements</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfig.html</anchorfile>
      <anchor>a667956e76d06be2c6d5d3a02034dfefb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TypeSupport</name>
    <filename>classrti_1_1core_1_1policy_1_1TypeSupport.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeSupport</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TypeSupport.html</anchorfile>
      <anchor>a94ca6dfe2c2127c503858d9d999fe9c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeSupport &amp;</type>
      <name>plugin_data</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TypeSupport.html</anchorfile>
      <anchor>ab1ab098c45af8f51e1ccfb85d41b71d0</anchor>
      <arglist>(void *the_plugin_data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>plugin_data</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TypeSupport.html</anchorfile>
      <anchor>a6a15df8c2de95ef6689d50ec12c255b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeSupport &amp;</type>
      <name>cdr_padding_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TypeSupport.html</anchorfile>
      <anchor>a0bd227979210ee523a3c7748c21bb8da</anchor>
      <arglist>(CdrPaddingKind the_cdr_padding_kind)</arglist>
    </member>
    <member kind="function">
      <type>CdrPaddingKind</type>
      <name>cdr_padding_kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TypeSupport.html</anchorfile>
      <anchor>a2a87df52f561ef77cd213fdf438401cd</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classrti_1_1core_1_1policy_1_1TypeSupport">DDSTypeSupportQosModule_usage</docanchor>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TransportMulticast</name>
    <filename>classrti_1_1core_1_1policy_1_1TransportMulticast.html</filename>
    <member kind="function">
      <type></type>
      <name>TransportMulticast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticast.html</anchorfile>
      <anchor>ac108731101663810cc5cbbef509a9b73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportMulticast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticast.html</anchorfile>
      <anchor>a1dfcdb71d75d7fd6b46bb3f0e97841d2</anchor>
      <arglist>(const TransportMulticastSettingsSeq &amp;the_value, TransportMulticastKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>TransportMulticast &amp;</type>
      <name>settings</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticast.html</anchorfile>
      <anchor>ab573aa40072de756649104beb7c616f6</anchor>
      <arglist>(const TransportMulticastSettingsSeq &amp;the_settings)</arglist>
    </member>
    <member kind="function">
      <type>TransportMulticastSettingsSeq</type>
      <name>settings</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticast.html</anchorfile>
      <anchor>afc8a02dae51785847b6a985fd72748eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TransportMulticast &amp;</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticast.html</anchorfile>
      <anchor>a084a79616963372ea24d1729993e29d7</anchor>
      <arglist>(TransportMulticastKind the_kind)</arglist>
    </member>
    <member kind="function">
      <type>TransportMulticastKind</type>
      <name>kind</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticast.html</anchorfile>
      <anchor>a50a17372e453ee5b544d9e881fec0921</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TransportMulticastMapping</name>
    <filename>classrti_1_1core_1_1policy_1_1TransportMulticastMapping.html</filename>
    <member kind="function">
      <type>MulticastMappingSeq</type>
      <name>mappings</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportMulticastMapping.html</anchorfile>
      <anchor>a0a875e78528923020a69d45f05da6a71</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::AcknowledgmentKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1AcknowledgmentKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1AcknowledgmentKind__def.html</anchorfile>
      <anchor>ac17912e0b728eafc5b0c071b6f1453e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTOCOL</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1AcknowledgmentKind__def.html</anchorfile>
      <anchor>ac17912e0b728eafc5b0c071b6f1453e6a3fdee231217cb0ac2d65de437332cd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_AUTO</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1AcknowledgmentKind__def.html</anchorfile>
      <anchor>ac17912e0b728eafc5b0c071b6f1453e6a1a620b2b23c3c9e80c840a9640ceebc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_ORDERED</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1AcknowledgmentKind__def.html</anchorfile>
      <anchor>ac17912e0b728eafc5b0c071b6f1453e6af62f6280f7baa5f38a03e794dcae8214</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_EXPLICIT</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1AcknowledgmentKind__def.html</anchorfile>
      <anchor>ac17912e0b728eafc5b0c071b6f1453e6ad62dbe9b56250cb2fd028ef8309bdd45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::RefilterKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1RefilterKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RefilterKind__def.html</anchorfile>
      <anchor>a2be4f08069652283a049993021297d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTHING</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RefilterKind__def.html</anchorfile>
      <anchor>a2be4f08069652283a049993021297d76a7f2a2afa9937a1562cca771b2c459b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVERYTHING</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RefilterKind__def.html</anchorfile>
      <anchor>a2be4f08069652283a049993021297d76a57cbec3bbf342767fc80309b20279ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ON_DEMAND</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RefilterKind__def.html</anchorfile>
      <anchor>a2be4f08069652283a049993021297d76a4a31c954b522ae9acb8ab19cf5d714b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::TransportBuiltinMask</name>
    <filename>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; 4 &gt;</type>
      <name>MaskType</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>a1be49306f6145ca05e9043facde45f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportBuiltinMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>ac430784290d8527788fb2f0a17eac337</anchor>
      <arglist>(uint64_t mask)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransportBuiltinMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>a42dec8c472131fa137b0999905040ed9</anchor>
      <arglist>(const MaskType &amp;mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TransportBuiltinMask</type>
      <name>all</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>a25d90267baa17e73061020e276de8ee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TransportBuiltinMask</type>
      <name>none</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>acf7f6f00f19cbdefdeecb3ad61e4a666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TransportBuiltinMask</type>
      <name>shmem</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>a76b1c8e3a963577e201fa3b12f197fb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TransportBuiltinMask</type>
      <name>udpv4</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>a3238f9f67f01be8b64c0336357334c32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const TransportBuiltinMask</type>
      <name>udpv6</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1TransportBuiltinMask.html</anchorfile>
      <anchor>af22e50bfecfbcaf02ce5f78b58a0feb7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::IgnoredEntityReplacementKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1IgnoredEntityReplacementKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1IgnoredEntityReplacementKind__def.html</anchorfile>
      <anchor>a87553620e7df8119e6d2b9f1c42397f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::ServiceKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_SERVICE</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bbad88c012c17ea234af7d31c77f6b3efa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PERSISTENCE</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bba8fef696d7bae6ce0385c41f3f8372779</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUEUING</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bbadec8e5d7b98daf37a5d5c317ace82a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROUTING</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bba1748be12d8f2d57b008b94cab4f8afa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECORDING</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bba64c50cae0885143d1faa040160ac415a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REPLAY</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bba2b60e32ccd28c06309a1a61c23521ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATABASE_INTEGRATION</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1ServiceKind__def.html</anchorfile>
      <anchor>a08973b3807244c675066e8994e4b92bba48fa8d7462522bd2eebcc660acf2508a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::PublishModeKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1PublishModeKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1PublishModeKind__def.html</anchorfile>
      <anchor>acc400e2d2382b3c514d9eca51dcb9a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNCHRONOUS</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1PublishModeKind__def.html</anchorfile>
      <anchor>acc400e2d2382b3c514d9eca51dcb9a71adcef744ed70241b20dad9f5eb728796a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASYNCHRONOUS</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1PublishModeKind__def.html</anchorfile>
      <anchor>acc400e2d2382b3c514d9eca51dcb9a71a613c9ef7b2b4d44e1f32264303d7dd91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::WireProtocolAutoKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1WireProtocolAutoKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1WireProtocolAutoKind__def.html</anchorfile>
      <anchor>a5647da928b3c220d254a461504ee6ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RTPS_AUTO_ID_FROM_IP</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1WireProtocolAutoKind__def.html</anchorfile>
      <anchor>a5647da928b3c220d254a461504ee6ba6ab39207fde1741e7eb04a60fb306ae473</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RTPS_AUTO_ID_FROM_MAC</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1WireProtocolAutoKind__def.html</anchorfile>
      <anchor>a5647da928b3c220d254a461504ee6ba6a9b75fed521aebc7a60c51cc06d127c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RTPS_AUTO_ID_FROM_UUID</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1WireProtocolAutoKind__def.html</anchorfile>
      <anchor>a5647da928b3c220d254a461504ee6ba6a39f6cae53e227c1845d90719587a13ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::RtpsReservedPortKindMask</name>
    <filename>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; 4 &gt;</type>
      <name>MaskType</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>aac6105d6a399c20791d17e2306035571</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RtpsReservedPortKindMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>ad4adbfb057d7a145268b4eb49408aaf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RtpsReservedPortKindMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>ab577fca037c6fe0443fa048e6b2ed515</anchor>
      <arglist>(uint64_t mask)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RtpsReservedPortKindMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>aef677aa6999ae833efe7bf4d48ff0910</anchor>
      <arglist>(const MaskType &amp;mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>all</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gae035b162afaab5433ab995421299ca53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>none</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gad7d15a59fe5474a4720ede4a1377ba46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>default_mask</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga0825d4d7098a4c7002a694ecffc9340e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>builtin_unicast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>a2f241a2f91f4bf1384a234f9a39dd598</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>builtin_multicast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>afec4be9d4e917a302771b7e12e1d2cf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>user_unicast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>ab092e090fee860d399d14705064e237d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RtpsReservedPortKindMask</type>
      <name>user_multicast</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1RtpsReservedPortKindMask.html</anchorfile>
      <anchor>a4d32dafa7c3337afdf5a38525a45a95b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::DataWriterResourceLimitsInstanceReplacementKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNREGISTERED</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8eea880560f31a6c51e404fa1463ab6c2de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIVE</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8eeaaf6b511618c276251394e8b736ada020</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPOSED</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8eea70ee30bca0c6dd627900205d871d9937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIVE_THEN_DISPOSED</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8eea5a6ef8977a7b0e762fc41632bbf87f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPOSED_THEN_ALIVE</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8eea6b26807a6a2f7be2ed991674c95fe309</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIVE_OR_DISPOSED</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1DataWriterResourceLimitsInstanceReplacementKind__def.html</anchorfile>
      <anchor>a9f570e8d867676cdaf5253d4df4eb8eea95dd9171bee11f23e4392cea22625919</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::policy::DiscoveryConfigBuiltinPluginKindMask</name>
    <filename>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</filename>
    <member kind="typedef">
      <type>std::bitset&lt; 3 &gt;</type>
      <name>MaskType</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>ad449f8f06767e9098223eb432995e3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscoveryConfigBuiltinPluginKindMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>ae019f43838ee59077f78469e2b645b24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscoveryConfigBuiltinPluginKindMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>a5e757f11978dbe5e5b0a690ee47cf142</anchor>
      <arglist>(uint64_t mask)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscoveryConfigBuiltinPluginKindMask</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>ace12d7d1904cb95d8f6401d21d3a664d</anchor>
      <arglist>(const MaskType &amp;mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const DiscoveryConfigBuiltinPluginKindMask</type>
      <name>all</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>a435a14992e28eebd747fbc8fb23c814c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const DiscoveryConfigBuiltinPluginKindMask</type>
      <name>none</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>a1ec1b810254c5a2d8dd1910912ab2018</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const DiscoveryConfigBuiltinPluginKindMask</type>
      <name>SDP</name>
      <anchorfile>classrti_1_1core_1_1policy_1_1DiscoveryConfigBuiltinPluginKindMask.html</anchorfile>
      <anchor>a2b41adb5663a8bd5b099b76997d18eed</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::RemoteParticipantPurgeKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1RemoteParticipantPurgeKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RemoteParticipantPurgeKind__def.html</anchorfile>
      <anchor>af3e69829ed78c9d2d6051ecd31a73af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIVELINESS_BASED</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RemoteParticipantPurgeKind__def.html</anchorfile>
      <anchor>af3e69829ed78c9d2d6051ecd31a73af9a87aad460943f27061392de0940d661a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_PURGE</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1RemoteParticipantPurgeKind__def.html</anchorfile>
      <anchor>af3e69829ed78c9d2d6051ecd31a73af9a91f54472f6129dba609573d69e627dc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::CdrPaddingKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1CdrPaddingKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1CdrPaddingKind__def.html</anchorfile>
      <anchor>ab54db1a559dc35e238891477e8ef3171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZERO</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1CdrPaddingKind__def.html</anchorfile>
      <anchor>ab54db1a559dc35e238891477e8ef3171afcb11e050466fa50fb4edaaff838501d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_SET</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1CdrPaddingKind__def.html</anchorfile>
      <anchor>ab54db1a559dc35e238891477e8ef3171a74aef17828a01c00fbfc9168537f15b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTO</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1CdrPaddingKind__def.html</anchorfile>
      <anchor>ab54db1a559dc35e238891477e8ef3171a92eccce87ae65d8afe123bc42bc28577</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::core::policy::TransportMulticastKind_def</name>
    <filename>structrti_1_1core_1_1policy_1_1TransportMulticastKind__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1TransportMulticastKind__def.html</anchorfile>
      <anchor>ac4678c8ed122045d457902180e73a4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUTOMATIC</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1TransportMulticastKind__def.html</anchorfile>
      <anchor>ac4678c8ed122045d457902180e73a4dca1336033f4424b24e753c5bf419b4bb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNICAST</name>
      <anchorfile>structrti_1_1core_1_1policy_1_1TransportMulticastKind__def.html</anchorfile>
      <anchor>ac4678c8ed122045d457902180e73a4dca54876607321e5928beef7c968b49f2b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::SampleLostState</name>
    <filename>classrti_1_1core_1_1status_1_1SampleLostState.html</filename>
    <member kind="function">
      <type></type>
      <name>SampleLostState</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a1c81929a4db51fc9e7254ad3b99441c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleLostState</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>af5115f1f40e1d4d7c85d284a85a01ea3</anchor>
      <arglist>(const MaskType &amp;src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>not_lost</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>ac2a462f4120a42e6051a83c2da93c93d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_writer</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a54b59c7762c0341ce84f94c7188f982f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_instances_limit</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a3701cd489f672cb1d1092887910c03f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_remote_writers_per_instance_limit</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a7f77a7d9bb5f0545420ba7f571db9c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_incomplete_coherent_set</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>af21faf704e8855461f7db772858f8044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_large_coherent_set</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>ae7ea980445f2b35fd93cf63f8c7bdbb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_samples_per_remote_writer_limit</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a7f9c614f712d89c0b9e8610bf972e8e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_virtual_writers_limit</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a188c34b1dfc883506abe3e84df12fa89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_remote_writers_per_sample_limit</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a40d56e4bedfebd59e27311ec8cfc07c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_availability_waiting_time</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a5b3be4f92831db51ab6748977060ce12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_remote_writers_per_virtual_queue_limit</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a8d20480f0a6ee4c69e35c2ca2c813bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SampleLostState</type>
      <name>lost_by_out_of_memory</name>
      <anchorfile>classrti_1_1core_1_1status_1_1SampleLostState.html</anchorfile>
      <anchor>a717cc822186e0373b4797cba3e388393</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::EventCount</name>
    <filename>classrti_1_1core_1_1status_1_1EventCount.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>IntegerType</type>
      <name>total</name>
      <anchorfile>classrti_1_1core_1_1status_1_1EventCount.html</anchorfile>
      <anchor>ad1efd37384658a004da55fd3a19c9ea8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IntegerType</type>
      <name>change</name>
      <anchorfile>classrti_1_1core_1_1status_1_1EventCount.html</anchorfile>
      <anchor>a1fc830a9884577e117daa67d478d3e7a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::DataReaderCacheStatus</name>
    <filename>classrti_1_1core_1_1status_1_1DataReaderCacheStatus.html</filename>
    <member kind="function">
      <type>int64_t</type>
      <name>sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderCacheStatus.html</anchorfile>
      <anchor>a8ed8e84e2dc9f697f71fd9ab2967c04c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>sample_count_peak</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderCacheStatus.html</anchorfile>
      <anchor>a68c2df0be05be94c0c3afe038e9db621</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::DataReaderProtocolStatus</name>
    <filename>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</filename>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a5afb2692e680fb5b5eecfb731abf458f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_sample_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a487d6765f41e8be51f477e66cfbd105f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>duplicate_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a3b1a83ff36e00e305e39f42726f501ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>duplicate_sample_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a4d92313722688b23697b85ec747ed1f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>filtered_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a58764fc89298e68185c1989262eb31a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>filtered_sample_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a97e0daa702bfee2f9e0fdf8f93ecbec3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_heartbeat_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>af7a9bf25cada0978adf0a2fe70ae1ea9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_heartbeat_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a5b15fdf26cddf2b93f71e421923a6679</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_ack_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>afb7cbe6c45fef5b264a29b22ea6abcc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_ack_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>ab3fa228055eb9b52e640a16a43b171cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_nack_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>ac21a8c140f5a6fcecb9f1bc3f61ac3ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_nack_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>ada887f419697f14bbfc9d0c9e6234a9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_gap_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>aba45107fcc85418b77bc2b89e8a5ff10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_gap_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a47d252e76ad472e759bd96ca11b01607</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>rejected_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>af5a219e3a675614cce553f2b3ba6f7d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>first_available_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a283a956e913bee7c118ab55a6f792db9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>last_available_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>af1f224184970f7d837dae093fb05bd14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>last_committed_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>aeb1f5d85f393785a74a58f002483ce84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>uncommitted_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataReaderProtocolStatus.html</anchorfile>
      <anchor>a0935f484c44c2d3894cd54305219f00f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::DataWriterCacheStatus</name>
    <filename>classrti_1_1core_1_1status_1_1DataWriterCacheStatus.html</filename>
    <member kind="function">
      <type>int64_t</type>
      <name>sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterCacheStatus.html</anchorfile>
      <anchor>a4e7383855452f7f1421927fdf739e5db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>sample_count_peak</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterCacheStatus.html</anchorfile>
      <anchor>ab7e352a832694c1c024441a89b319011</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::ReliableWriterCacheChangedStatus</name>
    <filename>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</filename>
    <member kind="function">
      <type>EventCount32</type>
      <name>empty_reliable_writer_cache</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>aaff303135327eb033b2ef582e5bfc7c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount32</type>
      <name>full_reliable_writer_cache</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>addbbd1139ee67048e1053b8b73d0e814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount32</type>
      <name>low_watermark_reliable_writer_cache</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>aa421bd8ada713894a2517dc98c774ae5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount32</type>
      <name>high_watermark_reliable_writer_cache</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>ac9bebf73e1222e6fa52a725efb72f35f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>unacknowledged_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>a0a4eb2f8f0dc8f688430732bbc92f581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>unacknowledged_sample_count_peak</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>a5ca7a01249d545ddcd3758dc0de17968</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::ReliableReaderActivityChangedStatus</name>
    <filename>classrti_1_1core_1_1status_1_1ReliableReaderActivityChangedStatus.html</filename>
    <member kind="function">
      <type>EventCount32</type>
      <name>active_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a304933a65f69e41aaaea5ec7891e712e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount32</type>
      <name>inactive_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a49c19b09ded51ad4466c8b3fcbd50057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>last_instance_handle</name>
      <anchorfile>classrti_1_1core_1_1status_1_1ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>aec7ede7c9f41f716de2fb96fcabeb1b7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::status::DataWriterProtocolStatus</name>
    <filename>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</filename>
    <member kind="function">
      <type>EventCount64</type>
      <name>pushed_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a9f66bf4e01a28c0e003922e2eb34b334</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>pushed_sample_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a24d31a3c1c5a3471c54fa290ba9171de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_heartbeat_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>ab95c728c7e911c6cec7b05642aadec41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_heartbeat_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a401ae07a2f16ac28224c9c3617393550</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>pulled_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a07c6ef0413ae9862bf4c81716be4e05e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>pulled_sample_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a88eb6fb1bda371b98680725b0ec28113</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_ack_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a4ddaec55d6d9f8aa4fc45ad1a236941c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_ack_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a39318fe41d2ffbf82965f27cb2e379ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_nack_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>affe99b729152fc9646d94488a9c3d46d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>received_nack_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>ac377d12dd9eab5e947437750f5317ab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_gap_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a83d80f11d03ad318fc368be9bf21759e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>sent_gap_bytes</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a2499b48371d9797f95c440935c509e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventCount64</type>
      <name>rejected_sample_count</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a0847bfacca35705fbb4688c09a1887b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>send_window_size</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a77ddee19479ac13dec6fe60f20e3b305</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>first_available_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a2cdb2d51bf9a359277c4a7f3d59cbd9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>last_available_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>ad48a053e569b53848a4a826b3346a5f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>first_unacknowledged_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a626d33993cc09e339fe13f4557f76492</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>first_available_sample_virtual_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>afda192a98b9c37f7e5816c2c143189c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>last_available_sample_virtual_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a9c82c37e01b055b30c6461048c52a423</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>first_unacknowledged_sample_virtual_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>a31abac3122aa11451d4deb87a8df76bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>first_unacknowledged_sample_subscription_handle</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>acce4ed5582169cafca44132fbb976904</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SequenceNumber</type>
      <name>first_unelapsed_keep_duration_sample_sequence_number</name>
      <anchorfile>classrti_1_1core_1_1status_1_1DataWriterProtocolStatus.html</anchorfile>
      <anchor>af2e8f43f31fbab38f5458df62b32bb2e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::core::xtypes</name>
    <filename>namespacerti_1_1core_1_1xtypes.html</filename>
    <class kind="class">rti::core::xtypes::LoanedDynamicData</class>
    <class kind="class">rti::core::xtypes::DynamicDataInfo</class>
    <class kind="class">rti::core::xtypes::DynamicDataMemberInfo</class>
    <class kind="class">rti::core::xtypes::DynamicDataTypeSerializationProperty</class>
    <member kind="function">
      <type>const dds::core::xtypes::DynamicType &amp;</type>
      <name>resolve_alias</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a0f9a6558bb8d5871c315a3d62edc2971</anchor>
      <arglist>(const dds::core::xtypes::DynamicType &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>to_cdr_buffer</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a5f8f9e940592e30ef356080cdd6815a7</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;buffer, const DynamicData &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>DynamicData &amp;</type>
      <name>from_cdr_buffer</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>aaf1c565857e2f571e07c9f5572232deb</anchor>
      <arglist>(DynamicData &amp;sample, const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>TopicType</type>
      <name>convert</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>afe066fb158d460b15444bab08b76f3fe</anchor>
      <arglist>(const DynamicData &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>DynamicData</type>
      <name>convert</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a59cbc694a872d6fd760378adcdc90e2b</anchor>
      <arglist>(const TopicType &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_convert</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a09fd613e0bc29c954cd9ca6ab27716aa</anchor>
      <arglist>(const DynamicData &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>std::tuple&lt; Types...&gt;</type>
      <name>get_tuple</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>af448069e4f114ee70d39b99616242ed6</anchor>
      <arglist>(const dds::core::xtypes::DynamicData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tuple</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a4768e61d14b1ec1c6f7d764f58f37902</anchor>
      <arglist>(dds::core::xtypes::DynamicData &amp;data, const std::tuple&lt; Types...&gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::StructType</type>
      <name>create_type_from_tuple</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a16e82dfb1b7d0179fea9b75e84b3bae6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_idl</name>
      <anchorfile>namespacerti_1_1core_1_1xtypes.html</anchorfile>
      <anchor>a2de52806c988af852002ef0ccbf1f924</anchor>
      <arglist>(const DynamicType &amp;type, unsigned int indent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::xtypes::LoanedDynamicData</name>
    <filename>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</filename>
    <member kind="function">
      <type></type>
      <name>~LoanedDynamicData</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>aa5470bb78ed0a464c36352adf2d16ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>return_loan</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>a818a941fe05d21f2ff27c92cc9c164a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DynamicData &amp;</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>aa3af5cb8c0d55670bde3dd332c390afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DynamicData &amp;</type>
      <name>get</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>a27284b2a5a20cb93e8d9b12f786a92a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator DynamicData &amp;</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>a7c98a410cc00aad4344b69451c312702</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const DynamicData &amp;</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>a9b30249b639c2c063df5c5415a67df60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LoanedDynamicData &amp;</type>
      <name>operator=</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1LoanedDynamicData.html</anchorfile>
      <anchor>ab4bc89d0ea65c6cd6d15911d424e0f66</anchor>
      <arglist>(LoanedDynamicData &amp;&amp;other) OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::xtypes::DynamicDataInfo</name>
    <filename>classrti_1_1core_1_1xtypes_1_1DynamicDataInfo.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>member_count</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataInfo.html</anchorfile>
      <anchor>a25907101245c5e1d15945fc319ef7575</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>stored_size</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataInfo.html</anchorfile>
      <anchor>a42847b16bc594ebf18d5aac9a092c986</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::xtypes::DynamicDataMemberInfo</name>
    <filename>classrti_1_1core_1_1xtypes_1_1DynamicDataMemberInfo.html</filename>
    <member kind="function">
      <type>uint32_t</type>
      <name>member_index</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataMemberInfo.html</anchorfile>
      <anchor>a029983ea3127d4b0913e3cd098d4f794</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const dds::core::string &amp;</type>
      <name>member_name</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataMemberInfo.html</anchorfile>
      <anchor>a1b2e661e4cf3db76dd6265b22b4f5bd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>member_kind</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataMemberInfo.html</anchorfile>
      <anchor>a93775f2a9a36a357e28b0ef25007008a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>element_count</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataMemberInfo.html</anchorfile>
      <anchor>aa4d1d4ab985b2eef9c3bb30eb7986c96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::xtypes::TypeKind</type>
      <name>element_kind</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataMemberInfo.html</anchorfile>
      <anchor>a0407f6bb1f877ac8767ab67218c4adcf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::core::xtypes::DynamicDataTypeSerializationProperty</name>
    <filename>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>DynamicDataTypeSerializationProperty</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>abc2c09b36adf7944946bafe5bc92aa85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DynamicDataTypeSerializationProperty</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a896a8ba5aced36b1888bf8f6dc90a4d9</anchor>
      <arglist>(int32_t the_max_size_serialized, int32_t the_min_size_serialized, bool the_trim_to_size, bool the_enable_fast_deserialization)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>max_size_serialized</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a441f7b852246f55de24ea94f26190996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DynamicDataTypeSerializationProperty &amp;</type>
      <name>max_size_serialized</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a6715a140f98cec34cab3603976fef76f</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>min_size_serialized</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>aa1f4d30b9eccde1169721b72d878f051</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DynamicDataTypeSerializationProperty &amp;</type>
      <name>min_size_serialized</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a41145bb89c4fb53ac3632ca312a31c45</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>trim_to_size</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>aaba9fbbe2c17d9bd93b95b90e0c4a90f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DynamicDataTypeSerializationProperty &amp;</type>
      <name>trim_to_size</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a19850b7572b7fbf3f3cf20e1f9dd56c6</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enable_fast_deserialization</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a509d9b1f4b9e0573fa0cc3bae7c5b7c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const DynamicDataTypeSerializationProperty</type>
      <name>DEFAULT</name>
      <anchorfile>classrti_1_1core_1_1xtypes_1_1DynamicDataTypeSerializationProperty.html</anchorfile>
      <anchor>a00158c485cc3065f3d37fc3b0cf311fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::domain</name>
    <filename>namespacerti_1_1domain.html</filename>
    <class kind="class">rti::domain::DomainParticipantConfigParams</class>
    <member kind="function">
      <type>dds::domain::DomainParticipant</type>
      <name>find_participant_by_name</name>
      <anchorfile>namespacerti_1_1domain.html</anchorfile>
      <anchor>adf0e25181d3ffa41f0e7ac5b5b9e5a76</anchor>
      <arglist>(const std::string &amp;participant_name)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_participants</name>
      <anchorfile>namespacerti_1_1domain.html</anchorfile>
      <anchor>af21357c70a8efe7473545e5df162e6bf</anchor>
      <arglist>(ParticipantFwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_participants</name>
      <anchorfile>namespacerti_1_1domain.html</anchorfile>
      <anchor>af214a5b04cfd6e7566d0af4831f09a36</anchor>
      <arglist>(ParticipantFwdIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_type</name>
      <anchorfile>namespacerti_1_1domain.html</anchorfile>
      <anchor>ac815880b54b6e6ce1ef0cea0d593907c</anchor>
      <arglist>(dds::domain::DomainParticipant &amp;participant, const std::string &amp;name, const dds::core::xtypes::DynamicType &amp;type, const rti::core::xtypes::DynamicDataTypeSerializationProperty &amp;serialization_property=rti::core::xtypes::DynamicDataTypeSerializationProperty::DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_type</name>
      <anchorfile>namespacerti_1_1domain.html</anchorfile>
      <anchor>a6d6606f90484a3e9544c3df46b247933</anchor>
      <arglist>(const std::string &amp;registered_type_name=dds::topic::topic_type_name&lt; T &gt;::value())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::domain::DomainParticipantConfigParams</name>
    <filename>classrti_1_1domain_1_1DomainParticipantConfigParams.html</filename>
    <member kind="function">
      <type></type>
      <name>DomainParticipantConfigParams</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>af44c8ad810e41eba58d8536e054bd82d</anchor>
      <arglist>(int32_t the_domain_id=DOMAIN_ID_USE_XML_CONFIG, const std::string &amp;the_participant_name=ENTITY_NAME_USE_XML_CONFIG, const std::string &amp;the_participant_qos_library_name=QOS_ELEMENT_NAME_USE_XML_CONFIG, const std::string &amp;the_participant_qos_profile_name=QOS_ELEMENT_NAME_USE_XML_CONFIG, const std::string &amp;the_domain_entity_qos_library_name=QOS_ELEMENT_NAME_USE_XML_CONFIG, const std::string &amp;the_domain_entity_qos_profile_name=QOS_ELEMENT_NAME_USE_XML_CONFIG)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>domain_id</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a38f937cec4c75a66c719fb52655b5fb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantConfigParams &amp;</type>
      <name>domain_id</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>ae3d25e720bc480799132b7a1935b7188</anchor>
      <arglist>(int32_t the_domain_id)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>participant_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a2159d5eea0de2138ff55194bf14c0d12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantConfigParams &amp;</type>
      <name>participant_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>ac27d45a0a33a090ec173b4008160c5b1</anchor>
      <arglist>(const std::string &amp;the_participant_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>participant_qos_library_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a1aaee012ce49a0a47d679209296d7f92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantConfigParams &amp;</type>
      <name>participant_qos_library_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>af2dd36e867f93ac6e273a5556b4faa39</anchor>
      <arglist>(const std::string &amp;the_participant_qos_library_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>participant_qos_profile_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a59fe6ecd86c38b83dc5385997c05690a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantConfigParams &amp;</type>
      <name>participant_qos_profile_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a82177e6c27021ca6682563eaa144cfaf</anchor>
      <arglist>(const std::string &amp;the_participant_qos_profile_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>domain_entity_qos_library_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>ab60fbf707a8a779c5844d672f601552a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantConfigParams &amp;</type>
      <name>domain_entity_qos_library_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a7ac365516795fd0b208180878a596821</anchor>
      <arglist>(const std::string &amp;the_domain_entity_qos_library_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>domain_entity_qos_profile_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>ad275009073f64035db785707984aa741</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DomainParticipantConfigParams &amp;</type>
      <name>domain_entity_qos_profile_name</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a367373a05b6781fc7b6999e78fcbb010</anchor>
      <arglist>(const std::string &amp;the_domain_entity_qos_profile_name)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>ENTITY_NAME_USE_XML_CONFIG</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>a371c0cc86b07a55af01cc46532b6f4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>QOS_ELEMENT_NAME_USE_XML_CONFIG</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>ad6cd3fc98013071e8dcec88d55a59997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const int32_t</type>
      <name>DOMAIN_ID_USE_XML_CONFIG</name>
      <anchorfile>classrti_1_1domain_1_1DomainParticipantConfigParams.html</anchorfile>
      <anchor>aef8b46a193817004092df82c4ae884de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::pub</name>
    <filename>namespacerti_1_1pub.html</filename>
    <class kind="class">rti::pub::AcknowledgmentInfo</class>
    <class kind="struct">rti::pub::FlowControllerSchedulingPolicy_def</class>
    <class kind="class">rti::pub::FlowControllerTokenBucketProperty</class>
    <class kind="class">rti::pub::FlowControllerProperty</class>
    <class kind="class">rti::pub::FlowController</class>
    <class kind="class">rti::pub::WriteParams</class>
    <member kind="typedef">
      <type>dds::core::safe_enum&lt; FlowControllerSchedulingPolicy_def &gt;</type>
      <name>FlowControllerSchedulingPolicy</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga32728f3fc282900d82d425909b3b0576</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_publishers</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a4cf6ea405562250dd8a04a72c62895ad</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, PublisherForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_publishers</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a90322b50bfc7b528b6d063b21e2652fc</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, PublisherBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::Publisher</type>
      <name>find_publisher</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a0d482ca119d184c52bc94b6f0b0ee1b5</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, const std::string &amp;publisher_name)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datawriters</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a2d6c9d98da7b5e4db6ff7f84cb0ef12e</anchor>
      <arglist>(dds::pub::Publisher publisher, AnyDataWriterBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datawriters</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a25f8a19dc1f2f8a7c75c6d35740a99f8</anchor>
      <arglist>(dds::pub::Publisher publisher, AnyDataWriterForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>WRITER</type>
      <name>find_datawriter_by_topic_name</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a410bc4f90955a24f3ae8f4a92affd8f6</anchor>
      <arglist>(dds::pub::Publisher publisher, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>WRITER</type>
      <name>find_datawriter_by_name</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a7aca151d7ab0ee0e354ef8d84cde6dad</anchor>
      <arglist>(dds::pub::Publisher publisher, const std::string &amp;datawriter_name)</arglist>
    </member>
    <member kind="function">
      <type>WRITER</type>
      <name>find_datawriter_by_name</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>a169cd147b53a6ecf3de7d284e461b6fa</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;datawriter_name)</arglist>
    </member>
    <member kind="function">
      <type>dds::pub::Publisher</type>
      <name>implicit_publisher</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>ab54da5486ce2ddd3c971dff33e90aaef</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>FlowController</type>
      <name>find_flow_controller</name>
      <anchorfile>namespacerti_1_1pub.html</anchorfile>
      <anchor>aa09ffcc95a8816a2fd12ae5e909c8934</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::pub::AcknowledgmentInfo</name>
    <filename>classrti_1_1pub_1_1AcknowledgmentInfo.html</filename>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>subscription_handle</name>
      <anchorfile>classrti_1_1pub_1_1AcknowledgmentInfo.html</anchorfile>
      <anchor>a200a8489635752051b6f88961dfbb6f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleIdentity</type>
      <name>sample_identity</name>
      <anchorfile>classrti_1_1pub_1_1AcknowledgmentInfo.html</anchorfile>
      <anchor>a10b359e40947841e03fd1c886b7520fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid_response_data</name>
      <anchorfile>classrti_1_1pub_1_1AcknowledgmentInfo.html</anchorfile>
      <anchor>aa61a93a28bfb8d222f7f39a977e23859</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>rti::sub::AckResponseData</type>
      <name>response_data</name>
      <anchorfile>classrti_1_1pub_1_1AcknowledgmentInfo.html</anchorfile>
      <anchor>a978ac59e9af5ee6a79254703634b2e2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::pub::FlowControllerSchedulingPolicy_def</name>
    <filename>structrti_1_1pub_1_1FlowControllerSchedulingPolicy__def.html</filename>
    <member kind="enumeration">
      <name>type</name>
      <anchorfile>structrti_1_1pub_1_1FlowControllerSchedulingPolicy__def.html</anchorfile>
      <anchor>a7a650c71da90dbdeca4e04dee7ea79e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ROUND_ROBIN</name>
      <anchorfile>structrti_1_1pub_1_1FlowControllerSchedulingPolicy__def.html</anchorfile>
      <anchor>a7a650c71da90dbdeca4e04dee7ea79e7a492f85a108d5e2ed040fc291ba587ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EARLIEST_DEADLINE_FIRST</name>
      <anchorfile>structrti_1_1pub_1_1FlowControllerSchedulingPolicy__def.html</anchorfile>
      <anchor>a7a650c71da90dbdeca4e04dee7ea79e7a666b69caebe9033c287aee9a90453e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HIGHEST_PRIORITY_FIRST</name>
      <anchorfile>structrti_1_1pub_1_1FlowControllerSchedulingPolicy__def.html</anchorfile>
      <anchor>a7a650c71da90dbdeca4e04dee7ea79e7acc181aea74c8e38443c8fab7e19b0491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::pub::FlowControllerTokenBucketProperty</name>
    <filename>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>RTI_NATIVE_VALUE_TYPE_DEFINE_DEFAULT_MOVE_OPERATIONS</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a252dca52648b4e36be12ec8e9a4e6d98</anchor>
      <arglist>(FlowControllerTokenBucketProperty) FlowControllerTokenBucketProperty(int32_t max_tokens</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>max_tokens</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a941066994063865edf0df9fbb6b157cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerTokenBucketProperty &amp;</type>
      <name>max_tokens</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a56985a7c06905f8baaca750044418ece</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tokens_added_per_period</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a6696758341c014806f8ed21e59cfb355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerTokenBucketProperty &amp;</type>
      <name>tokens_added_per_period</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a26a8ac57681dd95e35d2733eb42db4a9</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>tokens_leaked_per_period</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a0c9cdb2d27dd883886a227de1e564d9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerTokenBucketProperty &amp;</type>
      <name>tokens_leaked_per_period</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>af96fab55468a6192ef46bd3d236a8899</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Duration</type>
      <name>period</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>ae7dc421a2c69a34f554b211515d762cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerTokenBucketProperty &amp;</type>
      <name>period</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>aaa90fbe14b21a82a6f641dabc03f0fc9</anchor>
      <arglist>(const dds::core::Duration &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>bytes_per_token</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a310a88ba3dd9e4a46a73f633ebbf08af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerTokenBucketProperty &amp;</type>
      <name>bytes_per_token</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerTokenBucketProperty.html</anchorfile>
      <anchor>a9c9fb5f996a377f0f899de81fc67e989</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::pub::FlowControllerProperty</name>
    <filename>classrti_1_1pub_1_1FlowControllerProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>FlowControllerProperty</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a89fbac08c1f3bebdc8f4a5033b83c879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowControllerProperty</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>ad2e67405c6b0995a8f2b95af744bcaf0</anchor>
      <arglist>(FlowControllerSchedulingPolicy::type scheduling_policy, const FlowControllerTokenBucketProperty &amp;token_bucket=FlowControllerTokenBucketProperty())</arglist>
    </member>
    <member kind="function">
      <type>FlowControllerSchedulingPolicy::type</type>
      <name>scheduling_policy</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a9dc796544ef59407c09ff6ec229071bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerProperty &amp;</type>
      <name>scheduling_policy</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a4ad5614a2381464be12109e298000188</anchor>
      <arglist>(FlowControllerSchedulingPolicy::type value)</arglist>
    </member>
    <member kind="function">
      <type>FlowControllerTokenBucketProperty &amp;</type>
      <name>token_bucket</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>ad1e7a25f43a44d375830292f7a3239d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FlowControllerTokenBucketProperty &amp;</type>
      <name>token_bucket</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a4b3b7e10c75d900b80c39d187aecac9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FlowControllerProperty</type>
      <name>RoundRobin</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a2eb0c6af99ecf40e226dd441f9002d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FlowControllerProperty</type>
      <name>EarliestDeadlineFirst</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a686b18aa44139c842dc3783cca0ac2e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FlowControllerProperty</type>
      <name>HighestPriorityFirst</name>
      <anchorfile>classrti_1_1pub_1_1FlowControllerProperty.html</anchorfile>
      <anchor>a89f815fba58338ae062ac5724cc0c610</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::pub::FlowController</name>
    <filename>classrti_1_1pub_1_1FlowController.html</filename>
    <member kind="function">
      <type></type>
      <name>FlowController</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>a3f886e8946225a83192a9faea7626da2</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;name, const FlowControllerProperty &amp;property=FlowControllerProperty())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>a07fb3f2d442cfc0021f3acc327000b53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::domain::DomainParticipant</type>
      <name>participant</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>a4af544ccdbf64319796e4881da1aa53e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FlowControllerProperty</type>
      <name>property</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>a4f43b11255618ab1774d6e597c9b2ae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>property</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>ad0b665d3a43a37dfaed28749c18a56ce</anchor>
      <arglist>(const FlowControllerProperty &amp;prop) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trigger_flow</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>adb994f361c695c7bd3f90547351d260a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>a7a52765f3fb5ef57256cf8aa7a9c4369</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>a0a367a562f35148cc19deec7f369929e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closed</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>ad447d9ae702f500ebc3d419d70ae015a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a299077d89db9f6d7bd5ab89066fdf204</anchor>
      <arglist>(dds::core::null_type &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a547cbbc6b49a439af09a48d638bea36a</anchor>
      <arglist>(const Reference &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a0c9d73c46fbb46f5c401181874097827</anchor>
      <arglist>(const Reference&lt; D &gt; &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a211079c559cbe5c2e7d9ce47a2df888f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a0df735ee4a9486961d3e02c4649b24fe</anchor>
      <arglist>(const R &amp;ref) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a1d08e6b9d1a68929182e9182cdf6ce5a</anchor>
      <arglist>(const R &amp;ref) const </arglist>
    </member>
    <member kind="function">
      <type>Reference &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a1552f9f52091531d9f25681dbbb27dbf</anchor>
      <arglist>(const null_type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>aa848aad5a5553c4b8e388954c3f5bf63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>ac55dde1123835df8b0d2238c6e60ccbd</anchor>
      <arglist>(const null_type) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a23171148a4c69662a7a799f0d5dc5c3d</anchor>
      <arglist>(const null_type) const </arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE_REF_T &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>ac4711eb43fd9a6e7f4af185896f6bd8c</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE_REF_T &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>adccba565e07cf945be333811230b3462</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a4f8e3737a67c3aa46c4ba5faaad65eff</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a3282b6cd2f63a812c5e98393dce099ad</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>DEFAULT_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>gaacf221b25839ecbf67b5b140e8ea08f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>FIXED_RATE_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga38faae12cb0ec150f1b4e774f04c6da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OMG_DDS_API_CLASS_VARIABLE const std::string</type>
      <name>ON_DEMAND_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga6e2d5f82bb73055a69f94a67016d7cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>FlowController</type>
      <name>find_flow_controller</name>
      <anchorfile>classrti_1_1pub_1_1FlowController.html</anchorfile>
      <anchor>aa09ffcc95a8816a2fd12ae5e909c8934</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::pub::WriteParams</name>
    <filename>classrti_1_1pub_1_1WriteParams.html</filename>
    <member kind="function">
      <type></type>
      <name>WriteParams</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a5d7c124b3e6e774f3339620520e627a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>adce53e1a912305360549091db5f0bca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replace_automatic_values</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>ac570619f06756fb0d012eb4d58c24615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>replace_automatic_values</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>ab86e47d369361c1cb69846182d13473c</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleIdentity</type>
      <name>identity</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a746e2cd5b2ecce757232a6cb75598c4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>identity</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>aaf2a9bf48aaef1d7f2f9f2118bfc6546</anchor>
      <arglist>(const rti::core::SampleIdentity &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleIdentity</type>
      <name>related_sample_identity</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a5f25081d3aeff16d12a83b938d309b09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>related_sample_identity</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>afb8eb012d90981c9493ae64ea9a5deeb</anchor>
      <arglist>(const rti::core::SampleIdentity &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::Time</type>
      <name>source_timestamp</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>abc99c0923dfaad5e5ac22b9d274c40e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>source_timestamp</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>adc55c8a5ddb256bf47b746c872156d55</anchor>
      <arglist>(const dds::core::Time &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Cookie</type>
      <name>cookie</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a00d3309aafbc5f247bfedba1d4e6a38c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>cookie</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a840e734f2ad8ae98c7da397796314889</anchor>
      <arglist>(const rti::core::Cookie &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::InstanceHandle</type>
      <name>handle</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a1de64450b6ba18a763e5a755acce21ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>handle</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>ad5119e49be374313f52d8ffa40aa8208</anchor>
      <arglist>(const dds::core::InstanceHandle &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>priority</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a329b93fd3af724e3e54199450f8e65a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>priority</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>abd2b85b90815a682ab19afbebc474890</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::SampleFlag</type>
      <name>flag</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a6421658cbb7c875e8597192782239ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>flag</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a22e452a8c95bf47b2bffda2fbc8f4588</anchor>
      <arglist>(const rti::core::SampleFlag &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>source_guid</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a32b26b9ef78863483a7f31d0aac14014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>source_guid</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a11b37f66301b9cbb8d20373ac4ef00d2</anchor>
      <arglist>(const rti::core::Guid &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>related_source_guid</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>aa53a070ffec4fa657fce786d19a95de8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>related_source_guid</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a7bc181ca236d20d5fba189e335a91e2d</anchor>
      <arglist>(const rti::core::Guid &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>rti::core::Guid</type>
      <name>related_reader_guid</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a52097350bbc38011f3d10117f0d3698a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams &amp;</type>
      <name>related_reader_guid</name>
      <anchorfile>classrti_1_1pub_1_1WriteParams.html</anchorfile>
      <anchor>a63aaef82b918aaa0539eb3af1fe40ef5</anchor>
      <arglist>(const rti::core::Guid &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::sub</name>
    <filename>namespacerti_1_1sub.html</filename>
    <class kind="class">rti::sub::AckResponseData</class>
    <class kind="class">rti::sub::LoanedSample</class>
    <class kind="struct">rti::sub::IsValidData</class>
    <class kind="class">rti::sub::SampleIterator</class>
    <class kind="class">rti::sub::ValidSampleIterator</class>
    <class kind="class">rti::sub::ManipulatorSelector</class>
    <class kind="class">rti::sub::SharedSamples</class>
    <member kind="function">
      <type>dds::topic::ParticipantBuiltinTopicData</type>
      <name>matched_publication_participant_data</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a7c1c8ae8e96af6257f5013b268004b0c</anchor>
      <arglist>(const dds::sub::DataReader&lt; T &gt; &amp;reader, const dds::core::InstanceHandle &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_subscribers</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>aa966c5c5df297acec45941d1da290b8d</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, SubscriberForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_subscribers</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>aa47d99a095026dc16e64083168763dfc</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, SubscriberBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Subscriber</type>
      <name>find_subscriber</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>ab0fe24a4ac06247c4cb906dddeac85c0</anchor>
      <arglist>(const dds::domain::DomainParticipant participant, const std::string &amp;subscriber_name)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datareaders</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a00241bba3b36dae3b8c8d07bf3e59301</anchor>
      <arglist>(dds::sub::Subscriber subscriber, AnyDataReaderBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_datareaders</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a390d705b4bb956ac013f72ca201f4094</anchor>
      <arglist>(dds::sub::Subscriber subscriber, AnyDataReaderForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_topic_name</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>aef16f6ceeee023ea56215121c56d86f0</anchor>
      <arglist>(dds::sub::Subscriber subscriber, const std::string &amp;topic_name)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_name</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a36ab421210a1976f70870660b3bf573a</anchor>
      <arglist>(dds::sub::Subscriber subscriber, const std::string &amp;datareader_name)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_topic_description</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>ac7dc8cc9a3f91c6b291b5afc5a27375c</anchor>
      <arglist>(const dds::sub::Subscriber &amp;subscriber, const dds::topic::TopicDescription&lt; T &gt; &amp;topic_description)</arglist>
    </member>
    <member kind="function">
      <type>READER</type>
      <name>find_datareader_by_name</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a1848f7c8b303afcf722dc6d057d94c41</anchor>
      <arglist>(dds::domain::DomainParticipant participant, const std::string &amp;datareader_name)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Subscriber</type>
      <name>implicit_subscriber</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a2adb6e3139bffcf7c404b0c07c33adeb</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Sample&lt; T &gt;</type>
      <name>copy_to_sample</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a58d294305246f4273d9abfb7b943045b</anchor>
      <arglist>(const rti::sub::LoanedSample&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>aa1b1df0a224860b7530ec062993f3547</anchor>
      <arglist>(std::ostream &amp;out, const LoanedSample&lt; T &gt; &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a7c654cfb0b2bd2a4ced14ab1f97a961a</anchor>
      <arglist>(const SampleInfoImpl &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>ValidSampleIterator&lt; T &gt;</type>
      <name>valid_samples</name>
      <anchorfile>namespacerti_1_1sub.html</anchorfile>
      <anchor>a0328608017a5af7a16293154805df484</anchor>
      <arglist>(const SampleIterator&lt; T &gt; &amp;sample_iterator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::sub::AckResponseData</name>
    <filename>classrti_1_1sub_1_1AckResponseData.html</filename>
    <member kind="function">
      <type></type>
      <name>AckResponseData</name>
      <anchorfile>classrti_1_1sub_1_1AckResponseData.html</anchorfile>
      <anchor>a132d999ee1cdaa52b5b85e49fa095087</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AckResponseData</name>
      <anchorfile>classrti_1_1sub_1_1AckResponseData.html</anchorfile>
      <anchor>a12431b6e58ed230825b17ba30ffc4610</anchor>
      <arglist>(const dds::core::ByteSeq &amp;sequence)</arglist>
    </member>
    <member kind="function">
      <type>dds::core::ByteSeq</type>
      <name>value</name>
      <anchorfile>classrti_1_1sub_1_1AckResponseData.html</anchorfile>
      <anchor>abd33fc1c579740c27d6abc2fa263ab7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dds::core::ByteSeq &amp;</type>
      <name>value</name>
      <anchorfile>classrti_1_1sub_1_1AckResponseData.html</anchorfile>
      <anchor>ad18f9730a9972c9966a5cd1bbf70e229</anchor>
      <arglist>(dds::core::ByteSeq &amp;dst) const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>begin</name>
      <anchorfile>classrti_1_1sub_1_1AckResponseData.html</anchorfile>
      <anchor>ae68ded15d6079e5b5b3e969f54e8f324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>end</name>
      <anchorfile>classrti_1_1sub_1_1AckResponseData.html</anchorfile>
      <anchor>ac2d1769e7802163dfd230da963eeb68d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::sub::LoanedSample</name>
    <filename>classrti_1_1sub_1_1LoanedSample.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>DataType</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>ae060df2b98efcb49a8d87a145a4a1cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds::sub::SampleInfo</type>
      <name>InfoType</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>aebcc99b3f8f101d9dcfd242d422af218</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const DataType &amp;</type>
      <name>data</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>a6a5eba87a5e0d60182cf92d9d77905c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const InfoType &amp;</type>
      <name>info</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>a530668388acde720aa0ccf2fab64883f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const DataType &amp;</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>a584647b382f3b8d36d5154c201286ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>abe1989c53af42818317ec5b87e1aa393</anchor>
      <arglist>(const LoanedSample &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>dds::sub::Sample&lt; T &gt;</type>
      <name>copy_to_sample</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>a58d294305246f4273d9abfb7b943045b</anchor>
      <arglist>(const rti::sub::LoanedSample&lt; T &gt; &amp;ls)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classrti_1_1sub_1_1LoanedSample.html</anchorfile>
      <anchor>aa1b1df0a224860b7530ec062993f3547</anchor>
      <arglist>(std::ostream &amp;out, const LoanedSample&lt; T &gt; &amp;sample)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::sub::IsValidData</name>
    <filename>structrti_1_1sub_1_1IsValidData.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>LoanedSamples&lt; T &gt;::value_type</type>
      <name>sample_type</name>
      <anchorfile>structrti_1_1sub_1_1IsValidData.html</anchorfile>
      <anchor>a71020672f6f80b04e788263890dbdf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structrti_1_1sub_1_1IsValidData.html</anchorfile>
      <anchor>ad8145b6ead80c5b24a87ebe79842cb3f</anchor>
      <arglist>(const sample_type &amp;sample)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::sub::SampleIterator</name>
    <filename>classrti_1_1sub_1_1SampleIterator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>rti::sub::ValidSampleIterator</name>
    <filename>classrti_1_1sub_1_1ValidSampleIterator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>rti::sub::ManipulatorSelector</name>
    <filename>classrti_1_1sub_1_1ManipulatorSelector.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>rti::sub::SharedSamples</name>
    <filename>classrti_1_1sub_1_1SharedSamples.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>SampleIterator&lt; T &gt;</type>
      <name>iterator</name>
      <anchorfile>classrti_1_1sub_1_1SharedSamples.html</anchorfile>
      <anchor>a17c3d1a577b4f4ff32823973f81b301d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rti::topic</name>
    <filename>namespacerti_1_1topic.html</filename>
    <class kind="struct">rti::topic::no_compile_data_t</class>
    <class kind="class">rti::topic::ContentFilter</class>
    <class kind="class">rti::topic::WriterContentFilter</class>
    <class kind="class">rti::topic::WriterContentFilterHelper</class>
    <class kind="class">rti::topic::CustomFilter</class>
    <class kind="class">rti::topic::ExpressionProperty</class>
    <class kind="class">rti::topic::FilterSampleInfo</class>
    <class kind="struct">rti::topic::topic_type_has_pointer_members</class>
    <class kind="struct">rti::topic::dynamic_type</class>
    <member kind="function">
      <type>void</type>
      <name>from_cdr_buffer_no_alloc</name>
      <anchorfile>group__DDSTopicCdrModule.html</anchorfile>
      <anchor>ga31d7f3b482c41e645ba40c43f749aaff</anchor>
      <arglist>(TopicType &amp;sample, const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>TopicType</type>
      <name>from_cdr_buffer</name>
      <anchorfile>group__DDSTopicCdrModule.html</anchorfile>
      <anchor>gad471780cc71deee7fea6820ca113fee0</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>to_cdr_buffer</name>
      <anchorfile>group__DDSTopicCdrModule.html</anchorfile>
      <anchor>gacd4e11998f2f13a2461217b49e7d5ae4</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;buffer, const TopicType &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sql_filter_name</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga738e559c23a9b74e82d467448018b650</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stringmatch_filter_name</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga55506ecc9d692d1c6379914a12b1e422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_topics</name>
      <anchorfile>namespacerti_1_1topic.html</anchorfile>
      <anchor>a3da52d4481f68e3a7608636d4dd0fab4</anchor>
      <arglist>(dds::domain::DomainParticipant participant, AnyTopicBackInsertIterator begin)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_topics</name>
      <anchorfile>namespacerti_1_1topic.html</anchorfile>
      <anchor>ac5900ce13b47995f224fa2497c91b256</anchor>
      <arglist>(dds::domain::DomainParticipant participant, AnyTopicForwardIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>CustomFilter&lt; T &gt;</type>
      <name>find_content_filter</name>
      <anchorfile>group__DDSCustomContentFilterModule.html</anchorfile>
      <anchor>gaddb49e800dd537f9562deafb23e2acbe</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, const std::string &amp;filter_name)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_registered_content_filters</name>
      <anchorfile>namespacerti_1_1topic.html</anchorfile>
      <anchor>a6a800748fcf1f64865efca16b49bfaa0</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, FwdIterator begin, uint32_t max_size)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>find_registered_content_filters</name>
      <anchorfile>namespacerti_1_1topic.html</anchorfile>
      <anchor>a35388776ccca7479efc4ae73fd6c9cfb</anchor>
      <arglist>(const dds::domain::DomainParticipant &amp;participant, BinIterator begin)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::topic::no_compile_data_t</name>
    <filename>structrti_1_1topic_1_1no__compile__data__t.html</filename>
  </compound>
  <compound kind="class">
    <name>rti::topic::ContentFilter</name>
    <filename>classrti_1_1topic_1_1ContentFilter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual CompileData &amp;</type>
      <name>compile</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a3d61a7042a5c0d507dbec9738f311fdc</anchor>
      <arglist>(const std::string &amp;expression, const dds::core::StringSeq &amp;parameters, const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;type_code, const std::string &amp;type_class_name, CompileData *old_compile_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>evaluate</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a08bcef6bc04b6df48d0aa4de15e92d55</anchor>
      <arglist>(CompileData &amp;compile_data, const T &amp;sample, const FilterSampleInfo &amp;meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a7804e6b317453ab1d968c03857f72f4d</anchor>
      <arglist>(CompileData &amp;compile_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::topic::WriterContentFilter</name>
    <filename>classrti_1_1topic_1_1WriterContentFilter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>rti::topic::ContentFilter</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_compile</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a14ad1be1ae51de270149bf81291392de</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, ExpressionProperty &amp;prop, const std::string &amp;expression, const dds::core::StringSeq &amp;parameters, const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;type_code, const std::string &amp;type_class_name, const rti::core::Cookie &amp;cookie)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual rti::core::CookieSeq &amp;</type>
      <name>writer_evaluate</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a0011df4957aede420da3ad41a50869f1</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, const T &amp;sample, const FilterSampleInfo &amp;meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_finalize</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a6b9655f5066bac7aed3ae3b4b1437547</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, const rti::core::Cookie &amp;cookie)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WriterFilterData &amp;</type>
      <name>writer_attach</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a4032a240dd5d2656ccec24bf0ceb4e98</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_detach</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a1cd1af75d0500a11426301f53421f5a3</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_return_loan</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a91629cd664ce36e2024f9a2244dfba65</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, rti::core::CookieSeq &amp;cookies)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CompileData &amp;</type>
      <name>compile</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a3d61a7042a5c0d507dbec9738f311fdc</anchor>
      <arglist>(const std::string &amp;expression, const dds::core::StringSeq &amp;parameters, const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;type_code, const std::string &amp;type_class_name, CompileData *old_compile_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>evaluate</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a08bcef6bc04b6df48d0aa4de15e92d55</anchor>
      <arglist>(CompileData &amp;compile_data, const T &amp;sample, const FilterSampleInfo &amp;meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a7804e6b317453ab1d968c03857f72f4d</anchor>
      <arglist>(CompileData &amp;compile_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::topic::WriterContentFilterHelper</name>
    <filename>classrti_1_1topic_1_1WriterContentFilterHelper.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>rti::topic::WriterContentFilter</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_evaluate_helper</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilterHelper.html</anchorfile>
      <anchor>a897c5b7fde561e40efb35cf7d2af949b</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, const T &amp;sample, const FilterSampleInfo &amp;meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_compile</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a14ad1be1ae51de270149bf81291392de</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, ExpressionProperty &amp;prop, const std::string &amp;expression, const dds::core::StringSeq &amp;parameters, const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;type_code, const std::string &amp;type_class_name, const rti::core::Cookie &amp;cookie)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual rti::core::CookieSeq &amp;</type>
      <name>writer_evaluate</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a0011df4957aede420da3ad41a50869f1</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, const T &amp;sample, const FilterSampleInfo &amp;meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_finalize</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a6b9655f5066bac7aed3ae3b4b1437547</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, const rti::core::Cookie &amp;cookie)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WriterFilterData &amp;</type>
      <name>writer_attach</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a4032a240dd5d2656ccec24bf0ceb4e98</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_detach</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a1cd1af75d0500a11426301f53421f5a3</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_return_loan</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilter.html</anchorfile>
      <anchor>a91629cd664ce36e2024f9a2244dfba65</anchor>
      <arglist>(WriterFilterData &amp;writer_filter_data, rti::core::CookieSeq &amp;cookies)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CompileData &amp;</type>
      <name>compile</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a3d61a7042a5c0d507dbec9738f311fdc</anchor>
      <arglist>(const std::string &amp;expression, const dds::core::StringSeq &amp;parameters, const dds::core::optional&lt; dds::core::xtypes::DynamicType &gt; &amp;type_code, const std::string &amp;type_class_name, CompileData *old_compile_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>evaluate</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a08bcef6bc04b6df48d0aa4de15e92d55</anchor>
      <arglist>(CompileData &amp;compile_data, const T &amp;sample, const FilterSampleInfo &amp;meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classrti_1_1topic_1_1ContentFilter.html</anchorfile>
      <anchor>a7804e6b317453ab1d968c03857f72f4d</anchor>
      <arglist>(CompileData &amp;compile_data)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add_cookie</name>
      <anchorfile>classrti_1_1topic_1_1WriterContentFilterHelper.html</anchorfile>
      <anchor>a99a798f29788804f1401925a33c1c35b</anchor>
      <arglist>(rti::core::Cookie &amp;cookie)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::topic::CustomFilter</name>
    <filename>classrti_1_1topic_1_1CustomFilter.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>CustomFilter</name>
      <anchorfile>classrti_1_1topic_1_1CustomFilter.html</anchorfile>
      <anchor>a4c1cc9ec6f50351d808ce8026ed1b4c0</anchor>
      <arglist>(typename dds::core::smart_ptr_traits&lt; T &gt;::ref_type content_filter_ref)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>classrti_1_1topic_1_1CustomFilter.html</anchorfile>
      <anchor>a2c3429fa2df6585a3e1b1eeee23b5c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classrti_1_1topic_1_1CustomFilter.html</anchorfile>
      <anchor>a670763029715b2e140dc70cc129958a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a299077d89db9f6d7bd5ab89066fdf204</anchor>
      <arglist>(dds::core::null_type &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a547cbbc6b49a439af09a48d638bea36a</anchor>
      <arglist>(const Reference &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a0c9d73c46fbb46f5c401181874097827</anchor>
      <arglist>(const Reference&lt; D &gt; &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Reference</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a211079c559cbe5c2e7d9ce47a2df888f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a0df735ee4a9486961d3e02c4649b24fe</anchor>
      <arglist>(const R &amp;ref) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a1d08e6b9d1a68929182e9182cdf6ce5a</anchor>
      <arglist>(const R &amp;ref) const </arglist>
    </member>
    <member kind="function">
      <type>Reference &amp;</type>
      <name>operator=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a1552f9f52091531d9f25681dbbb27dbf</anchor>
      <arglist>(const null_type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>aa848aad5a5553c4b8e388954c3f5bf63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>ac55dde1123835df8b0d2238c6e60ccbd</anchor>
      <arglist>(const null_type) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a23171148a4c69662a7a799f0d5dc5c3d</anchor>
      <arglist>(const null_type) const </arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE_REF_T &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>ac4711eb43fd9a6e7f4af185896f6bd8c</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE_REF_T &amp;</type>
      <name>delegate</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>adccba565e07cf945be333811230b3462</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a4f8e3737a67c3aa46c4ba5faaad65eff</anchor>
      <arglist>() OMG_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>const DELEGATE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classdds_1_1core_1_1Reference.html</anchorfile>
      <anchor>a3282b6cd2f63a812c5e98393dce099ad</anchor>
      <arglist>() const OMG_NOEXCEPT</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::topic::ExpressionProperty</name>
    <filename>classrti_1_1topic_1_1ExpressionProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>ExpressionProperty</name>
      <anchorfile>classrti_1_1topic_1_1ExpressionProperty.html</anchorfile>
      <anchor>a92d91ab176b7984a2d97e5ee7d359610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExpressionProperty</name>
      <anchorfile>classrti_1_1topic_1_1ExpressionProperty.html</anchorfile>
      <anchor>a8c11fc3d5ac4149f062d36d2922b56dd</anchor>
      <arglist>(bool the_key_only_filter, bool the_writer_side_filter_optimization)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>key_only_filter</name>
      <anchorfile>classrti_1_1topic_1_1ExpressionProperty.html</anchorfile>
      <anchor>a7b7d2caded917aee62066dfa469c20b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ExpressionProperty &amp;</type>
      <name>key_only_filter</name>
      <anchorfile>classrti_1_1topic_1_1ExpressionProperty.html</anchorfile>
      <anchor>aece2ede24a5f72d09c2ebdebbf49712b</anchor>
      <arglist>(bool the_key_only_filter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writer_side_filter_optimization</name>
      <anchorfile>classrti_1_1topic_1_1ExpressionProperty.html</anchorfile>
      <anchor>ae133eeaa58ce74de8a45f06db4f5c3c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ExpressionProperty &amp;</type>
      <name>writer_side_filter_optimization</name>
      <anchorfile>classrti_1_1topic_1_1ExpressionProperty.html</anchorfile>
      <anchor>ab4c4b2f6e6f06b775c9e9a47a25f8115</anchor>
      <arglist>(bool the_writer_side_filter_optimization)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::topic::FilterSampleInfo</name>
    <filename>classrti_1_1topic_1_1FilterSampleInfo.html</filename>
    <member kind="function">
      <type>rti::core::SampleIdentity</type>
      <name>related_sample_identity</name>
      <anchorfile>classrti_1_1topic_1_1FilterSampleInfo.html</anchorfile>
      <anchor>ae5dd3ad2ec1e33cde07859b9734cfd48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>priority</name>
      <anchorfile>classrti_1_1topic_1_1FilterSampleInfo.html</anchorfile>
      <anchor>a52f65cef327a30ff5a6e0574cbcece03</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rti::topic::topic_type_has_pointer_members</name>
    <filename>structrti_1_1topic_1_1topic__type__has__pointer__members.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>rti::topic::dynamic_type</name>
    <filename>structrti_1_1topic_1_1dynamic__type.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="namespace">
    <name>rti::util</name>
    <filename>namespacerti_1_1util.html</filename>
    <class kind="class">rti::util::StreamFlagSaver</class>
    <member kind="function">
      <type>void</type>
      <name>sleep</name>
      <anchorfile>group__NDDSUtilityModule.html</anchorfile>
      <anchor>ga7bc6f194e1f771e8e0b55e66a393827d</anchor>
      <arglist>(const dds::core::Duration &amp;durationIn)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>spin_per_microsecond</name>
      <anchorfile>namespacerti_1_1util.html</anchorfile>
      <anchor>aa60c346bf28104b19176da94049c61c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spin</name>
      <anchorfile>namespacerti_1_1util.html</anchorfile>
      <anchor>a6ba8da0bde89e8f9046d1a369b6148b8</anchor>
      <arglist>(uint64_t spin_count)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rti::util::StreamFlagSaver</name>
    <filename>classrti_1_1util_1_1StreamFlagSaver.html</filename>
  </compound>
  <compound kind="dir">
    <name>apis</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/apis/</path>
    <filename>dir_5e5f4be5fa1805fe24c28a275eec2166.html</filename>
    <file>clock.dxx</file>
    <file>dcps.dxx</file>
    <file>main-apis.dxx</file>
    <file>memorymgmt.dxx</file>
    <file>multichannel.dxx</file>
    <file>ndds.dxx</file>
    <file>patterns.dxx</file>
    <file>persistence.dxx</file>
    <file>syntax.dxx</file>
    <file>system_properties.dxx</file>
    <file>xmlconfiguration.dxx</file>
  </compound>
  <compound kind="dir">
    <name>cond</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/sub/cond/</path>
    <filename>dir_32a2d614f50d404e1977c85e469ee861.html</filename>
    <file>QueryConditionImpl.hpp</file>
    <file>ReadConditionImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>cond</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/cond/</path>
    <filename>dir_16146be83f5a015faa272f2787aff759.html</filename>
    <dir>detail</dir>
    <file>QueryCondition.hpp</file>
    <file>ReadCondition.hpp</file>
    <file>TQueryCondition.hpp</file>
    <file>TReadCondition.hpp</file>
  </compound>
  <compound kind="dir">
    <name>cond</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/core/cond/</path>
    <filename>dir_ff772c8adc4d23c5d28ef5582ff4dffc.html</filename>
    <file>ConditionImpl.hpp</file>
    <file>GuardConditionImpl.hpp</file>
    <file>StatusConditionImpl.hpp</file>
    <file>WaitSetImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>cond</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/cond/</path>
    <filename>dir_57557c4bf77520614791497511cb1331.html</filename>
    <dir>detail</dir>
    <file>Condition.hpp</file>
    <file>GuardCondition.hpp</file>
    <file>StatusCondition.hpp</file>
    <file>TCondition.hpp</file>
    <file>TGuardCondition.hpp</file>
    <file>TStatusCondition.hpp</file>
    <file>TWaitSet.hpp</file>
    <file>WaitSet.hpp</file>
  </compound>
  <compound kind="dir">
    <name>config</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/config/</path>
    <filename>dir_8488128668528246f9577ecd67ffee28.html</filename>
    <file>buildid.hpp</file>
    <file>Logger.hpp</file>
    <file>Version.hpp</file>
  </compound>
  <compound kind="dir">
    <name>core</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/core/</path>
    <filename>dir_c557a4f064e2da5c7974250c7065b1ab.html</filename>
    <dir>cond</dir>
    <dir>detail</dir>
    <dir>policy</dir>
    <dir>status</dir>
    <dir>xtypes</dir>
    <file>AllocationSettings.hpp</file>
    <file>rti/core/array.hpp</file>
    <file>BuiltinProfiles.hpp</file>
    <file>BuiltinTopicTypesImpl.hpp</file>
    <file>constants.hpp</file>
    <file>ContentFilterProperty.hpp</file>
    <file>Cookie.hpp</file>
    <file>rti/core/corefwd.hpp</file>
    <file>DiscoveryPluginPromiscuityKind.hpp</file>
    <file>DllExport.hpp</file>
    <file>EndpointGroup.hpp</file>
    <file>rti/core/Entity.hpp</file>
    <file>EntityLock.hpp</file>
    <file>rti/core/Exception.hpp</file>
    <file>FunctorHolder.hpp</file>
    <file>Guid.hpp</file>
    <file>rti/core/InstanceHandle.hpp</file>
    <file>ListenerBinder.hpp</file>
    <file>Locator.hpp</file>
    <file>LocatorFilter.hpp</file>
    <file>LockGuard.hpp</file>
    <file>LongDouble.hpp</file>
    <file>memory.hpp</file>
    <file>NativeValueType.hpp</file>
    <file>OptionalImpl.hpp</file>
    <file>OptionalValue.hpp</file>
    <file>Pointer.hpp</file>
    <file>PolicySettings.hpp</file>
    <file>ProductVersion.hpp</file>
    <file>ProtocolVersion.hpp</file>
    <file>ProxyTypeSupport.hpp</file>
    <file>QosProviderImpl.hpp</file>
    <file>QosProviderParams.hpp</file>
    <file>rticore.hpp</file>
    <file>RtpsWellKnownPorts.hpp</file>
    <file>SampleFlag.hpp</file>
    <file>SampleIdentity.hpp</file>
    <file>Semaphore.hpp</file>
    <file>Sequence.hpp</file>
    <file>SequenceNumber.hpp</file>
    <file>ThreadSettings.hpp</file>
    <file>TransportInfo.hpp</file>
    <file>TypeObject.hpp</file>
    <file>rti/core/Vector.hpp</file>
    <file>VectorIterator.hpp</file>
    <file>VendorId.hpp</file>
  </compound>
  <compound kind="dir">
    <name>core</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/</path>
    <filename>dir_45c43eb26a6c74ef4eeec73ee66e6f4c.html</filename>
    <dir>cond</dir>
    <dir>detail</dir>
    <dir>policy</dir>
    <dir>status</dir>
    <dir>xtypes</dir>
    <file>dds/core/array.hpp</file>
    <file>BuiltinTopicTypes.hpp</file>
    <file>conformance.hpp</file>
    <file>dds/core/corefwd.hpp</file>
    <file>ddscore.hpp</file>
    <file>Duration.hpp</file>
    <file>dds/core/Entity.hpp</file>
    <file>dds/core/Exception.hpp</file>
    <file>dds/core/InstanceHandle.hpp</file>
    <file>LengthUnlimited.hpp</file>
    <file>macros.hpp</file>
    <file>Optional.hpp</file>
    <file>QosProvider.hpp</file>
    <file>ref_traits.hpp</file>
    <file>Reference.hpp</file>
    <file>refmacros.hpp</file>
    <file>SafeEnumeration.hpp</file>
    <file>String.hpp</file>
    <file>TBuiltinTopicTypes.hpp</file>
    <file>TEntity.hpp</file>
    <file>TEntityQos.hpp</file>
    <file>Time.hpp</file>
    <file>TInstanceHandle.hpp</file>
    <file>TQosProvider.hpp</file>
    <file>types.hpp</file>
    <file>Value.hpp</file>
    <file>vector.hpp</file>
    <file>WeakReference.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dds</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/</path>
    <filename>dir_49bf2fab8e191e14ebf70e6e45e84f70.html</filename>
    <dir>core</dir>
    <dir>domain</dir>
    <dir>pub</dir>
    <dir>sub</dir>
    <dir>topic</dir>
    <file>dds.hpp</file>
  </compound>
  <compound kind="dir">
    <name>dds_doc.1.0</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/</path>
    <filename>dir_07af3f2ecbe918735193bb9319229e1a.html</filename>
    <dir>srcDoc</dir>
  </compound>
  <compound kind="dir">
    <name>dependencies</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/dependencies/</path>
    <filename>dir_dcefcfa486d66692293b02ba07df3fdc.html</filename>
    <file>main-dependencies.dxx</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/topic/qos/detail/</path>
    <filename>dir_7b8fc29a9c10237d4d91fb06983fa41f.html</filename>
    <file>detail/TopicQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/topic/detail/</path>
    <filename>dir_ba4f194dede554ee70df3256ac190536.html</filename>
    <file>TopicListenerForwarder.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/status/detail/</path>
    <filename>dir_89974357d58c68bffad5216c01f5a910.html</filename>
    <file>dds/core/status/detail/Status.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/cond/detail/</path>
    <filename>dir_9d50d4f07de4333a497550f2cd9e9b99.html</filename>
    <file>detail/QueryCondition.hpp</file>
    <file>detail/ReadCondition.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/core/detail/</path>
    <filename>dir_93413a0acdd928666ecd13854351ed59.html</filename>
    <file>EntityDeleterIterator.hpp</file>
    <file>NativeConversion.hpp</file>
    <file>NativeEntity.hpp</file>
    <file>NativeSequence.hpp</file>
    <file>QosPolicyMacros.hpp</file>
    <file>SelfReference.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/domain/qos/detail/</path>
    <filename>dir_2e75e2c6b6661242c01e0a432a3ab20a.html</filename>
    <file>detail/DomainParticipantFactoryQos.hpp</file>
    <file>detail/DomainParticipantQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/domain/detail/</path>
    <filename>dir_21ead9eb522455338a386079d9b6dbab.html</filename>
    <file>dds/domain/detail/domainfwd.hpp</file>
    <file>detail/DomainParticipant.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/pub/qos/detail/</path>
    <filename>dir_77846a37896a6acb2e0e7a7b52d86bce.html</filename>
    <file>detail/DataWriterQos.hpp</file>
    <file>detail/PublisherQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/pub/detail/</path>
    <filename>dir_442b271a04b141033b057cccab8ff868.html</filename>
    <file>DataWriterListenerForwarder.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/qos/detail/</path>
    <filename>dir_4f9145fc087c4b76a1e3cfd730a41a4f.html</filename>
    <file>detail/DataReaderQos.hpp</file>
    <file>detail/SubscriberQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/sub/detail/</path>
    <filename>dir_292414b6084f7fa317c64c05863423e5.html</filename>
    <file>DataReaderListenerForwarder.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/policy/detail/</path>
    <filename>dir_c6f811ba98f406930c8ab630660c40b2.html</filename>
    <file>dds/core/policy/detail/CorePolicy.hpp</file>
    <file>dds/core/policy/detail/QosPolicyCount.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/cond/detail/</path>
    <filename>dir_eea37bf86b77cf7d45e83500f4805943.html</filename>
    <file>detail/Condition.hpp</file>
    <file>detail/GuardCondition.hpp</file>
    <file>detail/StatusCondition.hpp</file>
    <file>detail/WaitSet.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/detail/</path>
    <filename>dir_8383079638c3cd8ddef6efd3828eaa72.html</filename>
    <file>detail/BuiltinTopicTypes.hpp</file>
    <file>detail/conformance.hpp</file>
    <file>dds/core/detail/corefwd.hpp</file>
    <file>dds/core/detail/Entity.hpp</file>
    <file>dds/core/detail/InstanceHandle.hpp</file>
    <file>inttypes.hpp</file>
    <file>detail/macros.hpp</file>
    <file>detail/Optional.hpp</file>
    <file>detail/QosProvider.hpp</file>
    <file>detail/ref_traits.hpp</file>
    <file>dds/core/detail/Vector.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/topic/detail/</path>
    <filename>dir_f26e74bfc830926a32117f9c38afb77b.html</filename>
    <file>detail/AnyTopic.hpp</file>
    <file>detail/AnyTopicDescription.hpp</file>
    <file>detail/BuiltinTopic.hpp</file>
    <file>detail/BuiltinTopicKey.hpp</file>
    <file>detail/ContentFilteredTopic.hpp</file>
    <file>detail/Filter.hpp</file>
    <file>dds/topic/detail/find.hpp</file>
    <file>detail/MultiTopic.hpp</file>
    <file>detail/Topic.hpp</file>
    <file>detail/TopicDescription.hpp</file>
    <file>dds/topic/detail/topicfwd.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/pub/detail/</path>
    <filename>dir_724126255b37054d2aa7daa3b7ac8943.html</filename>
    <file>detail/AnyDataWriter.hpp</file>
    <file>detail/CoherentSet.hpp</file>
    <file>detail/DataWriter.hpp</file>
    <file>dds/pub/detail/find.hpp</file>
    <file>dds/pub/detail/pubfwd.hpp</file>
    <file>detail/Publisher.hpp</file>
    <file>detail/SuspendedPublication.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/detail/</path>
    <filename>dir_7d7001de759e538e518716c48a25d0ad.html</filename>
    <file>detail/AnyDataReader.hpp</file>
    <file>detail/CoherentAccess.hpp</file>
    <file>detail/DataReader.hpp</file>
    <file>detail/DataState.hpp</file>
    <file>dds/sub/detail/find.hpp</file>
    <file>detail/GenerationCount.hpp</file>
    <file>detail/LoanedSamples.hpp</file>
    <file>detail/Query.hpp</file>
    <file>detail/Rank.hpp</file>
    <file>detail/Sample.hpp</file>
    <file>detail/SampleInfo.hpp</file>
    <file>detail/SharedSamples.hpp</file>
    <file>dds/sub/detail/subfwd.hpp</file>
    <file>detail/Subscriber.hpp</file>
  </compound>
  <compound kind="dir">
    <name>detail</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/xtypes/detail/</path>
    <filename>dir_acdae7e3e1695bb16e4b244ec7a84e92.html</filename>
    <file>detail/AliasType.hpp</file>
    <file>Annotation.hpp</file>
    <file>detail/CollectionTypes.hpp</file>
    <file>detail/DynamicData.hpp</file>
    <file>detail/DynamicType.hpp</file>
    <file>detail/EnumType.hpp</file>
    <file>detail/MemberType.hpp</file>
    <file>dds/core/xtypes/detail/PrimitiveTypes.hpp</file>
    <file>detail/StructType.hpp</file>
    <file>detail/TypeProvider.hpp</file>
    <file>UnionCase.hpp</file>
    <file>detail/UnionType.hpp</file>
  </compound>
  <compound kind="dir">
    <name>domain</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/domain/</path>
    <filename>dir_1fd1ae8604074cf4181d5c45ddae9a89.html</filename>
    <dir>qos</dir>
    <file>rti/domain/domainfwd.hpp</file>
    <file>DomainId.hpp</file>
    <file>DomainParticipantConfigParams.hpp</file>
    <file>DomainParticipantImpl.hpp</file>
    <file>DomainParticipantListenerBinder.hpp</file>
    <file>FactoryPluginSupport.hpp</file>
    <file>rti/domain/find.hpp</file>
    <file>PluginSupport.hpp</file>
    <file>rtidomain.hpp</file>
  </compound>
  <compound kind="dir">
    <name>domain</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/domain/</path>
    <filename>dir_d30c8288d9a419cceac23a4fb1fede44.html</filename>
    <dir>detail</dir>
    <dir>qos</dir>
    <file>ddsdomain.hpp</file>
    <file>domain/discovery.hpp</file>
    <file>dds/domain/domainfwd.hpp</file>
    <file>DomainParticipant.hpp</file>
    <file>DomainParticipantListener.hpp</file>
    <file>dds/domain/find.hpp</file>
    <file>TDomainParticipant.hpp</file>
  </compound>
  <compound kind="dir">
    <name>examples</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/examples/</path>
    <filename>dir_d9f94aea2a0b08d2728c8e852f9aa60e.html</filename>
    <file>helloWorld.dxx</file>
    <file>main-examples.dxx</file>
    <file>dds_doc.1.0/srcDoc/examples/participant.dxx</file>
    <file>patterns_requestreply.dxx</file>
    <file>publication.dxx</file>
    <file>subscription.dxx</file>
  </compound>
  <compound kind="dir">
    <name>examples</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/srcDoc/examples/</path>
    <filename>dir_5a95e76ddf3724c8b963914828b5bd20.html</filename>
    <file>builtin_types.dxx</file>
    <file>custom_content_filter.dxx</file>
    <file>entity.dxx</file>
    <file>errors.dxx</file>
    <file>filter.dxx</file>
    <file>hello.dxx</file>
    <file>dds_cpp.2.0/srcDoc/examples/participant.dxx</file>
    <file>publisher.dxx</file>
    <file>qos.dxx</file>
    <file>qos_provider.dxx</file>
    <file>reader.dxx</file>
    <file>subscriber.dxx</file>
    <file>topic.dxx</file>
    <file>types.dxx</file>
    <file>waitset.dxx</file>
    <file>writer.dxx</file>
    <file>xml_app_creation.dxx</file>
    <file>xtypes.dxx</file>
  </compound>
  <compound kind="dir">
    <name>examples_srcCxx</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/srcDoc/examples_srcCxx/</path>
    <filename>dir_1884c91e3d10130d67adddb101fd4c87.html</filename>
    <dir>h</dir>
    <file>Foo.hpp</file>
  </compound>
  <compound kind="dir">
    <name>guides</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/guides/</path>
    <filename>dir_e97c88e32a44e9f0626bef3513ee5b32.html</filename>
    <file>conventions-cpp2.dxx</file>
    <file>dev-guide.dxx</file>
    <file>doc-guide.dxx</file>
    <file>dotnet-languages-guide.dxx</file>
    <file>main-guides.dxx</file>
    <file>namespace-guide.dxx</file>
    <file>user-guide.dxx</file>
  </compound>
  <compound kind="dir">
    <name>h</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/srcDoc/examples_srcCxx/h/</path>
    <filename>dir_032b9895a1e41cc05ac6c8edcf89fbf0.html</filename>
    <file>h/Foo.hpp</file>
  </compound>
  <compound kind="dir">
    <name>hpp</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/</path>
    <filename>dir_b4544eabb88e63aefeab0ff750603560.html</filename>
    <dir>dds</dir>
    <dir>rti</dir>
  </compound>
  <compound kind="dir">
    <name>interface</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/interface/</path>
    <filename>dir_4961fd0f65389e0e2c14af8dfcfc3752.html</filename>
    <file>dds.ifcxx</file>
  </compound>
  <compound kind="dir">
    <name>interface</name>
    <path>/home/build/rti/waveworks/ndds523/transport.1.0/interface/</path>
    <filename>dir_ce9e9135cc60bdcec6ee1daff60b2fe4.html</filename>
    <file>common_user.ifc</file>
    <file>interface_user.ifc</file>
    <file>shmem.ifc</file>
    <file>udpv4.ifc</file>
    <file>udpv6.ifc</file>
  </compound>
  <compound kind="dir">
    <name>policy</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/core/policy/</path>
    <filename>dir_4cdc9c35ea4842a0ca2477906574bcb0.html</filename>
    <file>rti/core/policy/CorePolicy.hpp</file>
    <file>CorePolicyAdapter.hpp</file>
    <file>policyfwd.hpp</file>
    <file>rti/core/policy/PolicyKind.hpp</file>
    <file>rti/core/policy/QosPolicyCount.hpp</file>
  </compound>
  <compound kind="dir">
    <name>policy</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/policy/</path>
    <filename>dir_0b29264dfadfac26dd22bba827d1a2a9.html</filename>
    <dir>detail</dir>
    <file>dds/core/policy/CorePolicy.hpp</file>
    <file>dds/core/policy/PolicyKind.hpp</file>
    <file>PolicyTraits.hpp</file>
    <file>dds/core/policy/QosPolicyCount.hpp</file>
    <file>TCorePolicy.hpp</file>
    <file>TQosPolicyCount.hpp</file>
  </compound>
  <compound kind="dir">
    <name>pub</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/pub/</path>
    <filename>dir_84e7122587cf806d556e13dd06c6f3e0.html</filename>
    <dir>detail</dir>
    <dir>qos</dir>
    <file>AnyDataWriter.hpp</file>
    <file>AnyDataWriterListener.hpp</file>
    <file>CoherentSet.hpp</file>
    <file>DataWriter.hpp</file>
    <file>DataWriterListener.hpp</file>
    <file>ddspub.hpp</file>
    <file>pub/discovery.hpp</file>
    <file>dds/pub/find.hpp</file>
    <file>dds/pub/pubfwd.hpp</file>
    <file>Publisher.hpp</file>
    <file>PublisherListener.hpp</file>
    <file>SuspendedPublication.hpp</file>
    <file>TCoherentSet.hpp</file>
    <file>TDataWriter.hpp</file>
    <file>TPublisher.hpp</file>
    <file>TSuspendedPublication.hpp</file>
  </compound>
  <compound kind="dir">
    <name>pub</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/pub/</path>
    <filename>dir_b77a7484d03b5cc9f79e7d95516dcb9c.html</filename>
    <dir>detail</dir>
    <dir>qos</dir>
    <file>AcknowledgmentInfo.hpp</file>
    <file>AnyDataWriterImpl.hpp</file>
    <file>CoherentSetImpl.hpp</file>
    <file>DataWriterImpl.hpp</file>
    <file>pub/discoveryImpl.hpp</file>
    <file>pub/findImpl.hpp</file>
    <file>FlowController.hpp</file>
    <file>rti/pub/pubfwd.hpp</file>
    <file>PublisherImpl.hpp</file>
    <file>rtipub.hpp</file>
    <file>SuspendedPublicationImpl.hpp</file>
    <file>WriteParams.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/topic/qos/</path>
    <filename>dir_d0df3b14837d0da51bbbafe6b1759c51.html</filename>
    <file>TopicQosImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/topic/qos/</path>
    <filename>dir_1c0e0c7c39f28204feb198d3f083ed49.html</filename>
    <dir>detail</dir>
    <file>TopicQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/domain/qos/</path>
    <filename>dir_881f2b24209236e88b8568e225783001.html</filename>
    <file>DomainParticipantFactoryQosImpl.hpp</file>
    <file>DomainParticipantQosImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/domain/qos/</path>
    <filename>dir_1f158ac44e38f7fb8afd0814e987f4b9.html</filename>
    <dir>detail</dir>
    <file>DomainParticipantFactoryQos.hpp</file>
    <file>DomainParticipantQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/pub/qos/</path>
    <filename>dir_7500989ae9526f9bdc82b1b16dc9b75f.html</filename>
    <file>DataWriterQosImpl.hpp</file>
    <file>PublisherQosImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/pub/qos/</path>
    <filename>dir_d1e1a30666d5f148caacf4a375443b86.html</filename>
    <dir>detail</dir>
    <file>DataWriterQos.hpp</file>
    <file>PublisherQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/sub/qos/</path>
    <filename>dir_18a826f18b5d776d24d1302374d5543f.html</filename>
    <file>DataReaderQosImpl.hpp</file>
    <file>SubscriberQosImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>qos</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/qos/</path>
    <filename>dir_d06f8676a2d2a48545fee9a2c5f1f67a.html</filename>
    <dir>detail</dir>
    <file>DataReaderQos.hpp</file>
    <file>SubscriberQos.hpp</file>
  </compound>
  <compound kind="dir">
    <name>rti</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/</path>
    <filename>dir_9ca322f8926bcdb155728cce37632833.html</filename>
    <dir>config</dir>
    <dir>core</dir>
    <dir>domain</dir>
    <dir>pub</dir>
    <dir>sub</dir>
    <dir>test</dir>
    <dir>topic</dir>
    <dir>util</dir>
    <file>rti.hpp</file>
  </compound>
  <compound kind="dir">
    <name>srcDoc</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/</path>
    <filename>dir_785b9a140530567e423a703bb27fe034.html</filename>
    <dir>apis</dir>
    <dir>dependencies</dir>
    <dir>examples</dir>
    <dir>guides</dir>
    <dir>tools</dir>
    <file>main.dxx</file>
  </compound>
  <compound kind="dir">
    <name>srcDoc</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/srcDoc/</path>
    <filename>dir_795db45460ed74cde7ec44eb08e1dadf.html</filename>
    <dir>examples</dir>
    <dir>examples_srcCxx</dir>
  </compound>
  <compound kind="dir">
    <name>status</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/core/status/</path>
    <filename>dir_ed70a96e4b700a2c64901551b325d379.html</filename>
    <file>rti/core/status/Status.hpp</file>
    <file>StatusAdapter.hpp</file>
    <file>statusfwd.hpp</file>
  </compound>
  <compound kind="dir">
    <name>status</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/status/</path>
    <filename>dir_7320e5347fa6ca2820a5c87b15686b54.html</filename>
    <dir>detail</dir>
    <file>State.hpp</file>
    <file>dds/core/status/Status.hpp</file>
    <file>TStatus.hpp</file>
  </compound>
  <compound kind="dir">
    <name>status</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/status/</path>
    <filename>dir_221f6e3f758352875f4e12e15e459279.html</filename>
    <file>status/DataState.hpp</file>
  </compound>
  <compound kind="dir">
    <name>sub</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/sub/</path>
    <filename>dir_d2fe8a02ce993a907c5e64bfe24e75b1.html</filename>
    <dir>cond</dir>
    <dir>detail</dir>
    <dir>qos</dir>
    <dir>status</dir>
    <file>AnyDataReader.hpp</file>
    <file>AnyDataReaderListener.hpp</file>
    <file>CoherentAccess.hpp</file>
    <file>DataReader.hpp</file>
    <file>DataReaderListener.hpp</file>
    <file>ddssub.hpp</file>
    <file>sub/discovery.hpp</file>
    <file>dds/sub/find.hpp</file>
    <file>GenerationCount.hpp</file>
    <file>LoanedSamples.hpp</file>
    <file>Query.hpp</file>
    <file>Rank.hpp</file>
    <file>Sample.hpp</file>
    <file>SampleInfo.hpp</file>
    <file>SharedSamples.hpp</file>
    <file>dds/sub/subfwd.hpp</file>
    <file>Subscriber.hpp</file>
    <file>SubscriberListener.hpp</file>
    <file>TCoherentAccess.hpp</file>
    <file>TDataReader.hpp</file>
    <file>TGenerationCount.hpp</file>
    <file>TRank.hpp</file>
    <file>TSample.hpp</file>
    <file>TSampleInfo.hpp</file>
    <file>TSubscriber.hpp</file>
  </compound>
  <compound kind="dir">
    <name>sub</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/sub/</path>
    <filename>dir_ac8c8966530acb90ab5574c6224ead70.html</filename>
    <dir>cond</dir>
    <dir>detail</dir>
    <dir>qos</dir>
    <file>AckResponseData.hpp</file>
    <file>AnyDataReaderImpl.hpp</file>
    <file>CoherentAccessImpl.hpp</file>
    <file>DataReaderImpl.hpp</file>
    <file>sub/discoveryImpl.hpp</file>
    <file>sub/findImpl.hpp</file>
    <file>GenerationCountImpl.hpp</file>
    <file>LoanedSample.hpp</file>
    <file>LoanedSamplesImpl.hpp</file>
    <file>QueryImpl.hpp</file>
    <file>RankImpl.hpp</file>
    <file>rtisub.hpp</file>
    <file>SampleImpl.hpp</file>
    <file>SampleInfoImpl.hpp</file>
    <file>SampleIterator.hpp</file>
    <file>SelectorImpl.hpp</file>
    <file>SharedSamplesImpl.hpp</file>
    <file>rti/sub/subfwd.hpp</file>
    <file>SubscriberImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>test</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/test/</path>
    <filename>dir_d9c61883a0bf0af46ffbfb023e386eb4.html</filename>
    <file>assertions.hpp</file>
    <file>exception_listener.hpp</file>
    <file>generic_tests.hpp</file>
    <file>Tester.hpp</file>
    <file>utilities.hpp</file>
  </compound>
  <compound kind="dir">
    <name>tools</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/tools/</path>
    <filename>dir_639e9381a76fddc5dd598e23adcf2f3a.html</filename>
    <file>main-tools.dxx</file>
    <file>nddsgen.dxx</file>
    <file>nddsping.dxx</file>
    <file>nddsspy.dxx</file>
  </compound>
  <compound kind="dir">
    <name>topic</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/topic/</path>
    <filename>dir_583cc8edec4f59a78b7e9004dd5b19cb.html</filename>
    <dir>detail</dir>
    <dir>qos</dir>
    <file>AnyTopicDescriptionImpl.hpp</file>
    <file>AnyTopicImpl.hpp</file>
    <file>BuiltinTopicImpl.hpp</file>
    <file>BuiltinTopicKeyImpl.hpp</file>
    <file>cdr.hpp</file>
    <file>ContentFilter.hpp</file>
    <file>ContentFilteredTopicImpl.hpp</file>
    <file>CustomFilter.hpp</file>
    <file>topic/discoveryImpl.hpp</file>
    <file>ExpressionProperty.hpp</file>
    <file>FilterImpl.hpp</file>
    <file>FilterSampleInfo.hpp</file>
    <file>topic/findImpl.hpp</file>
    <file>rtitopic.hpp</file>
    <file>TopicDescriptionImpl.hpp</file>
    <file>rti/topic/topicfwd.hpp</file>
    <file>TopicImpl.hpp</file>
    <file>rti/topic/TopicTraits.hpp</file>
  </compound>
  <compound kind="dir">
    <name>topic</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/topic/</path>
    <filename>dir_645c965b683154129f695cfa9000fa52.html</filename>
    <dir>detail</dir>
    <dir>qos</dir>
    <file>AnyTopic.hpp</file>
    <file>AnyTopicDescription.hpp</file>
    <file>AnyTopicListener.hpp</file>
    <file>BuiltinTopic.hpp</file>
    <file>BuiltinTopicKey.hpp</file>
    <file>ContentFilteredTopic.hpp</file>
    <file>ddstopic.hpp</file>
    <file>topic/discovery.hpp</file>
    <file>Filter.hpp</file>
    <file>dds/topic/find.hpp</file>
    <file>MultiTopic.hpp</file>
    <file>TBuiltinTopic.hpp</file>
    <file>TBuiltinTopicKey.hpp</file>
    <file>TContentFilteredTopic.hpp</file>
    <file>TFilter.hpp</file>
    <file>TMultiTopic.hpp</file>
    <file>Topic.hpp</file>
    <file>TopicDescription.hpp</file>
    <file>dds/topic/topicfwd.hpp</file>
    <file>TopicInstance.hpp</file>
    <file>TopicListener.hpp</file>
    <file>dds/topic/TopicTraits.hpp</file>
    <file>TTopic.hpp</file>
    <file>TTopicDescription.hpp</file>
  </compound>
  <compound kind="dir">
    <name>transport.1.0</name>
    <path>/home/build/rti/waveworks/ndds523/transport.1.0/</path>
    <filename>dir_7e24cfd50e4c182057d0603faef7b6bf.html</filename>
    <dir>interface</dir>
  </compound>
  <compound kind="dir">
    <name>util</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/util/</path>
    <filename>dir_9f47fd66f2ea3ff2ded164f5c8fc3cd6.html</filename>
    <file>StreamFlagSaver.hpp</file>
    <file>util.hpp</file>
  </compound>
  <compound kind="dir">
    <name>xtypes</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/rti/core/xtypes/</path>
    <filename>dir_5d07c5d493c0d1262820abf71d102497.html</filename>
    <file>AliasTypeImpl.hpp</file>
    <file>AnnotationsImpl.hpp</file>
    <file>CollectionTypesImpl.hpp</file>
    <file>DynamicDataImpl.hpp</file>
    <file>DynamicDataInfo.hpp</file>
    <file>DynamicDataMemberInfo.hpp</file>
    <file>DynamicDataProperty.hpp</file>
    <file>DynamicDataTuples.hpp</file>
    <file>DynamicTypeImpl.hpp</file>
    <file>EnumTypeImpl.hpp</file>
    <file>MemberImpl.hpp</file>
    <file>MemberTypeImpl.hpp</file>
    <file>rti/core/xtypes/PrimitiveTypes.hpp</file>
    <file>PrimitiveTypesImpl.hpp</file>
    <file>StructTypeImpl.hpp</file>
    <file>UnionTypeImpl.hpp</file>
  </compound>
  <compound kind="dir">
    <name>xtypes</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.2.0/hpp/dds/core/xtypes/</path>
    <filename>dir_a626b5fe53b4bb380f0a63c02ff8eeaa.html</filename>
    <dir>detail</dir>
    <file>AliasType.hpp</file>
    <file>Annotations.hpp</file>
    <file>CollectionTypes.hpp</file>
    <file>DynamicData.hpp</file>
    <file>DynamicType.hpp</file>
    <file>EnumType.hpp</file>
    <file>MemberType.hpp</file>
    <file>dds/core/xtypes/PrimitiveTypes.hpp</file>
    <file>StructType.hpp</file>
    <file>TypeKind.hpp</file>
    <file>TypeProvider.hpp</file>
    <file>UnionType.hpp</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>RTI Connext</title>
    <filename>index</filename>
    <docanchor file="index">main_support</docanchor>
    <docanchor file="index">main_toc</docanchor>
    <docanchor file="index">main_toc_pdfdocs</docanchor>
    <docanchor file="index">main_toc_htmldocs</docanchor>
    <docanchor file="index">getting_started</docanchor>
    <docanchor file="index">third_party_licenses</docanchor>
  </compound>
</tagfile>
