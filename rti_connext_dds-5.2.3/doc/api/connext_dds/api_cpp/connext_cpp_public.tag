<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="group">
    <name>PatternsExceptionsModule</name>
    <title>RTI Connext Exceptions</title>
    <filename>group__PatternsExceptionsModule.html</filename>
    <class kind="class">connext::RuntimeException</class>
    <class kind="class">connext::LogicException</class>
    <class kind="class">connext::UnsupportedException</class>
    <class kind="class">connext::BadParameterException</class>
    <class kind="class">connext::PreconditionNotMetException</class>
    <class kind="class">connext::ImmutablePolicyException</class>
    <class kind="class">connext::InconsistentPolicyException</class>
    <class kind="class">connext::NotEnabledException</class>
    <class kind="class">connext::AlreadyDeletedException</class>
    <class kind="class">connext::IllegalOperationException</class>
    <class kind="class">connext::TimeoutException</class>
    <class kind="class">connext::OutOfResourcesException</class>
  </compound>
  <compound kind="group">
    <name>NDDSClockSelectionModule</name>
    <title>Clock Selection</title>
    <filename>group__NDDSClockSelectionModule.html</filename>
    <docanchor file="group__NDDSClockSelectionModule">NDDSClockSelectionAvailable</docanchor>
    <docanchor file="group__NDDSClockSelectionModule">NDDSClockSelectionStrategy</docanchor>
    <docanchor file="group__NDDSClockSelectionModule">NDDSClockSelectionConfiguration</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSDomainModule</name>
    <title>Domain Module</title>
    <filename>group__DDSDomainModule.html</filename>
    <subgroup>DDSDomainParticipantFactoryModule</subgroup>
    <subgroup>DDSDomainParticipantModule</subgroup>
    <subgroup>DDSBuiltInTopicModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSDomainParticipantFactoryModule</name>
    <title>DomainParticipantFactory</title>
    <filename>group__DDSDomainParticipantFactoryModule.html</filename>
    <subgroup>DDSDomainParticipantConfigParamsModule</subgroup>
    <class kind="struct">DDS_DomainParticipantFactoryQos</class>
    <class kind="class">DDSDomainParticipantFactory</class>
    <member kind="define">
      <type>#define</type>
      <name>DDSTheParticipantFactory</name>
      <anchorfile>group__DDSDomainParticipantFactoryModule.html</anchorfile>
      <anchor>ga4436e042bbc423d24c5624ca246610ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_ReturnCode_t(*</type>
      <name>DDSDomainParticipantFactory_RegisterTypeFunction</name>
      <anchorfile>group__DDSDomainParticipantFactoryModule.html</anchorfile>
      <anchor>gada973f35d69c231b68127cdf5d42477e</anchor>
      <arglist>)(DDSDomainParticipant *participant, const char *type_name)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_DomainParticipantFactoryQos_equals</name>
      <anchorfile>group__DDSDomainParticipantFactoryModule.html</anchorfile>
      <anchor>ga9152a4b01655bbe1b330defd4f6d0ef1</anchor>
      <arglist>(const struct DDS_DomainParticipantFactoryQos *self, const struct DDS_DomainParticipantFactoryQos *other)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DomainParticipantQos</type>
      <name>DDS_PARTICIPANT_QOS_DEFAULT</name>
      <anchorfile>group__DDSDomainParticipantFactoryModule.html</anchorfile>
      <anchor>ga150dd7f8725206d7b6d8dbf0020eb5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DomainParticipantConfigParams_t</type>
      <name>DDS_PARTICIPANT_CONFIG_PARAMS_DEFAULT</name>
      <anchorfile>group__DDSDomainParticipantFactoryModule.html</anchorfile>
      <anchor>gac68dcdab3ec88efd430c4f6805da51d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDomainParticipantModule</name>
    <title>DomainParticipants</title>
    <filename>group__DDSDomainParticipantModule.html</filename>
    <class kind="struct">DDS_DomainParticipantQos</class>
    <class kind="class">DDSDomainParticipantListener</class>
    <class kind="class">DDSDomainParticipant</class>
    <member kind="typedef">
      <type>DDS_DOMAINID_TYPE_NATIVE</type>
      <name>DDS_DomainId_t</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga060e392b8334a6dbc289ec0f363df67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_DomainParticipantQos_equals</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>gae86535dafc4ab22aa16406440cd6d6fd</anchor>
      <arglist>(const struct DDS_DomainParticipantQos *self, const struct DDS_DomainParticipantQos *other)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TopicQos</type>
      <name>DDS_TOPIC_QOS_DEFAULT</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>gaebaddf684707e6c117824f22b6c128f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PublisherQos</type>
      <name>DDS_PUBLISHER_QOS_DEFAULT</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga4bc7cfcd5ec7d2bcd17a966684769451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SubscriberQos</type>
      <name>DDS_SUBSCRIBER_QOS_DEFAULT</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>gad29644804bcb673862abb4317015df1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_FlowControllerProperty_t</type>
      <name>DDS_FLOW_CONTROLLER_PROPERTY_DEFAULT</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>ga7a0ea35ac257b6f70c782daa06eff9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_SQLFILTER_NAME</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>gae9c70c42d8aab39f94a651deb0d087d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_STRINGMATCHFILTER_NAME</name>
      <anchorfile>group__DDSDomainParticipantModule.html</anchorfile>
      <anchor>gab19c89c4d7b648153707a3fdf91eca75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBuiltInTopicModule</name>
    <title>Built-in Topics</title>
    <filename>group__DDSBuiltInTopicModule.html</filename>
    <subgroup>DDSParticipantBuiltInTopicModule</subgroup>
    <subgroup>DDSTopicBuiltInTopicModule</subgroup>
    <subgroup>DDSPublicationBuiltInTopicModule</subgroup>
    <subgroup>DDSSubscriptionBuiltInTopicModule</subgroup>
    <subgroup>DDSBuiltInTopicCommonModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSTopicModule</name>
    <title>Topic Module</title>
    <filename>group__DDSTopicModule.html</filename>
    <subgroup>DDSTopicEntityModule</subgroup>
    <subgroup>DDSUserDataModule</subgroup>
    <subgroup>DDSTypeCodeModule</subgroup>
    <subgroup>DDSBuiltInTypesModule</subgroup>
    <subgroup>DDSDynamicDataModule</subgroup>
    <subgroup>DDSCdrTypesModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSTopicEntityModule</name>
    <title>Topics</title>
    <filename>group__DDSTopicEntityModule.html</filename>
    <class kind="struct">DDS_InconsistentTopicStatus</class>
    <class kind="struct">DDS_TopicQos</class>
    <class kind="struct">DDS_ExpressionProperty</class>
    <class kind="struct">DDS_FilterSampleInfo</class>
    <class kind="class">DDSTopicDescription</class>
    <class kind="class">DDSContentFilteredTopic</class>
    <class kind="class">DDSMultiTopic</class>
    <class kind="class">DDSTopic</class>
    <class kind="class">DDSTopicListener</class>
    <class kind="class">DDSContentFilter</class>
    <class kind="class">DDSWriterContentFilter</class>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_TopicQos_equals</name>
      <anchorfile>group__DDSTopicEntityModule.html</anchorfile>
      <anchor>ga7deefeddc457cff8c59c0bc62cc40745</anchor>
      <arglist>(const struct DDS_TopicQos *self, const struct DDS_TopicQos *other)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSUserDataModule</name>
    <title>User Data Type Support</title>
    <filename>group__DDSUserDataModule.html</filename>
    <class kind="struct">DDS_TypeAllocationParams_t</class>
    <class kind="struct">DDS_TypeDeallocationParams_t</class>
    <class kind="struct">Foo</class>
    <class kind="struct">DDS_InstanceHandleSeq</class>
    <class kind="class">FooTypeSupport</class>
    <class kind="class">DDSTypeSupport</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPESUPPORT_CPP</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>ga1d7eeb034b2611d4d5f588beea376e22</anchor>
      <arglist>(TTypeSupport, TData)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DATAWRITER_CPP_METP</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>gaf3188ddec5d1e5c65499f0c57bb76834</anchor>
      <arglist>(TDataWriter, TData)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DATAREADER_CPP_METP</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>ga5c807af28dc5328a6b571cf522adf3be</anchor>
      <arglist>(TDataReader, TDataSeq, TData)</arglist>
    </member>
    <member kind="typedef">
      <type>DDS_HANDLE_TYPE_NATIVE</type>
      <name>DDS_InstanceHandle_t</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>ga2cd7a0bbf330870ab93f94e05c92318b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_InstanceHandle_equals</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>gab70b6b7536555f269633de15de81420e</anchor>
      <arglist>(const DDS_InstanceHandle_t *self, const DDS_InstanceHandle_t *other)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_InstanceHandle_is_nil</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>ga9a73360264c8f15c5ac2ba22376c415f</anchor>
      <arglist>(const DDS_InstanceHandle_t *self)</arglist>
    </member>
    <member kind="variable">
      <type>const DDS_InstanceHandle_t</type>
      <name>DDS_HANDLE_NIL</name>
      <anchorfile>group__DDSUserDataModule.html</anchorfile>
      <anchor>ga7974338d80c6817f16f77899d908a60e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTypeCodeModule</name>
    <title>Type Code Support</title>
    <filename>group__DDSTypeCodeModule.html</filename>
    <class kind="struct">DDS_TypeCode</class>
    <class kind="struct">DDS_StructMember</class>
    <class kind="struct">DDS_StructMemberSeq</class>
    <class kind="struct">DDS_UnionMember</class>
    <class kind="struct">DDS_UnionMemberSeq</class>
    <class kind="struct">DDS_EnumMember</class>
    <class kind="struct">DDS_EnumMemberSeq</class>
    <class kind="struct">DDS_ValueMember</class>
    <class kind="struct">DDS_ValueMemberSeq</class>
    <class kind="struct">DDS_TypeCodeFactory</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPECODE_MEMBER_ID_INVALID</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gaf70993eadac68522bbce18f0142075b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPECODE_INDEX_INVALID</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga74985232cedf98ceba49de3f8e701b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPECODE_NOT_BITFIELD</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga8b7db590ebaf6c20584ef2c053eefe34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_VM_NONE</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga851c5b24289ca4cf08ab97f0b80c490f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_VM_CUSTOM</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gac68a26ac1e345b39991c307f051afd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_VM_ABSTRACT</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gae0b39e5ec09ae23206f8588d3fa5b826</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_VM_TRUNCATABLE</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga012d5822d7d9fed0709544dd691ba9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PRIVATE_MEMBER</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gada6dc35851aa1d2dcf050963094bc8e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PUBLIC_MEMBER</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gabbaeef6040ae4648b136a7b2ae179c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPECODE_NONKEY_MEMBER</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gafe35a475056615636abb1ee8822ff2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPECODE_KEY_MEMBER</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga9491b1304f24f81d9f1417e535d40092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TYPECODE_NONKEY_REQUIRED_MEMBER</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gac51953e0fd042e5d89b849030656b1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>DDS_ValueModifier</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gae4905c1cc6926c3f24e6a5563ff88548</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>DDS_Visibility</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga59e86085f27abb59bc4e6480b02fc0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_TCKind</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga0e3f0b2c88d331a730fe35e5ef75f670</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_NULL</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670af68849df8bef31b03c434a5bf9433a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_SHORT</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670aab8c0d9d0147a566ebbe095c1e3c03dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_LONG</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670afe386a00477f1e19ec5bb37c559dd769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_USHORT</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670ace96544b0695a1997a8469b096245446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_ULONG</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a898a390f515fcf856f4688a73f5930c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_FLOAT</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670accfa6e5bf2621961802447ab4844ad35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_DOUBLE</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670ad74cf39962072335c3c9715abe434b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_BOOLEAN</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a8011c8e26f5812518aa643ac74462a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_CHAR</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a3f748ca053347749870891792831e2cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_OCTET</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a8428a3112da309a6570393623f0a2ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_STRUCT</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a478972a4dc985d452851b7b805f36ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_UNION</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a0f572294926dc8eddb404ebf40a0c1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_ENUM</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670ab04a8633ed2ab1479ce177b4ce6c1724</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_STRING</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a97974ac68cd8dd09d0c069c6bebe9fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_SEQUENCE</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a0154584609fbfa7afc7c47bcb8ae8456</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_ARRAY</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670abd444cd6524362c5d54ff5589b83ba6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_ALIAS</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a90f0c24460fac3c88a3902bd684a45dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_LONGLONG</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670af594c86292a0ac089062593aa862f794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_ULONGLONG</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670aefb1461735bbc59aac444f7748445b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_LONGDOUBLE</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a08bc728c2384224e3279f96af63a1d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_WCHAR</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a5b3d32ae654bd39e5553aa5bddde4487</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_WSTRING</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a343ca3321a75834b4a57bef522c3e103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TK_VALUE</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gga0e3f0b2c88d331a730fe35e5ef75f670a729d31d0ec89aff050f46311ba4038c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_ExtensibilityKind</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gaf4c55c1197e5c07c4a409c77c2a3d34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_FINAL_EXTENSIBILITY</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ggaf4c55c1197e5c07c4a409c77c2a3d34bacb872bffe15144b74085d07b1403ab12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_EXTENSIBLE_EXTENSIBILITY</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ggaf4c55c1197e5c07c4a409c77c2a3d34ba809f4596bbfc2e932e18adfac2f80f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_MUTABLE_EXTENSIBILITY</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ggaf4c55c1197e5c07c4a409c77c2a3d34ba598f9d55cbb352d032431236ef7fa468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_null</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga0a8f383e6d7d48af31917b1e03a95f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_long</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga3490e03c9ca84888c02ec8c9d66133b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_ushort</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga43296a809ea3b9eafe8168da6f37e442</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_ulong</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gaeee3b5a5849b87cc3750ebca10c76bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_float</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga2ce3085f05b415b384bafda87b594293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_double</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gaa525492c7980d4f81e038b4e15e3c06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_boolean</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga2192736eec847a49f36b3b3a1713571a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_octet</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga6feab367f76a43adeb86ac07c7373d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_longlong</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>gabcb6764b54fcdba160795cd699766b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_ulonglong</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga8fca5c9d3e4d2538770c6820616cbedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_longdouble</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga77069061fd96065b8964ec16f95772f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TypeCode</type>
      <name>DDS_g_tc_wchar</name>
      <anchorfile>group__DDSTypeCodeModule.html</anchorfile>
      <anchor>ga8522381f53c455d7c6677b496316f8d4</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__DDSTypeCodeModule">DDSTypeCodeModule_access</docanchor>
    <docanchor file="group__DDSTypeCodeModule">DDSTypeCodeModule_discovery</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSBuiltInTypesModule</name>
    <title>Built-in Types</title>
    <filename>group__DDSBuiltInTypesModule.html</filename>
    <subgroup>DDSStringBuiltInTypeModule</subgroup>
    <subgroup>DDSKeyedStringBuiltInTypeModule</subgroup>
    <subgroup>DDSOctetsBuiltInTypeModule</subgroup>
    <subgroup>DDSKeyedOctetsBuiltInTypeModule</subgroup>
    <docanchor file="group__DDSBuiltInTypesModule">BuiltinTypeMemoryManagement</docanchor>
    <docanchor file="group__DDSBuiltInTypesModule">BuiltinTypeTypeCode</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSDynamicDataModule</name>
    <title>Dynamic Data</title>
    <filename>group__DDSDynamicDataModule.html</filename>
    <class kind="struct">DDS_DynamicDataProperty_t</class>
    <class kind="struct">DDS_DynamicDataTypeSerializationProperty_t</class>
    <class kind="struct">DDS_DynamicDataInfo</class>
    <class kind="struct">DDS_DynamicDataMemberInfo</class>
    <class kind="struct">DDS_DynamicData</class>
    <class kind="struct">DDS_DynamicDataSeq</class>
    <class kind="struct">DDS_DynamicDataTypeProperty_t</class>
    <class kind="class">DDSDynamicDataTypeSupport</class>
    <class kind="class">DDSDynamicDataReader</class>
    <class kind="class">DDSDynamicDataWriter</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DYNAMIC_DATA_MEMBER_ID_UNSPECIFIED</name>
      <anchorfile>group__DDSDynamicDataModule.html</anchorfile>
      <anchor>gad578e6281d8a36c96dbd8785f43e57cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_Long</type>
      <name>DDS_DynamicDataMemberId</name>
      <anchorfile>group__DDSDynamicDataModule.html</anchorfile>
      <anchor>ga5e4e3afcded97e793075f48a15c057c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DynamicDataProperty_t</type>
      <name>DDS_DYNAMIC_DATA_PROPERTY_DEFAULT</name>
      <anchorfile>group__DDSDynamicDataModule.html</anchorfile>
      <anchor>gacc0edf6a079d8759af2b2071037de43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DynamicDataTypeProperty_t</type>
      <name>DDS_DYNAMIC_DATA_TYPE_PROPERTY_DEFAULT</name>
      <anchorfile>group__DDSDynamicDataModule.html</anchorfile>
      <anchor>ga0805b6ec289f54f5f6e1906a41b1a1a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPublicationModule</name>
    <title>Publication Module</title>
    <filename>group__DDSPublicationModule.html</filename>
    <subgroup>DDSPublisherModule</subgroup>
    <subgroup>DDSWriterModule</subgroup>
    <subgroup>DDSFlowControllerModule</subgroup>
    <subgroup>NDDSMultichannelConfigurationModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSPublisherModule</name>
    <title>Publishers</title>
    <filename>group__DDSPublisherModule.html</filename>
    <class kind="struct">DDS_PublisherQos</class>
    <class kind="class">DDSPublisherListener</class>
    <class kind="class">DDSPublisherSeq</class>
    <class kind="class">DDSPublisher</class>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_PublisherQos_equals</name>
      <anchorfile>group__DDSPublisherModule.html</anchorfile>
      <anchor>ga7770890228ff6d56d063821a75d7de46</anchor>
      <arglist>(const struct DDS_PublisherQos *self, const struct DDS_PublisherQos *other)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataWriterQos</type>
      <name>DDS_DATAWRITER_QOS_DEFAULT</name>
      <anchorfile>group__DDSPublisherModule.html</anchorfile>
      <anchor>ga5e41d11f0205acbdd546ce7f59bf3cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataWriterQos</type>
      <name>DDS_DATAWRITER_QOS_USE_TOPIC_QOS</name>
      <anchorfile>group__DDSPublisherModule.html</anchorfile>
      <anchor>ga6980addcda7212b399443df3a2df4acb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSWriterModule</name>
    <title>Data Writers</title>
    <filename>group__DDSWriterModule.html</filename>
    <class kind="struct">DDS_OfferedDeadlineMissedStatus</class>
    <class kind="struct">DDS_LivelinessLostStatus</class>
    <class kind="struct">DDS_OfferedIncompatibleQosStatus</class>
    <class kind="struct">DDS_PublicationMatchedStatus</class>
    <class kind="struct">DDS_ReliableWriterCacheEventCount</class>
    <class kind="struct">DDS_ReliableWriterCacheChangedStatus</class>
    <class kind="struct">DDS_ReliableReaderActivityChangedStatus</class>
    <class kind="struct">DDS_DataWriterCacheStatus</class>
    <class kind="struct">DDS_DataWriterProtocolStatus</class>
    <class kind="struct">DDS_AcknowledgmentInfo</class>
    <class kind="struct">DDS_DataWriterQos</class>
    <class kind="class">FooDataWriter</class>
    <class kind="class">DDSDataWriterListener</class>
    <class kind="class">DDSDataWriter</class>
  </compound>
  <compound kind="group">
    <name>DDSFlowControllerModule</name>
    <title>Flow Controllers</title>
    <filename>group__DDSFlowControllerModule.html</filename>
    <class kind="struct">DDS_FlowControllerTokenBucketProperty_t</class>
    <class kind="struct">DDS_FlowControllerProperty_t</class>
    <class kind="class">DDSFlowController</class>
    <member kind="enumeration">
      <name>DDS_FlowControllerSchedulingPolicy</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>gacdd2356baadedf00457c9ce32f5ca115</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RR_FLOW_CONTROLLER_SCHED_POLICY</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ggacdd2356baadedf00457c9ce32f5ca115a22b0cb68305116cc3a5978084685c1cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_EDF_FLOW_CONTROLLER_SCHED_POLICY</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ggacdd2356baadedf00457c9ce32f5ca115afb77daa170cc951b2387ca9e24003a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_HPF_FLOW_CONTROLLER_SCHED_POLICY</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ggacdd2356baadedf00457c9ce32f5ca115abcc07438223e2fe71c0bff710b3ef020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>DDS_DEFAULT_FLOW_CONTROLLER_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>gaba76b62e6ff238c95585031f4dd1a322</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>DDS_FIXED_RATE_FLOW_CONTROLLER_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>ga095dcf1a86a1b6677c20e9e3d8cf37ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>DDS_ON_DEMAND_FLOW_CONTROLLER_NAME</name>
      <anchorfile>group__DDSFlowControllerModule.html</anchorfile>
      <anchor>gad64af801f2fc8d27df12b23e1a4af73b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSubscriptionModule</name>
    <title>Subscription Module</title>
    <filename>group__DDSSubscriptionModule.html</filename>
    <subgroup>DDSSubscriberModule</subgroup>
    <subgroup>DDSReaderModule</subgroup>
    <subgroup>DDSDataSampleModule</subgroup>
    <docanchor file="group__DDSSubscriptionModule">Subscription_access_samples</docanchor>
    <docanchor file="group__DDSSubscriptionModule">Data_access_patterns</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSSubscriberModule</name>
    <title>Subscribers</title>
    <filename>group__DDSSubscriberModule.html</filename>
    <class kind="struct">DDS_SubscriberQos</class>
    <class kind="class">DDSSubscriberListener</class>
    <class kind="class">DDSSubscriberSeq</class>
    <class kind="class">DDSSubscriber</class>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_SubscriberQos_equals</name>
      <anchorfile>group__DDSSubscriberModule.html</anchorfile>
      <anchor>ga01b88b6959e687c3a7109991478e4b38</anchor>
      <arglist>(const struct DDS_SubscriberQos *self, const struct DDS_SubscriberQos *other)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataReaderQos</type>
      <name>DDS_DATAREADER_QOS_DEFAULT</name>
      <anchorfile>group__DDSSubscriberModule.html</anchorfile>
      <anchor>gabf8d3b7aa9e72443354af9aa5bc02f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataReaderQos</type>
      <name>DDS_DATAREADER_QOS_USE_TOPIC_QOS</name>
      <anchorfile>group__DDSSubscriberModule.html</anchorfile>
      <anchor>ga3aa2b2c70744b7437555af2384ef0ec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReaderModule</name>
    <title>DataReaders</title>
    <filename>group__DDSReaderModule.html</filename>
    <subgroup>DDSReadConditionModule</subgroup>
    <subgroup>DDSQueryConditionModule</subgroup>
    <class kind="struct">DDS_RequestedDeadlineMissedStatus</class>
    <class kind="struct">DDS_LivelinessChangedStatus</class>
    <class kind="struct">DDS_RequestedIncompatibleQosStatus</class>
    <class kind="struct">DDS_SampleLostStatus</class>
    <class kind="struct">DDS_SampleRejectedStatus</class>
    <class kind="struct">DDS_SubscriptionMatchedStatus</class>
    <class kind="struct">DDS_DataReaderCacheStatus</class>
    <class kind="struct">DDS_DataReaderProtocolStatus</class>
    <class kind="struct">DDS_DataReaderQos</class>
    <class kind="class">FooDataReader</class>
    <class kind="class">DDSDataReaderSeq</class>
    <class kind="class">DDSDataReaderListener</class>
    <class kind="class">DDSDataReader</class>
    <member kind="enumeration">
      <name>DDS_SampleLostStatusKind</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gad50b30818f1c22476283f3dd114a1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_LOST</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a88a29dec42ddfe8b5346325eac2432e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_WRITER</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a2764ab3932dd5f738b64d6b79208dd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_INSTANCES_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a95ee9a6704748fcce62715ba272f360e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_REMOTE_WRITERS_PER_INSTANCE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a301989c14fc416e42d5e1327e4eacdc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_INCOMPLETE_COHERENT_SET</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834aaa89fc62dc45b57fef0794a9140b5034</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_LARGE_COHERENT_SET</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a55aefe07aa3d87f04d25f13e35d6389f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_SAMPLES_PER_REMOTE_WRITER_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a14822d440742f69e4b386006bf97717f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_VIRTUAL_WRITERS_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a7c2e169e733580e9b0952677ec5ed804</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_REMOTE_WRITERS_PER_SAMPLE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a9d1aeffb37364cf20ffcae72f9a28dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_AVAILABILITY_WAITING_TIME</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834aa44d2f74c38e1e9b5636609bc7c7944f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_REMOTE_WRITER_SAMPLES_PER_VIRTUAL_QUEUE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a7bfdbf1173b8b6b67aa2f2d51fed6091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOST_BY_OUT_OF_MEMORY</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ggad50b30818f1c22476283f3dd114a1834a0c3528b082cd0e44375323ae11500abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_SampleRejectedStatusKind</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>ga08df559babd09ceefcd351b2cb6876f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_REJECTED</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1ae371624e8cee89be655a853a3107fb35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_INSTANCES_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1a0dab8798e087551400c60a82a42ce02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_SAMPLES_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1ad17f50fcc59ea3b9decd493227f6d1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_SAMPLES_PER_INSTANCE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1aab6c983268ca4dd0520e6705156197b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_REMOTE_WRITERS_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1ac318063c4701ef9d3f77becafd075c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_REMOTE_WRITERS_PER_INSTANCE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1a3da6690a19e97fa66a68e5c2edb4c85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_SAMPLES_PER_REMOTE_WRITER_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1a98f2efea03af4d0aecfa356b01e91789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_VIRTUAL_WRITERS_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1a01aac2f41faf7a44e24e0d6354f8bd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_REMOTE_WRITERS_PER_SAMPLE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1a285dc1adf73ff5a401d66a684ded45f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REJECTED_BY_REMOTE_WRITER_SAMPLES_PER_VIRTUAL_QUEUE_LIMIT</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gga08df559babd09ceefcd351b2cb6876f1a6f37ba9431ba961c48483d935d9e77c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_DataReaderQos_equals</name>
      <anchorfile>group__DDSReaderModule.html</anchorfile>
      <anchor>gab31248e90a8e3e031540a62dc991f424</anchor>
      <arglist>(const struct DDS_DataReaderQos *self, const struct DDS_DataReaderQos *other)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReadConditionModule</name>
    <title>Read Conditions</title>
    <filename>group__DDSReadConditionModule.html</filename>
    <class kind="class">DDSReadCondition</class>
  </compound>
  <compound kind="group">
    <name>DDSQueryConditionModule</name>
    <title>Query Conditions</title>
    <filename>group__DDSQueryConditionModule.html</filename>
    <class kind="class">DDSQueryCondition</class>
  </compound>
  <compound kind="group">
    <name>DDSDataSampleModule</name>
    <title>Data Samples</title>
    <filename>group__DDSDataSampleModule.html</filename>
    <subgroup>DDSSampleStateModule</subgroup>
    <subgroup>DDSViewStateModule</subgroup>
    <subgroup>DDSInstanceStateModule</subgroup>
    <class kind="struct">DDS_SampleInfo</class>
    <class kind="struct">DDS_SampleInfoSeq</class>
    <member kind="function">
      <type>void</type>
      <name>DDS_SampleInfo_get_sample_identity</name>
      <anchorfile>group__DDSDataSampleModule.html</anchorfile>
      <anchor>ga40ea3fb738ce1484de028939511df773</anchor>
      <arglist>(const struct DDS_SampleInfo *self, struct DDS_SampleIdentity_t *identity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_SampleInfo_get_related_sample_identity</name>
      <anchorfile>group__DDSDataSampleModule.html</anchorfile>
      <anchor>gaace467875b6161c56c5e511f35a4ae16</anchor>
      <arglist>(const struct DDS_SampleInfo *self, struct DDS_SampleIdentity_t *related_identity)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSampleStateModule</name>
    <title>Sample States</title>
    <filename>group__DDSSampleStateModule.html</filename>
    <member kind="typedef">
      <type>DDS_UnsignedLong</type>
      <name>DDS_SampleStateMask</name>
      <anchorfile>group__DDSSampleStateModule.html</anchorfile>
      <anchor>ga00cf17a2dec95fc16ffd02c57ef356f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_SampleStateKind</name>
      <anchorfile>group__DDSSampleStateModule.html</anchorfile>
      <anchor>gadb6d36e7c796da27519b6bf7f8f187e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_READ_SAMPLE_STATE</name>
      <anchorfile>group__DDSSampleStateModule.html</anchorfile>
      <anchor>ggadb6d36e7c796da27519b6bf7f8f187e5a4435d5fd0a36806ebd1c67210345a70b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_READ_SAMPLE_STATE</name>
      <anchorfile>group__DDSSampleStateModule.html</anchorfile>
      <anchor>ggadb6d36e7c796da27519b6bf7f8f187e5a2a3ec923ec261c0c5e50141223f20ee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_SampleStateMask</type>
      <name>DDS_ANY_SAMPLE_STATE</name>
      <anchorfile>group__DDSSampleStateModule.html</anchorfile>
      <anchor>ga11d38d04270435d289d164f223e12ae8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSViewStateModule</name>
    <title>View States</title>
    <filename>group__DDSViewStateModule.html</filename>
    <member kind="typedef">
      <type>DDS_UnsignedLong</type>
      <name>DDS_ViewStateMask</name>
      <anchorfile>group__DDSViewStateModule.html</anchorfile>
      <anchor>gac6c18247f611af71486839446604e18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_ViewStateKind</name>
      <anchorfile>group__DDSViewStateModule.html</anchorfile>
      <anchor>gab7a8a4ae44a2c00f411a4461135b45f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NEW_VIEW_STATE</name>
      <anchorfile>group__DDSViewStateModule.html</anchorfile>
      <anchor>ggab7a8a4ae44a2c00f411a4461135b45f1aa16318472ac7f2368d08c969c0e6efef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_NEW_VIEW_STATE</name>
      <anchorfile>group__DDSViewStateModule.html</anchorfile>
      <anchor>ggab7a8a4ae44a2c00f411a4461135b45f1ad0a3502068e5e66e20a873a0aaa881be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_ViewStateMask</type>
      <name>DDS_ANY_VIEW_STATE</name>
      <anchorfile>group__DDSViewStateModule.html</anchorfile>
      <anchor>ga5b8ea06fe00397fcbd7b7e1e48631bfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSInstanceStateModule</name>
    <title>Instance States</title>
    <filename>group__DDSInstanceStateModule.html</filename>
    <member kind="typedef">
      <type>DDS_UnsignedLong</type>
      <name>DDS_InstanceStateMask</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>ga4ded4022b3281636f4fbee19aab2844f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_InstanceStateKind</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>gaf2264cae1aa8cd66490debfdc5e0c360</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ALIVE_INSTANCE_STATE</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>ggaf2264cae1aa8cd66490debfdc5e0c360a093477a56893c9f6e94fb620a52e06c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_ALIVE_DISPOSED_INSTANCE_STATE</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>ggaf2264cae1aa8cd66490debfdc5e0c360a51e7b0651e135e656327002e41787dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_ALIVE_NO_WRITERS_INSTANCE_STATE</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>ggaf2264cae1aa8cd66490debfdc5e0c360a72ebdc6f53c9a7588458b48e3ea66507</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_InstanceStateMask</type>
      <name>DDS_ANY_INSTANCE_STATE</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>gac3192dece9f811c8660bc108cb392642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_InstanceStateMask</type>
      <name>DDS_NOT_ALIVE_INSTANCE_STATE</name>
      <anchorfile>group__DDSInstanceStateModule.html</anchorfile>
      <anchor>gacd85e2aea1217b1037c221f917902827</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSInfrastructureModule</name>
    <title>Infrastructure Module</title>
    <filename>group__DDSInfrastructureModule.html</filename>
    <subgroup>NDDSClockSelectionModule</subgroup>
    <subgroup>DDSTimeSupportModule</subgroup>
    <subgroup>DDSGUIDSupportModule</subgroup>
    <subgroup>DDSSequenceNumberSupportModule</subgroup>
    <subgroup>DDSExceptionTypesModule</subgroup>
    <subgroup>DDSReturnTypesModule</subgroup>
    <subgroup>DDSStatusTypesModule</subgroup>
    <subgroup>DDSQosTypesModule</subgroup>
    <subgroup>DDSEntityModule</subgroup>
    <subgroup>DDSConditionsModule</subgroup>
    <subgroup>DDSCookieModule</subgroup>
    <subgroup>DDSSampleFlagModule</subgroup>
    <subgroup>DDSWriteParamsModule</subgroup>
    <subgroup>DDSHeapClass</subgroup>
    <subgroup>DDSBuiltinQosProfilesModule</subgroup>
    <subgroup>DDSUserManagedThreadModule</subgroup>
    <subgroup>DDSOctetBufferClass</subgroup>
    <subgroup>DDSSequenceModule</subgroup>
    <subgroup>DDSStringClass</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSBuiltinSequenceModule</name>
    <title>Built-in Sequences</title>
    <filename>group__DDSBuiltinSequenceModule.html</filename>
    <class kind="struct">DDS_CharSeq</class>
    <class kind="struct">DDS_WcharSeq</class>
    <class kind="struct">DDS_OctetSeq</class>
    <class kind="struct">DDS_ShortSeq</class>
    <class kind="struct">DDS_UnsignedShortSeq</class>
    <class kind="struct">DDS_LongSeq</class>
    <class kind="struct">DDS_UnsignedLongSeq</class>
    <class kind="struct">DDS_LongLongSeq</class>
    <class kind="struct">DDS_UnsignedLongLongSeq</class>
    <class kind="struct">DDS_FloatSeq</class>
    <class kind="struct">DDS_DoubleSeq</class>
    <class kind="struct">DDS_LongDoubleSeq</class>
    <class kind="struct">DDS_BooleanSeq</class>
    <class kind="struct">DDS_StringSeq</class>
    <class kind="struct">DDS_WstringSeq</class>
  </compound>
  <compound kind="group">
    <name>NDDSMultichannelConfigurationModule</name>
    <title>Multi-channel DataWriters</title>
    <filename>group__NDDSMultichannelConfigurationModule.html</filename>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriter</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterWriterConfiguration</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReaderConfiguration</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReliability</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReliableDelivery</docanchor>
    <docanchor file="group__NDDSMultichannelConfigurationModule">MultiChannelDataWriterReliableProtocol</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSTransportModule</name>
    <title>Pluggable Transports</title>
    <filename>group__NDDSTransportModule.html</filename>
    <subgroup>NDDSTransportUserModule</subgroup>
    <subgroup>NDDS_TransportBuiltinsComponent</subgroup>
    <subgroup>NDDS_Transport_ClassId_t</subgroup>
    <subgroup>NDDS_Transport_Address_t</subgroup>
    <subgroup>NDDS_Transport_Property_t</subgroup>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_overview</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_aliases</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_lifecycle</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_class_attributes</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_instance_attributes</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_net_address</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_send_route</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_send_route_table</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_recv_route</docanchor>
    <docanchor file="group__NDDSTransportModule">NDDSTransportModule_receive_route_table</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSTransportUserModule</name>
    <title>Using Transport Plugins</title>
    <filename>group__NDDSTransportUserModule.html</filename>
    <class kind="class">NDDSTransportSupport</class>
    <member kind="typedef">
      <type>NDDS_TRANSPORT_HANDLE_TYPE_NATIVE</type>
      <name>NDDS_Transport_Handle_t</name>
      <anchorfile>group__NDDSTransportUserModule.html</anchorfile>
      <anchor>ga813e01b7907c1a1a89a46f2c422c513c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>NDDS_Transport_Plugin *(*</type>
      <name>NDDS_Transport_create_plugin</name>
      <anchorfile>group__NDDSTransportUserModule.html</anchorfile>
      <anchor>gadc104003409a3caf403b254f58a04dc4</anchor>
      <arglist>)(NDDS_Transport_Address_t *default_network_address_out, const struct DDS_PropertyQosPolicy *property_in)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>NDDS_Transport_Handle_is_nil</name>
      <anchorfile>group__NDDSTransportUserModule.html</anchorfile>
      <anchor>ga20f6bc00d0424e6a52a13fc038879d96</anchor>
      <arglist>(const NDDS_Transport_Handle_t *self)</arglist>
    </member>
    <member kind="variable">
      <type>const NDDS_Transport_Handle_t</type>
      <name>NDDS_TRANSPORT_HANDLE_NIL</name>
      <anchorfile>group__NDDSTransportUserModule.html</anchorfile>
      <anchor>ga5974d95978594b2aa24a893e03d2aa98</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__NDDSTransportUserModule">NDDSTransportLoadPluginModule</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDS_TransportBuiltinsComponent</name>
    <title>Built-in Transport Plugins</title>
    <filename>group__NDDS__TransportBuiltinsComponent.html</filename>
    <subgroup>NDDS_Transport_Shmem_Plugin</subgroup>
    <subgroup>NDDS_Transport_UDPv4_Plugin</subgroup>
    <subgroup>NDDS_Transport_UDPv6_Plugin</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSQueryAndFilterSyntaxModule</name>
    <title>Queries and Filters Syntax</title>
    <filename>group__DDSQueryAndFilterSyntaxModule.html</filename>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">query_and_filter_syntax</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">sql_grammar_in_BNF</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">token_expression</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">string_parameters</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">type_compatibility</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">sql_extension</docanchor>
    <docanchor file="group__DDSQueryAndFilterSyntaxModule">query_and_filter_example</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSConfigModule</name>
    <title>Configuration Utilities</title>
    <filename>group__NDDSConfigModule.html</filename>
    <class kind="struct">NDDS_Config_LibraryVersion_t</class>
    <class kind="struct">NDDS_Config_LogMessage</class>
    <class kind="class">NDDSConfigVersion</class>
    <class kind="class">NDDSConfigLoggerDevice</class>
    <class kind="class">NDDSConfigLogger</class>
    <member kind="enumeration">
      <name>NDDS_Config_LogVerbosity</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gab65f708dd2c1ed3c91a0a65f56a5519e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_VERBOSITY_SILENT</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ggab65f708dd2c1ed3c91a0a65f56a5519eabb9aecd88fd517578288a43d8bfaee57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_VERBOSITY_ERROR</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ggab65f708dd2c1ed3c91a0a65f56a5519eacd514c7f202a952b6e151a4115a6cccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_VERBOSITY_WARNING</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ggab65f708dd2c1ed3c91a0a65f56a5519ea63593b54ce38e6f8f32cd90e4c1f15ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_VERBOSITY_STATUS_LOCAL</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ggab65f708dd2c1ed3c91a0a65f56a5519ea4dbc4858512a642c6539510d4c1d1bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_VERBOSITY_STATUS_REMOTE</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ggab65f708dd2c1ed3c91a0a65f56a5519ea34da00c0129930d5ae537047d3bc481c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_VERBOSITY_STATUS_ALL</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ggab65f708dd2c1ed3c91a0a65f56a5519eaf5422b9910c7186c0f80bd2825a03b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>NDDS_Config_LogLevel</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga0e1442a7921930bb66ba4781d5c14b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_LEVEL_ERROR</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0e1442a7921930bb66ba4781d5c14b8cafd8590876039c1a17b1750bb7957b903</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_LEVEL_WARNING</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0e1442a7921930bb66ba4781d5c14b8ca5f43fca49117000dabf9f453af5df9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_LEVEL_STATUS_LOCAL</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0e1442a7921930bb66ba4781d5c14b8cacdf19fc8e70a7294315e1ea810a8893e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_LEVEL_STATUS_REMOTE</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0e1442a7921930bb66ba4781d5c14b8ca4bd6a71002ca87d4da7262d9c5599749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_LEVEL_DEBUG</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0e1442a7921930bb66ba4781d5c14b8ca55c36c1d9cb4b85eba290165354d82be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>NDDS_Config_LogCategory</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga0dc7a2e7732c84c86007758cc098f092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_CATEGORY_PLATFORM</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0dc7a2e7732c84c86007758cc098f092a6bd61c22787d582f41b9f5ea8b93052e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_CATEGORY_COMMUNICATION</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0dc7a2e7732c84c86007758cc098f092a60267c3774c038bae82502d01b177614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_CATEGORY_DATABASE</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0dc7a2e7732c84c86007758cc098f092a4f8e07568702e7b7046fcad68cf820eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_CATEGORY_ENTITIES</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0dc7a2e7732c84c86007758cc098f092a9bf1375102ba65eb8bd25f7b8ad9d2fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_CATEGORY_API</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga0dc7a2e7732c84c86007758cc098f092a7e071c90e86cbf28a61ab935f37f5364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>NDDS_Config_LogPrintFormat</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>ga064329f9436dae5346b9af17c8dde1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_DEFAULT</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2ac5c16a987c545e3b25f783dadb37de0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_TIMESTAMPED</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2a52c1aa5f777f01dc55238f42c30b4e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_VERBOSE</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2a550b13ac1000ca850969d3a8d79c7a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_VERBOSE_TIMESTAMPED</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2a99caa67be6ae4885883be5753befcd5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_DEBUG</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2a8c4fb1d73d0059b64826fa77f39c5d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_MINIMAL</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2a23e6c263d416955a60597f29eac5a233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NDDS_CONFIG_LOG_PRINT_FORMAT_MAXIMAL</name>
      <anchorfile>group__NDDSConfigModule.html</anchorfile>
      <anchor>gga064329f9436dae5346b9af17c8dde1c2a24515c5ba769b2c01706a3fc7466919c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDSUtilityModule</name>
    <title>Unsupported Utilities</title>
    <filename>group__NDDSUtilityModule.html</filename>
    <class kind="class">NDDSUtility</class>
  </compound>
  <compound kind="group">
    <name>RequestReplyModule</name>
    <title>Request-Reply Pattern</title>
    <filename>group__RequestReplyModule.html</filename>
    <subgroup>RequesterModule</subgroup>
    <subgroup>ReplierModule</subgroup>
  </compound>
  <compound kind="group">
    <name>RequesterModule</name>
    <title>Requester</title>
    <filename>group__RequesterModule.html</filename>
    <class kind="class">connext::Requester</class>
    <class kind="class">connext::RequesterParams</class>
  </compound>
  <compound kind="group">
    <name>ReplierModule</name>
    <title>Replier</title>
    <filename>group__ReplierModule.html</filename>
    <class kind="class">connext::Replier</class>
    <class kind="class">connext::SimpleReplierListener</class>
    <class kind="class">connext::ReplierListener</class>
    <class kind="class">connext::ReplierParams</class>
    <class kind="class">connext::SimpleReplierParams</class>
    <class kind="class">connext::SimpleReplier</class>
  </compound>
  <compound kind="group">
    <name>PatternsInfrastructureModule</name>
    <title>Infrastructure</title>
    <filename>group__PatternsInfrastructureModule.html</filename>
    <subgroup>PatternsExceptionsModule</subgroup>
    <class kind="class">connext::Sample</class>
    <class kind="class">connext::SampleRef</class>
    <class kind="class">connext::WriteSample</class>
    <class kind="class">connext::WriteSampleRef</class>
    <class kind="class">connext::IsValidSamplePredicate</class>
    <class kind="class">connext::IsInvalidSamplePredicate</class>
    <class kind="class">connext::IsReplyRelatedPredicate</class>
    <class kind="class">connext::SampleIterator</class>
    <class kind="class">connext::LoanedSamples</class>
    <class kind="struct">connext::LoanedSamples::LoanMemento</class>
    <member kind="function">
      <type>ValidSampleIterator&lt; T, IsConst &gt;</type>
      <name>make_valid_sample_iterator</name>
      <anchorfile>group__PatternsInfrastructureModule.html</anchorfile>
      <anchor>gaefbcb6527223532eaf4dcc6ae0a84062</anchor>
      <arglist>(SampleIterator&lt; T, IsConst &gt; related_iterator)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; T &gt;</type>
      <name>move</name>
      <anchorfile>group__PatternsInfrastructureModule.html</anchorfile>
      <anchor>ga2c4101d5790f44a9da3af0c1159d4c4e</anchor>
      <arglist>(LoanedSamples&lt; T &gt; &amp;ls)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>QueuingModule</name>
    <title>Queuing Pattern</title>
    <filename>group__QueuingModule.html</filename>
    <subgroup>QueueProducerModule</subgroup>
    <subgroup>QueueConsumerModule</subgroup>
    <subgroup>QueueRequesterModule</subgroup>
    <subgroup>QueueReplierModule</subgroup>
  </compound>
  <compound kind="group">
    <name>QueueProducerModule</name>
    <title>QueueProducer</title>
    <filename>group__QueueProducerModule.html</filename>
  </compound>
  <compound kind="group">
    <name>QueueConsumerModule</name>
    <title>QueueConsumer</title>
    <filename>group__QueueConsumerModule.html</filename>
  </compound>
  <compound kind="group">
    <name>QueueRequesterModule</name>
    <title>QueueRequester</title>
    <filename>group__QueueRequesterModule.html</filename>
  </compound>
  <compound kind="group">
    <name>QueueReplierModule</name>
    <title>QueueReplier</title>
    <filename>group__QueueReplierModule.html</filename>
  </compound>
  <compound kind="group">
    <name>NDDSDurabilityAndPersistenceModule</name>
    <title>Durability and Persistence</title>
    <filename>group__NDDSDurabilityAndPersistenceModule.html</filename>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableWriterHistory</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableReaderState</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDataDurability</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSVirtualGuid</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableWriterConfiguration</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDurableReaderConfiguration</docanchor>
    <docanchor file="group__NDDSDurabilityAndPersistenceModule">NDDSDataDurabilityConfiguration</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSSystemPropertiesModule</name>
    <title>System Properties</title>
    <filename>group__NDDSSystemPropertiesModule.html</filename>
    <docanchor file="group__NDDSSystemPropertiesModule">NDDSSystemPropertiesList</docanchor>
    <docanchor file="group__NDDSSystemPropertiesModule">NDDSSystemPropertiesResources</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSXmlConfigurationModule</name>
    <title>Configuring QoS Profiles with XML</title>
    <filename>group__NDDSXmlConfigurationModule.html</filename>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLResourceConfiguration</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLUrl</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLUrlGroups</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">XMLEnvironmentVariable</docanchor>
    <docanchor file="group__NDDSXmlConfigurationModule">BuiltinQoSProfiles</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSProducerExampleModule</name>
    <title>Publication Example</title>
    <filename>group__DDSProducerExampleModule.html</filename>
    <docanchor file="group__DDSProducerExampleModule">DDSProducerExampleModule_publication</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSConsumerExampleModule</name>
    <title>Subscription Example</title>
    <filename>group__DDSConsumerExampleModule.html</filename>
    <docanchor file="group__DDSConsumerExampleModule">DDSConsumerExampleModule_subscription</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSParticipantExampleModule</name>
    <title>Participant Use Cases</title>
    <filename>group__DDSParticipantExampleModule.html</filename>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_no_autoenable</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_factory</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_setup</docanchor>
    <docanchor file="group__DDSParticipantExampleModule">DDSParticipantExampleModule_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSTopicExampleModule</name>
    <title>Topic Use Cases</title>
    <filename>group__DDSTopicExampleModule.html</filename>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_registertype</docanchor>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_setup</docanchor>
    <docanchor file="group__DDSTopicExampleModule">DDSTopicExampleModule_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSFlowControllerExampleModule</name>
    <title>FlowController Use Cases</title>
    <filename>group__DDSFlowControllerExampleModule.html</filename>
    <docanchor file="group__DDSFlowControllerExampleModule">DDSFlowControllerExampleModule_setup</docanchor>
    <docanchor file="group__DDSFlowControllerExampleModule">DDSFlowControllerExampleModule_using</docanchor>
    <docanchor file="group__DDSFlowControllerExampleModule">DDSFlowControllerExampleModule_builtin</docanchor>
    <docanchor file="group__DDSFlowControllerExampleModule">DDSFlowControllerExampleModule_trafficing</docanchor>
    <docanchor file="group__DDSFlowControllerExampleModule">DDSFlowControllerExampleModule_coalescing</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSPublisherExampleModule</name>
    <title>Publisher Use Cases</title>
    <filename>group__DDSPublisherExampleModule.html</filename>
    <docanchor file="group__DDSPublisherExampleModule">DDSPublisherExampleModule_publisher_setup</docanchor>
    <docanchor file="group__DDSPublisherExampleModule">DDSPublisherExampleModule_publisher_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSWriterExampleModule</name>
    <title>DataWriter Use Cases</title>
    <filename>group__DDSWriterExampleModule.html</filename>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_writer_setup</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_writer_instances</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_send</docanchor>
    <docanchor file="group__DDSWriterExampleModule">DDSWriterExampleModule_writer_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSSubscriberExampleModule</name>
    <title>Subscriber Use Cases</title>
    <filename>group__DDSSubscriberExampleModule.html</filename>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_subscriber_setup</docanchor>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_receive_setup</docanchor>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_receive</docanchor>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_receive_ordered</docanchor>
    <docanchor file="group__DDSSubscriberExampleModule">DDSSubscriberExampleModule_subscriber_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSReaderExampleModule</name>
    <title>DataReader Use Cases</title>
    <filename>group__DDSReaderExampleModule.html</filename>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_setup</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_instances</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_receive_setup</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_receive</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_take</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_read</docanchor>
    <docanchor file="group__DDSReaderExampleModule">DDSReaderExampleModule_reader_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSEntityExampleModule</name>
    <title>Entity Use Cases</title>
    <filename>group__DDSEntityExampleModule.html</filename>
    <docanchor file="group__DDSEntityExampleModule">DDSEntityExampleModule_enable</docanchor>
    <docanchor file="group__DDSEntityExampleModule">DDSEntityExampleModule_status_changes</docanchor>
    <docanchor file="group__DDSEntityExampleModule">DDSEntityExampleModule_qos</docanchor>
    <docanchor file="group__DDSEntityExampleModule">DDSEntityExampleModule_listener</docanchor>
    <docanchor file="group__DDSEntityExampleModule">DDSEntityExampleModule_statuscondition</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSWaitsetExampleModule</name>
    <title>Waitset Use Cases</title>
    <filename>group__DDSWaitsetExampleModule.html</filename>
    <docanchor file="group__DDSWaitsetExampleModule">DDSWaitsetExampleModule_setup</docanchor>
    <docanchor file="group__DDSWaitsetExampleModule">DDSWaitsetExampleModule_trigger</docanchor>
    <docanchor file="group__DDSWaitsetExampleModule">DDSWaitsetExampleModule_teardown</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSTransportExampleModule</name>
    <title>Transport Use Cases</title>
    <filename>group__NDDSTransportExampleModule.html</filename>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_change_builtin</docanchor>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_change_builtin_properties</docanchor>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_create_transport</docanchor>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_delete_transport</docanchor>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_setup</docanchor>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_recv_route</docanchor>
    <docanchor file="group__NDDSTransportExampleModule">NDDSTransportExampleModule_send_route</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSFilterExampleModule</name>
    <title>Filter Use Cases</title>
    <filename>group__NDDSFilterExampleModule.html</filename>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_intro</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_CFT_overview</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_QC_overview</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_content_filtered_topic</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_query_conditions</docanchor>
    <docanchor file="group__NDDSFilterExampleModule">NDDSFilterExampleModule_performance</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDSCustomFilterExampleModule</name>
    <title>Creating Custom Content Filters</title>
    <filename>group__NDDSCustomFilterExampleModule.html</filename>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_intro</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_anatomy</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_compile</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_evaluate</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_finalize</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_using_c_format</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_using_c_format_compile</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_using_c_format_evaluate</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_using_c_format_finalize</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_using_c_format_register</docanchor>
    <docanchor file="group__NDDSCustomFilterExampleModule">NDDSCustomFilterExampleModule_using_c_format_unregister</docanchor>
  </compound>
  <compound kind="group">
    <name>LargeDataExampleModule</name>
    <title>Large Data Use Cases</title>
    <filename>group__LargeDataExampleModule.html</filename>
    <docanchor file="group__LargeDataExampleModule">LargeDataExampleModule_intro</docanchor>
    <docanchor file="group__LargeDataExampleModule">LargeDataExampleModule_writing_large_data</docanchor>
    <docanchor file="group__LargeDataExampleModule">LargeDataExampleModule_receiving_large_data</docanchor>
  </compound>
  <compound kind="group">
    <name>RequestReplyExampleModule</name>
    <title>Request-Reply Examples</title>
    <filename>group__RequestReplyExampleModule.html</filename>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_requestreply</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_requester_create</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_requester_create_w_params</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_requester_basic</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_get_loaned_samples</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_get_copied_samples</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_correlation</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_requester_sampleref</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_replier_create</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_replier_basic</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_simple_replier</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_error_handling</docanchor>
    <docanchor file="group__RequestReplyExampleModule">RequestReplyExampleModule_qos_profile</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSUserGuideModule</name>
    <title>Documentation Roadmap</title>
    <filename>group__DDSUserGuideModule.html</filename>
  </compound>
  <compound kind="group">
    <name>DDSDocGuideModule</name>
    <title>Conventions</title>
    <filename>group__DDSDocGuideModule.html</filename>
    <docanchor file="group__DDSDocGuideModule">doc_guide_support</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_naming</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_naming_structs</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_doxygen</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_stereotypes</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_stereotypes_Extensions</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_ext</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_stereotypes_Experimental</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_exp</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_stereotypes_Types</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_interface</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_generic</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_singleton</docanchor>
    <docanchor file="group__DDSDocGuideModule">doc_guide_stereotypes_methods</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_in</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_out</docanchor>
    <docanchor file="group__DDSDocGuideModule">a_st_inout</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSNamespaceModule</name>
    <title>Using DDS:: Namespace</title>
    <filename>group__DDSNamespaceModule.html</filename>
    <docanchor file="group__DDSNamespaceModule">namespace_guide_naming</docanchor>
    <docanchor file="group__DDSNamespaceModule">primitive_type_namespace</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSDcpsModule</name>
    <title>RTI Connext DDS API Reference</title>
    <filename>group__DDSDcpsModule.html</filename>
    <subgroup>DDSDomainModule</subgroup>
    <subgroup>DDSTopicModule</subgroup>
    <subgroup>DDSPublicationModule</subgroup>
    <subgroup>DDSSubscriptionModule</subgroup>
    <subgroup>DDSInfrastructureModule</subgroup>
    <subgroup>NDDSTransportModule</subgroup>
    <subgroup>DDSQueryAndFilterSyntaxModule</subgroup>
    <subgroup>NDDSConfigModule</subgroup>
    <subgroup>NDDSUtilityModule</subgroup>
    <subgroup>NDDSDurabilityAndPersistenceModule</subgroup>
    <subgroup>NDDSSystemPropertiesModule</subgroup>
    <subgroup>NDDSXmlConfigurationModule</subgroup>
    <subgroup>PatternsApiModule</subgroup>
    <docanchor file="group__DDSDcpsModule">DDSDcps_overview</docanchor>
    <docanchor file="group__DDSDcpsModule">DDSDcps_model</docanchor>
    <docanchor file="group__DDSDcpsModule">DDSDcps_packages</docanchor>
  </compound>
  <compound kind="group">
    <name>PatternsApiModule</name>
    <title>RTI Connext Messaging API Reference</title>
    <filename>group__PatternsApiModule.html</filename>
    <subgroup>RequestReplyModule</subgroup>
    <subgroup>PatternsInfrastructureModule</subgroup>
    <subgroup>QueuingModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSHowToModule</name>
    <title>Programming How-To&apos;s</title>
    <filename>group__DDSHowToModule.html</filename>
    <subgroup>DDSProducerExampleModule</subgroup>
    <subgroup>DDSConsumerExampleModule</subgroup>
    <subgroup>DDSParticipantExampleModule</subgroup>
    <subgroup>DDSTopicExampleModule</subgroup>
    <subgroup>DDSFlowControllerExampleModule</subgroup>
    <subgroup>DDSPublisherExampleModule</subgroup>
    <subgroup>DDSWriterExampleModule</subgroup>
    <subgroup>DDSSubscriberExampleModule</subgroup>
    <subgroup>DDSReaderExampleModule</subgroup>
    <subgroup>DDSEntityExampleModule</subgroup>
    <subgroup>DDSWaitsetExampleModule</subgroup>
    <subgroup>NDDSTransportExampleModule</subgroup>
    <subgroup>NDDSFilterExampleModule</subgroup>
    <subgroup>NDDSCustomFilterExampleModule</subgroup>
    <subgroup>LargeDataExampleModule</subgroup>
    <subgroup>RequestReplyExampleModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSToolModule</name>
    <title>Programming Tools</title>
    <filename>group__DDSToolModule.html</filename>
    <subgroup>DDSNddsgenModule</subgroup>
    <subgroup>DDSNddspingModule</subgroup>
    <subgroup>DDSNddsspyModule</subgroup>
  </compound>
  <compound kind="group">
    <name>DDSNddsgenModule</name>
    <title>rtiddsgen</title>
    <filename>group__DDSNddsgenModule.html</filename>
    <docanchor file="group__DDSNddsgenModule">Usage</docanchor>
    <docanchor file="group__DDSNddsgenModule">a_rtiddsgen_language_option</docanchor>
    <docanchor file="group__DDSNddsgenModule">Description</docanchor>
    <docanchor file="group__DDSNddsgenModule">CPPExample</docanchor>
    <docanchor file="group__DDSNddsgenModule">IDLLanguage</docanchor>
    <docanchor file="group__DDSNddsgenModule">XMLLanguage</docanchor>
    <docanchor file="group__DDSNddsgenModule">Standalone</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSNddspingModule</name>
    <title>rtiddsping</title>
    <filename>group__DDSNddspingModule.html</filename>
  </compound>
  <compound kind="group">
    <name>DDSNddsspyModule</name>
    <title>rtiddsspy</title>
    <filename>group__DDSNddsspyModule.html</filename>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_ClassId_t</name>
    <title>Class Id</title>
    <filename>group__NDDS__Transport__ClassId__t.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_INVALID</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga8efd354afca81cfb0316b26bd5a3b0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_DTLS</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaa9475cd64622efaa6cab5d61ec1aa71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaf85fdd5e31279ee00a25f83901c43472</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TCPV4_LAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga7dad1954eb64c8c234f85d298ed21965</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TCPV4_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaa5adf7348c32089e3080b0a8faa4a58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSNAME_TCPV4_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gada4dfd5428c5d7b864e507679d892a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TLSV4_LAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga7e8dfdb798b6de440c5afa28ee0a2d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_TLSV4_WAN</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga5f7601d31b7d72528a2754407ce170c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_PCIE</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gaf073d9a74e0b09099bca4e306ef6639f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_ITP</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga98960ae0b5c7536b493794e730dd3a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_RESERVED_RANGE</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>ga8ee9872476ea317426a43836ea847bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_ClassId_t</name>
      <anchorfile>group__NDDS__Transport__ClassId__t.html</anchorfile>
      <anchor>gae693c14746a142d41452bf4911fd923a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_Address_t</name>
    <title>Address</title>
    <filename>group__NDDS__Transport__Address__t.html</filename>
    <class kind="struct">NDDS_Transport_Address_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_ADDRESS_INVALID</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga1dc33ff13f6cc78ccd6425bc4f5d90f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_ADDRESS_STRING_BUFFER_SIZE</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga0a4aa417eadb52b891ebc3f9b7cf5321</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_to_string</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>gaa1d7b053383690a4871581d7674a7c91</anchor>
      <arglist>(const NDDS_Transport_Address_t *self, char *buffer_inout, RTI_INT32 buffer_length_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_from_string</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga6570d1fc049815b44016961024894cbc</anchor>
      <arglist>(NDDS_Transport_Address_t *address_out, const char *address_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NDDS_Transport_Address_print</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>gab99006a5001f216c1e83e8012fb470b8</anchor>
      <arglist>(const NDDS_Transport_Address_t *address_in, const char *desc_in, RTI_INT32 indent_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_is_ipv4</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>ga6221ab12bfe74d8a3e47415725cd414d</anchor>
      <arglist>(const NDDS_Transport_Address_t *address_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_Address_is_multicast</name>
      <anchorfile>group__NDDS__Transport__Address__t.html</anchorfile>
      <anchor>gaa3c4206d0aa1669b08e84fdff0a41768</anchor>
      <arglist>(const NDDS_Transport_Address_t *address_in)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_Property_t</name>
    <title>Attributes</title>
    <filename>group__NDDS__Transport__Property__t.html</filename>
    <class kind="struct">NDDS_Transport_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_PROPERTY_BIT_BUFFER_ALWAYS_LOANED</name>
      <anchorfile>group__NDDS__Transport__Property__t.html</anchorfile>
      <anchor>ga099cc5d8911cbf822b2885df441a7d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_PROPERTY_GATHER_SEND_BUFFER_COUNT_MIN</name>
      <anchorfile>group__NDDS__Transport__Property__t.html</anchorfile>
      <anchor>gac31e17a163368b00672a7fa8670304e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_Shmem_Plugin</name>
    <title>Shared Memory Transport</title>
    <filename>group__NDDS__Transport__Shmem__Plugin.html</filename>
    <class kind="struct">NDDS_Transport_Shmem_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_SHMEM</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga919ce9101d78fe359c03f813be2c6369</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_SHMEM_510</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga5e9cb36926742a006823c87911bc9bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_ADDRESS_BIT_COUNT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga35cfedd492afcf0252b31c8b98151278</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_PROPERTIES_BITMAP_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gae18a8a8166ece7b6e6370051acdcd987</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_GATHER_SEND_BUFFER_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gaf251fea27c4351dfb13f46c19a23f922</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_MESSAGE_SIZE_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gaf4b9589b7eb1e891a925af3f59eee51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_RECEIVED_MESSAGE_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gac5d6855abc3bcacebe67b0c221830d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_RECEIVE_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>gaf1826abf2f3c8fe2b16ebda60bdea22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_SHMEM_PROPERTY_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga65efdcaf595c921c233ac1b4febec582</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_Shmem_new</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga56bbb55e11d7fa68003cf3a5d9cc0c43</anchor>
      <arglist>(const struct NDDS_Transport_Shmem_Property_t *property_in)</arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_Shmem_create</name>
      <anchorfile>group__NDDS__Transport__Shmem__Plugin.html</anchorfile>
      <anchor>ga648b5f684c9fd09d9462935a8a0431f9</anchor>
      <arglist>(NDDS_Transport_Address_t *default_network_address_out, const struct DDS_PropertyQosPolicy *property_in)</arglist>
    </member>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_compatibility</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_crash</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_keys</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">ShmemTransport_register</docanchor>
    <docanchor file="group__NDDS__Transport__Shmem__Plugin">TransportSHMEMPropertyNameModule</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_UDPv4_Plugin</name>
    <title>UDPv4 Transport</title>
    <filename>group__NDDS__Transport__UDPv4__Plugin.html</filename>
    <class kind="struct">NDDS_Transport_UDPv4_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_UDPv4</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga7afaa46b01e74c8c5c726440d6efa056</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_ADDRESS_BIT_COUNT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>gac5e6793b609612a5a839d3f05b354b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_PROPERTIES_BITMAP_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga328d5f718791a81b0a4bcdac28f77ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_GATHER_SEND_BUFFER_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga65b9ad9f4f683066a0ea97befc085f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_SOCKET_BUFFER_SIZE_OS_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>gaeec49238b766ba44d3eec5a1c13359b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_SEND_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga516e6bd8029f30ea3ca2012901dc218f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_RECV_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga73e7bbacb030a7ac1d0b36041adaa5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_PAYLOAD_SIZE_MAX</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga0ebd7c6f96784bec4b53e09dbc2bfbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_MESSAGE_SIZE_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga6dee1bddde300ccc3d5afb8f8f4f1551</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_MULTICAST_TTL_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga8cf6485247268838cf7a32a90878087d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_BLOCKING_NEVER</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga63a6dad194cdf511cf38a6fabc12328d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_BLOCKING_ALWAYS</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga6a45b6ed6e90d2b535d988dda5a3282b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_BLOCKING_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga4ba5719417a579c9158e66e7fc4ce32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV4_PROPERTY_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga95428077c0c9307a8ca3f942e837666f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_UDPv4_new</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga43415754deca794f2970631f6b0f21fb</anchor>
      <arglist>(const struct NDDS_Transport_UDPv4_Property_t *property_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv4_string_to_address_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga81ae856667bd6e9e4ee452fdae951b6b</anchor>
      <arglist>(NDDS_Transport_Plugin *self, NDDS_Transport_Address_t *address_out, const char *address_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv4_get_receive_interfaces_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga8dbb284faa9502d7ac25156cb5122809</anchor>
      <arglist>(NDDS_Transport_Plugin *self, RTI_INT32 *found_more_than_provided_for_out, RTI_INT32 *interface_reported_count_out, NDDS_Transport_Interface_t interface_array_inout[], RTI_INT32 interface_array_size_in)</arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_UDPv4_create</name>
      <anchorfile>group__NDDS__Transport__UDPv4__Plugin.html</anchorfile>
      <anchor>ga3443eeacfd14ef3e225eadc2d41c24d7</anchor>
      <arglist>(NDDS_Transport_Address_t *default_network_address_out, const struct DDS_PropertyQosPolicy *property_in)</arglist>
    </member>
    <docanchor file="group__NDDS__Transport__UDPv4__Plugin">TransportUDPv4PropertyNameModule</docanchor>
  </compound>
  <compound kind="group">
    <name>NDDS_Transport_UDPv6_Plugin</name>
    <title>UDPv6 Transport</title>
    <filename>group__NDDS__Transport__UDPv6__Plugin.html</filename>
    <class kind="struct">NDDS_Transport_UDPv6_Property_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_UDPv6</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga004554cf2b01c232a1ef3c1bb098a6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_CLASSID_UDPv6_510</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga97d29855c5f177222291cf998713d7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_ADDRESS_BIT_COUNT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaa859beb339ce51eecad562e710cc1a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_PROPERTIES_BITMAP_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaac585139e9495a77605c986caad1735d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_GATHER_SEND_BUFFER_COUNT_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaf6621d4d965eea3c429690c1a6d82b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_SOCKET_BUFFER_SIZE_OS_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gada1885fcf4b44be38f5e2ebf553f24f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_SEND_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaedff34929be9f611877e133c74238d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_RECV_SOCKET_BUFFER_SIZE_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga8c9f6a74336af5885ff34fc72701d469</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_MESSAGE_SIZE_MAX_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gab06690762fd722e0885e7d3f1151a837</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_MULTICAST_TTL_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gaddbf125ade0e33e5c60e0b953452d591</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_BLOCKING_NEVER</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gab601035adf6fa11b207897f88afe4119</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_BLOCKING_ALWAYS</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gabb5064864b34809c954a44b4a277c2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDDS_TRANSPORT_UDPV6_PROPERTY_DEFAULT</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gad8528636a325708010826a4cdd532bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_UDPv6_new</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gad2a0af107bfda142d1b03f6f97b2c482</anchor>
      <arglist>(const struct NDDS_Transport_UDPv6_Property_t *property_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv6_string_to_address_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga4b8dbba12b59f3c7e73e57de7f0e9f43</anchor>
      <arglist>(NDDS_Transport_Plugin *self, NDDS_Transport_Address_t *address_out, const char *address_in)</arglist>
    </member>
    <member kind="function">
      <type>RTI_INT32</type>
      <name>NDDS_Transport_UDPv6_get_receive_interfaces_cEA</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>gae7ded9461bec0b980ee7b76438e9fc75</anchor>
      <arglist>(NDDS_Transport_Plugin *self, RTI_INT32 *found_more_than_provided_for_out, RTI_INT32 *interface_reported_count_out, NDDS_Transport_Interface_t interface_array_inout[], RTI_INT32 interface_array_size_in)</arglist>
    </member>
    <member kind="function">
      <type>NDDS_Transport_Plugin *</type>
      <name>NDDS_Transport_UDPv6_create</name>
      <anchorfile>group__NDDS__Transport__UDPv6__Plugin.html</anchorfile>
      <anchor>ga9184ab6998417410b61f1a29298542ab</anchor>
      <arglist>(NDDS_Transport_Address_t *default_network_address_out, const struct DDS_PropertyQosPolicy *property_in)</arglist>
    </member>
    <docanchor file="group__NDDS__Transport__UDPv6__Plugin">TransportUDPv6PropertyNameModule</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSParticipantBuiltInTopicModule</name>
    <title>Participant Built-in Topics</title>
    <filename>group__DDSParticipantBuiltInTopicModule.html</filename>
    <class kind="struct">DDS_ParticipantBuiltinTopicData</class>
    <class kind="struct">DDS_ParticipantBuiltinTopicDataSeq</class>
    <class kind="class">DDSParticipantBuiltinTopicDataTypeSupport</class>
    <class kind="class">DDSParticipantBuiltinTopicDataDataReader</class>
    <member kind="typedef">
      <type>struct DDS_ParticipantBuiltinTopicData</type>
      <name>DDS_ParticipantBuiltinTopicData</name>
      <anchorfile>group__DDSParticipantBuiltInTopicModule.html</anchorfile>
      <anchor>gad7c660418cc7b9da08d3b9c7a8945586</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDSC_VARIABLE_LENGTH_VALUE_TYPE_SUPPORT</name>
      <anchorfile>group__DDSParticipantBuiltInTopicModule.html</anchorfile>
      <anchor>ga8c479ea10e7d241498aa3c38f313fcaa</anchor>
      <arglist>(DDS_TransportInfo_t)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>DDS_PARTICIPANT_TOPIC_NAME</name>
      <anchorfile>group__DDSParticipantBuiltInTopicModule.html</anchorfile>
      <anchor>ga1741e87698c2dcee241f04fdd533c978</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTopicBuiltInTopicModule</name>
    <title>Topic Built-in Topics</title>
    <filename>group__DDSTopicBuiltInTopicModule.html</filename>
    <class kind="struct">DDS_TopicBuiltinTopicData</class>
    <class kind="struct">DDS_TopicBuiltinTopicDataSeq</class>
    <class kind="class">DDSTopicBuiltinTopicDataTypeSupport</class>
    <class kind="class">DDSTopicBuiltinTopicDataDataReader</class>
    <member kind="typedef">
      <type>struct DDS_TopicBuiltinTopicData</type>
      <name>DDS_TopicBuiltinTopicData</name>
      <anchorfile>group__DDSTopicBuiltInTopicModule.html</anchorfile>
      <anchor>gae88f6d53bc68fd9c5581042353c72345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>DDS_TOPIC_TOPIC_NAME</name>
      <anchorfile>group__DDSTopicBuiltInTopicModule.html</anchorfile>
      <anchor>ga32d9fc78543cfa0e28760f7444f5d02a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPublicationBuiltInTopicModule</name>
    <title>Publication Built-in Topics</title>
    <filename>group__DDSPublicationBuiltInTopicModule.html</filename>
    <class kind="struct">DDS_PublicationBuiltinTopicData</class>
    <class kind="struct">DDS_PublicationBuiltinTopicDataSeq</class>
    <class kind="class">DDSPublicationBuiltinTopicDataTypeSupport</class>
    <class kind="class">DDSPublicationBuiltinTopicDataDataReader</class>
    <member kind="typedef">
      <type>struct DDS_PublicationBuiltinTopicData</type>
      <name>DDS_PublicationBuiltinTopicData</name>
      <anchorfile>group__DDSPublicationBuiltInTopicModule.html</anchorfile>
      <anchor>ga9bc2f651d54519f65846b8c9cbc0d7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>DDS_PUBLICATION_TOPIC_NAME</name>
      <anchorfile>group__DDSPublicationBuiltInTopicModule.html</anchorfile>
      <anchor>gaaaf3b75757885897768615bc8dc98586</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSubscriptionBuiltInTopicModule</name>
    <title>Subscription Built-in Topics</title>
    <filename>group__DDSSubscriptionBuiltInTopicModule.html</filename>
    <class kind="struct">DDS_SubscriptionBuiltinTopicData</class>
    <class kind="struct">DDS_SubscriptionBuiltinTopicDataSeq</class>
    <class kind="class">DDSSubscriptionBuiltinTopicDataTypeSupport</class>
    <class kind="class">DDSSubscriptionBuiltinTopicDataDataReader</class>
    <member kind="typedef">
      <type>struct DDS_SubscriptionBuiltinTopicData</type>
      <name>DDS_SubscriptionBuiltinTopicData</name>
      <anchorfile>group__DDSSubscriptionBuiltInTopicModule.html</anchorfile>
      <anchor>ga9054b25f3a0af2ec4aeae176ef8d5922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>DDS_SUBSCRIPTION_TOPIC_NAME</name>
      <anchorfile>group__DDSSubscriptionBuiltInTopicModule.html</anchorfile>
      <anchor>ga440d1b5d846dd5d490b8c25bc9d52bc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBuiltInTopicCommonModule</name>
    <title>Common types and functions</title>
    <filename>group__DDSBuiltInTopicCommonModule.html</filename>
    <class kind="struct">DDS_Locator_t</class>
    <class kind="struct">DDS_LocatorSeq</class>
    <class kind="struct">DDS_ProtocolVersion_t</class>
    <class kind="struct">DDS_VendorId_t</class>
    <class kind="struct">DDS_ProductVersion_t</class>
    <class kind="struct">DDS_TransportInfo_t</class>
    <class kind="struct">DDS_TransportInfoSeq</class>
    <class kind="struct">DDS_BuiltinTopicKey_t</class>
    <class kind="struct">DDS_ContentFilterProperty_t</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_LOCATOR_ADDRESS_LENGTH_MAX</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gacc90a478a9b903fbc8da7007fa141a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PROTOCOLVERSION_1_0</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gacbef216882d62aa1f1bb94f324d55a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PROTOCOLVERSION_1_1</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga3e9f93ef3df8154dd36543bfc320063b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PROTOCOLVERSION_1_2</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga8c8123ba1bd9160bc2c2f9d93cba72b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PROTOCOLVERSION_2_0</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga6e7a5f8c90b537bdde2aa5e26e2f3fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PROTOCOLVERSION_2_1</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gaa3e111c80c7d00ef60b180539a6d0a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PROTOCOLVERSION</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga9f5946fa299dbe973778dda736164392</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_VENDOR_ID_LENGTH_MAX</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gad0091b6861c67e30da7ed27dc997faed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PRODUCTVERSION_UNKNOWN</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga45ab780bea5de2b264ac5a53a43cff21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DDS_ProtocolVersion_t</type>
      <name>DDS_ProtocolVersion_t</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gafff36fa680db8c47fb3aa339ea236757</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DDS_BuiltinTopicKey_t</type>
      <name>DDS_BuiltinTopicKey_t</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gaf7370712c8af0c68ec1816dfb0b3c9ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Locator_t</type>
      <name>DDS_LOCATOR_INVALID</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga777c93413c81ebf9eb1966c1cee9080a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_INVALID</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga183f155560d36db21e64b32a57414f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_UnsignedLong</type>
      <name>DDS_LOCATOR_PORT_INVALID</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gabe68ae00f00a05ee919e9382a7d61c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Octet</type>
      <name>DDS_LOCATOR_ADDRESS_INVALID</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>gaeb6d923c716dfb521973a3e77fbe7692</anchor>
      <arglist>[DDS_LOCATOR_ADDRESS_LENGTH_MAX]</arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_UDPv4</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga2a6c499c97f7aa1d7567d446f7596a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_SHMEM</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga4895d4dd996be1201becf62aa4dc48e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_SHMEM_510</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga8ec86529c00f8db84df014fa1587e327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_UDPv6</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga8f51f1b06735c2b8115494dbe8a49b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_UDPv6_510</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga49ee1a949054e79105e9b40c97da316c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LOCATOR_KIND_RESERVED</name>
      <anchorfile>group__DDSBuiltInTopicCommonModule.html</anchorfile>
      <anchor>ga2c22eb72466e1a706df0cf3bfc97b729</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSStringBuiltInTypeModule</name>
    <title>String Built-in Type</title>
    <filename>group__DDSStringBuiltInTypeModule.html</filename>
    <class kind="class">DDSStringTypeSupport</class>
    <class kind="class">DDSStringDataReader</class>
    <class kind="class">DDSStringDataWriter</class>
  </compound>
  <compound kind="group">
    <name>DDSKeyedStringBuiltInTypeModule</name>
    <title>KeyedString Built-in Type</title>
    <filename>group__DDSKeyedStringBuiltInTypeModule.html</filename>
    <class kind="struct">DDS_KeyedString</class>
    <class kind="struct">DDS_KeyedStringSeq</class>
    <class kind="class">DDSKeyedStringTypeSupport</class>
    <class kind="class">DDSKeyedStringDataReader</class>
    <class kind="class">DDSKeyedStringDataWriter</class>
    <member kind="typedef">
      <type>struct DDS_KeyedString</type>
      <name>DDS_KeyedString</name>
      <anchorfile>group__DDSKeyedStringBuiltInTypeModule.html</anchorfile>
      <anchor>ga1070c7b5d3ec6c078a1e50b3d17630ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSOctetsBuiltInTypeModule</name>
    <title>Octets Built-in Type</title>
    <filename>group__DDSOctetsBuiltInTypeModule.html</filename>
    <class kind="struct">DDS_Octets</class>
    <class kind="struct">DDS_OctetsSeq</class>
    <class kind="class">DDSOctetsTypeSupport</class>
    <class kind="class">DDSOctetsDataReader</class>
    <class kind="class">DDSOctetsDataWriter</class>
    <member kind="typedef">
      <type>struct DDS_Octets</type>
      <name>DDS_Octets</name>
      <anchorfile>group__DDSOctetsBuiltInTypeModule.html</anchorfile>
      <anchor>gab5725d9c97e69da5403bb22e85530142</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSKeyedOctetsBuiltInTypeModule</name>
    <title>KeyedOctets Built-in Type</title>
    <filename>group__DDSKeyedOctetsBuiltInTypeModule.html</filename>
    <class kind="struct">DDS_KeyedOctets</class>
    <class kind="struct">DDS_KeyedOctetsSeq</class>
    <class kind="class">DDSKeyedOctetsTypeSupport</class>
    <class kind="class">DDSKeyedOctetsDataReader</class>
    <class kind="class">DDSKeyedOctetsDataWriter</class>
    <member kind="typedef">
      <type>struct DDS_KeyedOctets</type>
      <name>DDS_KeyedOctets</name>
      <anchorfile>group__DDSKeyedOctetsBuiltInTypeModule.html</anchorfile>
      <anchor>ga3eb73e296c04f87f595ef7f3275d7f2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSCdrTypesModule</name>
    <title>DDS-Specific Primitive Types</title>
    <filename>group__DDSCdrTypesModule.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>DDS_BOOLEAN_TRUE</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga02f257a405ea7ff6774cdf4330a7eeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_BOOLEAN_FALSE</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga727fba6a96485884ccd9438b560689f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrChar</type>
      <name>DDS_Char</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga52b7c73f7d6651698b94c6f54e684eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrWchar</type>
      <name>DDS_Wchar</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>gaa2228e76a7db79b579c627e8a490881b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrOctet</type>
      <name>DDS_Octet</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>gab9ec5daedfecddbf5a37220cd2504520</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrShort</type>
      <name>DDS_Short</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga5c45604a5d9e8be405ea0dea959b0071</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrUnsignedShort</type>
      <name>DDS_UnsignedShort</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga68374a805f8c104e6934d0a47cf54298</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrLong</type>
      <name>DDS_Long</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>gadf1aad514e46148e661fc43b61845ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrUnsignedLong</type>
      <name>DDS_UnsignedLong</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>gadbd3ff0fba5330c85014a151f43b0fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrLongLong</type>
      <name>DDS_LongLong</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga1c8d04063125d4f5c0a42cd396fabd42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrUnsignedLongLong</type>
      <name>DDS_UnsignedLongLong</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga6f969d5cfd1dd4164621d446e83e56ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrFloat</type>
      <name>DDS_Float</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga49b020b975c192a1304f36b72d9b3fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrDouble</type>
      <name>DDS_Double</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga52c57e877eb64b8fe422cf7ef500fed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrLongDouble</type>
      <name>DDS_LongDouble</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga456ca82fcd389ec28b50dae7bdb7ec84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrBoolean</type>
      <name>DDS_Boolean</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>ga19b2e2f603cfff0021ec54dc57ceae7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RTICdrEnum</type>
      <name>DDS_Enum</name>
      <anchorfile>group__DDSCdrTypesModule.html</anchorfile>
      <anchor>gaf515137876c32028d7851d7dcd73f552</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTimeSupportModule</name>
    <title>Time Support</title>
    <filename>group__DDSTimeSupportModule.html</filename>
    <class kind="struct">DDS_Time_t</class>
    <class kind="struct">DDS_Duration_t</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TIME_ZERO</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gac99dcc849b77a82c132b902492fa7b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_micros</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga94ea859522040a3779d976d6313fcf38</anchor>
      <arglist>(DDS_UnsignedLongLong microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_millis</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga6bb94f1daa2efb49e78d9e5d153ed8b3</anchor>
      <arglist>(DDS_UnsignedLongLong milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_nanos</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga5d32c48a16bc8246e09c623b6307f3c2</anchor>
      <arglist>(DDS_UnsignedLongLong nanoseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_seconds</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga5a094df7d4f918aece6760361936d185</anchor>
      <arglist>(DDS_UnsignedLong seconds)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_Time_is_zero</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gaaa55eb5d6329d461e1fb84f4b8701c42</anchor>
      <arglist>(const struct DDS_Time_t *time)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_Time_is_invalid</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga7d6dd742c3f5eca4c1e38e0c3f56e7ae</anchor>
      <arglist>(const struct DDS_Time_t *time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_micros</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga54a1b5c068b2bceb0358a003c2d678a0</anchor>
      <arglist>(DDS_UnsignedLongLong microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_millis</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gace827953c744110d71f8590572f4c7c2</anchor>
      <arglist>(DDS_UnsignedLongLong milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_nanos</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gae295539fddfc2cc07f8012a40aecbdc1</anchor>
      <arglist>(DDS_UnsignedLongLong nanoseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_seconds</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga2aa5871b585cf7a5d9b2c76c7ce4f90c</anchor>
      <arglist>(DDS_UnsignedLong seconds)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_Duration_is_infinite</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga3b6a068ffcee1ecfbef4c6d9156eda3d</anchor>
      <arglist>(const struct DDS_Duration_t *duration)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_Duration_is_auto</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gad0b544ea6534a8ce3878aac782c30352</anchor>
      <arglist>(const struct DDS_Duration_t *duration)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_Duration_is_zero</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga935ca8764d0160bff60c1305ff32c415</anchor>
      <arglist>(const struct DDS_Duration_t *duration)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Time_t</type>
      <name>DDS_TIME_MAX</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga9fd0196d9a19f34eebc3d01e17802130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_TIME_INVALID_SEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga67a6cc9d13b1e8274a1b32918d6951ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_UnsignedLong</type>
      <name>DDS_TIME_INVALID_NSEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gabea181f484cb28290ee1a7436f98bb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Time_t</type>
      <name>DDS_TIME_INVALID</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga7e3abaab17ac016b71586123e624193b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_DURATION_INFINITE_SEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga9f7e73d8db27d58e44f1735580e29578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_UnsignedLong</type>
      <name>DDS_DURATION_INFINITE_NSEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga8dc60e63a62ac0232e8d830e84e9220a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>DDS_DURATION_INFINITE</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gaad536e140b50dc74884400421bcec2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_DURATION_AUTO_SEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga97e85d071fefbe37091843f9af5cc3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_UnsignedLong</type>
      <name>DDS_DURATION_AUTO_NSEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gaae34514f805c4532d8d20ebcc33f0280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>DDS_DURATION_AUTO</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga7c66db7425eb8ca43d76d724108b8c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_DURATION_ZERO_SEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gac54dc87af159815b9dd2d334e41eb9ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_UnsignedLong</type>
      <name>DDS_DURATION_ZERO_NSEC</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga7f451f0b256690500901ac66246f48e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>DDS_DURATION_ZERO</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gae2c3bec66d84edb921dde19eb6ee78a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSGUIDSupportModule</name>
    <title>GUID Support</title>
    <filename>group__DDSGUIDSupportModule.html</filename>
    <class kind="struct">DDS_GUID_t</class>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_GUID_equals</name>
      <anchorfile>group__DDSGUIDSupportModule.html</anchorfile>
      <anchor>ga336542a7794cf68ce44dccca1015b631</anchor>
      <arglist>(const struct DDS_GUID_t *self, const struct DDS_GUID_t *other)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DDS_GUID_compare</name>
      <anchorfile>group__DDSGUIDSupportModule.html</anchorfile>
      <anchor>ga1053302f994000b57a94b5646ae58dc3</anchor>
      <arglist>(const struct DDS_GUID_t *self, const struct DDS_GUID_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_GUID_copy</name>
      <anchorfile>group__DDSGUIDSupportModule.html</anchorfile>
      <anchor>ga4034bacd86900f70f61e40d91a89dc9b</anchor>
      <arglist>(struct DDS_GUID_t *self, const struct DDS_GUID_t *other)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>DDS_GUID_AUTO</name>
      <anchorfile>group__DDSGUIDSupportModule.html</anchorfile>
      <anchor>gae004a83fd941aacd03dd95ad5a94e704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>DDS_GUID_UNKNOWN</name>
      <anchorfile>group__DDSGUIDSupportModule.html</anchorfile>
      <anchor>gaef698cd3597b7085cf261cd45595331d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSequenceNumberSupportModule</name>
    <title>Sequence Number Support</title>
    <filename>group__DDSSequenceNumberSupportModule.html</filename>
    <class kind="struct">DDS_SequenceNumber_t</class>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>DDS_SEQUENCE_NUMBER_UNKNOWN</name>
      <anchorfile>group__DDSSequenceNumberSupportModule.html</anchorfile>
      <anchor>ga44a24fac6e5db38fd9eeecb5b95bdc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>DDS_SEQUENCE_NUMBER_ZERO</name>
      <anchorfile>group__DDSSequenceNumberSupportModule.html</anchorfile>
      <anchor>ga10ef377ef074f9eaca12be52fa6b2ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>DDS_SEQUENCE_NUMBER_MAX</name>
      <anchorfile>group__DDSSequenceNumberSupportModule.html</anchorfile>
      <anchor>ga74b8006b2d1186cf353abd29e02b4249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>DDS_AUTO_SEQUENCE_NUMBER</name>
      <anchorfile>group__DDSSequenceNumberSupportModule.html</anchorfile>
      <anchor>gaa20754976165174da544f09cff56120e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSExceptionTypesModule</name>
    <title>Exception Codes</title>
    <filename>group__DDSExceptionTypesModule.html</filename>
    <member kind="enumeration">
      <name>DDS_ExceptionCode_t</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>ga0a1b5bd9425158c7123ed123ff3e3a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NO_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a61935931545b83b9a2d5aedee1554ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_USER_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a84fd5eb8de1b0a9428ca015c2d288cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SYSTEM_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a1797a0585b872d96d4d3f7ffda32e2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BAD_PARAM_SYSTEM_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a36579fdcccec8e6c81b25393144a35df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NO_MEMORY_SYSTEM_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96ab8872c85c411c82fc1aa8736d4d1614a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BAD_TYPECODE_SYSTEM_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a927a55acf9506dc69ba852420748686a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BADKIND_USER_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96ae2768ea8e37f0d25ab59ddb7bd9a07be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BOUNDS_USER_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96af1ed0ea4b5591716c35ee25fd30a7f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_IMMUTABLE_TYPECODE_SYSTEM_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a909badb423c846bd4d2f97fc98c5cae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BAD_MEMBER_NAME_USER_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96a8e83e8b20cd2e3926e807ca1761aacf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BAD_MEMBER_ID_USER_EXCEPTION_CODE</name>
      <anchorfile>group__DDSExceptionTypesModule.html</anchorfile>
      <anchor>gga0a1b5bd9425158c7123ed123ff3e3a96ae8e222e5983e391ff655fd89a0420bb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReturnTypesModule</name>
    <title>Return Codes</title>
    <filename>group__DDSReturnTypesModule.html</filename>
    <member kind="enumeration">
      <name>DDS_ReturnCode_t</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>ga73f148aaf96b5f6f9fc630b7cfeb0c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_OK</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a4f3bc70d86031a38bba356c4b534979f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_ERROR</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91ac47a8e813f6e5d652f67dbc551b9f62e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_UNSUPPORTED</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a9d40db847e4603f57ce3ff0abbd662e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_BAD_PARAMETER</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91ad8661c51c31806806aaf10dca3c80f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_PRECONDITION_NOT_MET</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a3a638871d5b4174c32c8d2880f1f6770</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_OUT_OF_RESOURCES</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a35b4c98bf40ced0114572156c7f41893</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_NOT_ENABLED</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a2e310a02f1ef7b8a7e5b5f5029b154f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_IMMUTABLE_POLICY</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a6e50f4433cf3e47737f4d317d0a4a707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_INCONSISTENT_POLICY</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a5128152d6418ba270e44c5de487ce4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_ALREADY_DELETED</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91adaf7aa0f849422d3e4345bf1c0d98e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_TIMEOUT</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a9e9b16cc5337664c6c6bbd4a9ed01bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_NO_DATA</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91aa8e69444ae8a8efa65bde05556818669</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RETCODE_ILLEGAL_OPERATION</name>
      <anchorfile>group__DDSReturnTypesModule.html</anchorfile>
      <anchor>gga73f148aaf96b5f6f9fc630b7cfeb0c91a9abc2fecf5d7348c77744f0b16bdfcf2</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__DDSReturnTypesModule">DDSReturnTypesModule_std_retcodes</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSStatusTypesModule</name>
    <title>Status Kinds</title>
    <filename>group__DDSStatusTypesModule.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>DDS_STATUS_MASK_NONE</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ga125113479c894d4d62b9c27ceac4e03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_STATUS_MASK_ALL</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>gaa755e98b5e8484e8be881287b4b0165c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_UnsignedLong</type>
      <name>DDS_StatusMask</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ga4d99a5cbe5e3451400717c8358be6377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_StatusKind</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>gaa99b5585ecdf8c5f93ac3108439ad26f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_INCONSISTENT_TOPIC_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa1cdc1326d8bc09a1be3a8045f080fa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_OFFERED_DEADLINE_MISSED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa84f12530ffc8d6e68906054b06972342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REQUESTED_DEADLINE_MISSED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fab4c627eaeae35f65790cc564208ca2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_OFFERED_INCOMPATIBLE_QOS_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa1eb2a68f0c66c314784737a7728922b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REQUESTED_INCOMPATIBLE_QOS_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa126ff1b38cdfc905353cb2dac57b6796</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SAMPLE_LOST_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa0114c506e39a7fef5a42587556fc812f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SAMPLE_REJECTED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa9e9d4b8dec6fa48c37aa32aa51ad2dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_ON_READERS_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa7962fc85687ca40e2674e4f66811f670</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_AVAILABLE_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa9d2d926d515abd0ddd0b537efd42f03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LIVELINESS_LOST_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fabb958f0f7fe005d227e808949509961c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LIVELINESS_CHANGED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa267a5ad100a1e87c372752b6900a9965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PUBLICATION_MATCHED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa3052f04c67620660f92aa3b5da2455d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SUBSCRIPTION_MATCHED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26faceedf0fda6d695b4fabd8ac0af807bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_WRITER_APPLICATION_ACKNOWLEDGMENT_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa0013ea27046b4cfdca321492aa6d3adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_WRITER_INSTANCE_REPLACED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa3ba112e7d805a656ab788cd912d486e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RELIABLE_WRITER_CACHE_CHANGED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fad694e745b154fb74c49c0bd0210acadc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RELIABLE_READER_ACTIVITY_CHANGED_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fac97ef6e40fddefdbc516978e5681436c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_WRITER_CACHE_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26faf7ddb3e013a36e1a3950231449a589ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_WRITER_PROTOCOL_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa2b24f623f0b0bd3351808e50cf450563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_READER_CACHE_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fab5cf5526977baa786d2976dcc17f412f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATA_READER_PROTOCOL_STATUS</name>
      <anchorfile>group__DDSStatusTypesModule.html</anchorfile>
      <anchor>ggaa99b5585ecdf8c5f93ac3108439ad26fa391654263c7c0f8de22bd894eb6bb3bb</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__DDSStatusTypesModule">Status_changes</docanchor>
    <docanchor file="group__DDSStatusTypesModule">Status_changes_plain</docanchor>
    <docanchor file="group__DDSStatusTypesModule">Status_changes_read</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSThreadSettingsModule</name>
    <title>Thread Settings</title>
    <filename>group__DDSThreadSettingsModule.html</filename>
    <class kind="struct">DDS_ThreadSettings_t</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_THREAD_SETTINGS_KIND_MASK_DEFAULT</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gad0c526878b387d391a31a9b31384f87e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_UnsignedLong</type>
      <name>DDS_ThreadSettingsKindMask</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gae597ce52fefac87a730976cc7d8f1736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_ThreadSettingsKind</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>ga24870fcb323c654c277af8d292c0415e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_FLOATING_POINT</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga24870fcb323c654c277af8d292c0415eaa65c249ada6bb9fad86b11dd2a11abc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_STDIO</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga24870fcb323c654c277af8d292c0415ea20db361583de95f2690631eb807f35e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_REALTIME_PRIORITY</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga24870fcb323c654c277af8d292c0415ea114c76d04077555799d4cca17a6237e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_PRIORITY_ENFORCE</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga24870fcb323c654c277af8d292c0415eac1b3ae86d0f004cc797e38fa74ac22d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_CANCEL_ASYNCHRONOUS</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga24870fcb323c654c277af8d292c0415ea6fd86fa38d482071f20e349cf1f534dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_ThreadSettingsCpuRotationKind</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>ga899fc336687e6e0633bbd6a9301951f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_CPU_NO_ROTATION</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga899fc336687e6e0633bbd6a9301951f9a89f283032c5d7c7e13f4847b01eab428</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_THREAD_SETTINGS_CPU_RR_ROTATION</name>
      <anchorfile>group__DDSThreadSettingsModule.html</anchorfile>
      <anchor>gga899fc336687e6e0633bbd6a9301951f9ac92d305227d5eabe59602a196c702121</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSQosTypesModule</name>
    <title>QoS Policies</title>
    <filename>group__DDSQosTypesModule.html</filename>
    <subgroup>DDSAsynchronousPublisherQosModule</subgroup>
    <subgroup>DDSAvailabilityQosModule</subgroup>
    <subgroup>DDSBatchQosModule</subgroup>
    <subgroup>DDSDatabaseQosModule</subgroup>
    <subgroup>DDSDataReaderProtocolQosModule</subgroup>
    <subgroup>DDSDataReaderResourceLimitsQosModule</subgroup>
    <subgroup>DDSDataWriterProtocolQosModule</subgroup>
    <subgroup>DDSDataWriterResourceLimitsQosModule</subgroup>
    <subgroup>DDSDeadlineQosModule</subgroup>
    <subgroup>DDSDestinationOrderQosModule</subgroup>
    <subgroup>DDSDiscoveryQosModule</subgroup>
    <subgroup>DDSDiscoveryConfigQosModule</subgroup>
    <subgroup>DDSDomainParticipantResourceLimitsQosModule</subgroup>
    <subgroup>DDSDurabilityQosModule</subgroup>
    <subgroup>DDSDurabilityServiceQosModule</subgroup>
    <subgroup>DDSEntityFactoryQosModule</subgroup>
    <subgroup>DDSEntityNameQosModule</subgroup>
    <subgroup>DDSEventQosModule</subgroup>
    <subgroup>DDSExclusiveAreaQosModule</subgroup>
    <subgroup>DDSHistoryQosModule</subgroup>
    <subgroup>DDSGroupDataQosModule</subgroup>
    <subgroup>DDSLatencyBudgetQosModule</subgroup>
    <subgroup>DDSLifespanQosModule</subgroup>
    <subgroup>DDSLivelinessQosModule</subgroup>
    <subgroup>DDSLocatorFilterQosModule</subgroup>
    <subgroup>DDSLoggingQosModule</subgroup>
    <subgroup>DDSMultiChannelQosModule</subgroup>
    <subgroup>DDSOwnershipQosModule</subgroup>
    <subgroup>DDSOwnershipStrengthQosModule</subgroup>
    <subgroup>DDSPartitionQosModule</subgroup>
    <subgroup>DDSPresentationQosModule</subgroup>
    <subgroup>DDSProfileQosModule</subgroup>
    <subgroup>DDSPropertyQosModule</subgroup>
    <subgroup>DDSPublishModeQosModule</subgroup>
    <subgroup>DDSReaderDataLifecycleQosModule</subgroup>
    <subgroup>DDSReceiverPoolQosModule</subgroup>
    <subgroup>DDSReliabilityQosModule</subgroup>
    <subgroup>DDSResourceLimitsQosModule</subgroup>
    <subgroup>DDSServiceQosModule</subgroup>
    <subgroup>DDSSystemResourceLimitsQosModule</subgroup>
    <subgroup>DDSTimeBasedFilterQosModule</subgroup>
    <subgroup>DDSTopicDataQosModule</subgroup>
    <subgroup>DDSTransportBuiltinQosModule</subgroup>
    <subgroup>DDSTransportMulticastQosModule</subgroup>
    <subgroup>DDSTransportMulticastMappingQosModule</subgroup>
    <subgroup>DDSTransportPriorityQosModule</subgroup>
    <subgroup>DDSTransportSelectionQosModule</subgroup>
    <subgroup>DDSTransportUnicastQosModule</subgroup>
    <subgroup>DDSTypeConsistencyEnforcementQosModule</subgroup>
    <subgroup>DDSTypeSupportQosModule</subgroup>
    <subgroup>DDSUserDataQosModule</subgroup>
    <subgroup>DDSWriterDataLifecycleQosModule</subgroup>
    <subgroup>DDSWireProtocolQosModule</subgroup>
    <subgroup>DDSExtendedQosSupportModule</subgroup>
    <class kind="struct">DDS_QosPolicyCount</class>
    <class kind="struct">DDS_QosPolicyCountSeq</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_QOS_POLICY_COUNT</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>ga4cb75c6ac79e561fa04f267841277a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_QosPolicyId_t</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>ga4b2c4d85475a58758fba7601082a40f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_INVALID_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a3b381d1bfefadadd7bdc4a6df94066ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_USERDATA_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8afd439068503642ba27ae03e82cd5dfc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DURABILITY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8abc6c3daf8f99df31ca60def2b953b800</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PRESENTATION_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a9515752aa5a5e4580593a819446767ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DEADLINE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8abd77e173b457d7c9a4455c00f5a72d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LATENCYBUDGET_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a4307e6cf33965ad1b332de72c7b0a3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_OWNERSHIP_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8afd0f507c4cc38a933f5817d0ea873d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_OWNERSHIPSTRENGTH_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a766d1409fe6aa9ee6264f4efe69731c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LIVELINESS_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ad155c60f378087fa8fdbb0f3eddca268</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TIMEBASEDFILTER_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a5c24a0ad10b8b5557f608306acff7e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PARTITION_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a2914476b818ff9a6c16a5a15cc4c9859</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RELIABILITY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a33cceb8ac73aa06ef39485b3d887c815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DESTINATIONORDER_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8abc7d529d3a26069586a80b7aac6763c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_HISTORY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ae84e1113bab59340942bfd52193ea428</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RESOURCELIMITS_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8af6dc4ee596d5cbe34bf5c4cb67533c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ENTITYFACTORY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a02e9e33058e0cdbce813165a59c53438</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_WRITERDATALIFECYCLE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ac87a7459f45e7dfb8b4fe6d7948edb89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_READERDATALIFECYCLE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8aa62ade0f5a05654c5f959dd33bbeb07e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TOPICDATA_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a12f9b3bb36fe960675fe077b11ea99ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_GROUPDATA_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8aac3715c5385e49e1b6a995f0f8fdec6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTPRIORITY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ab76060ee902af0589e55e15a7a213797</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LIFESPAN_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a8e8deda6f1b1d576fcea58e66e1eb00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DURABILITYSERVICE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a6e16affba7e7d1abee18b0a8fb5ced47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TYPE_CONSISTENCY_ENFORCEMENT_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a832635ecb9be4de866ea695b9072d74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_WIREPROTOCOL_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8abf611655055c57bdc63712d0b238d0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DISCOVERY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a7418a50a4ec7eefc24257be29e421f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATAREADERRESOURCELIMITS_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ae7ed6ac9ae8addeb58849c7d28271ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATAWRITERRESOURCELIMITS_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8aad7e3fba38ff5a995b2e57b777ff1a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATAREADERPROTOCOL_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a54016a880ce7fe51051980ad79d63f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATAWRITERPROTOCOL_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a14a9471836a7d9bcd37142cbe9cb3ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DOMAINPARTICIPANTRESOURCELIMITS_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a2e7398919a0d6eb5c072380cc4af3c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_EVENT_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a2ae487430036c4d9d80e325d8685222c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATABASE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8acdf49c15755bf2717fba06a8a5c92cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RECEIVERPOOL_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a55e6bb1330ae810b6cf9854241a76b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DISCOVERYCONFIG_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ade5040911724bc9981fc93fd49c9a76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_EXCLUSIVEAREA_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8aea86c05045e54ee7307726086f659916</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SYSTEMRESOURCELIMITS_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a44311ea2889193574f78a0ea6119f22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTSELECTION_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a9fef1ef1728976261f347e5c27f1bee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTUNICAST_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a9024023754e229fb08f6d5807b8c7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTMULTICAST_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a8ee2e166731e33cf866dc69f577029b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTBUILTIN_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ae2776e50079294c06b296c5e59f1d357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TYPESUPPORT_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8aad57d171eb6c14c206ae3c75e24b649c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PROPERTY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ae9f95f958fc0a4616616e9a07ca4a8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PUBLISHMODE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a7863e14b78165e392790b93910d8e8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ASYNCHRONOUSPUBLISHER_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a9f7ff48709f7692cc3f9d4a256f549a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ENTITYNAME_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ab02c7b6ecab65c8f183c89f2b4f21f8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BATCH_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ad28c701dea92f4c00a38d0563336704e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PROFILE_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a6fb2d00bf1ea2ffb0c44a0f6f5f332e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOCATORFILTER_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8ac030d3b80aba6f9af648b9c2d97f3c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_MULTICHANNEL_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a507a2dc402ef72ab1290e3138fea1aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_AVAILABILITY_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a73bbc7d03e226defc900a53349a5e6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTMULTICASTMAPPING_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a68ec381365d37d7ab671d8d272f0f9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LOGGING_QOS_POLICY_ID</name>
      <anchorfile>group__DDSQosTypesModule.html</anchorfile>
      <anchor>gga4b2c4d85475a58758fba7601082a40f8a0e12937f8c131df79578a490c170b48e</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__DDSQosTypesModule">DDSQosTypesModule_usage</docanchor>
    <docanchor file="group__DDSQosTypesModule">DDSQosTypesModule_compatibility</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_rxo</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable_no</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable_until_enable</docanchor>
    <docanchor file="group__DDSQosTypesModule">a_prop_changeable_yes</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSAsynchronousPublisherQosModule</name>
    <title>ASYNCHRONOUS_PUBLISHER</title>
    <filename>group__DDSAsynchronousPublisherQosModule.html</filename>
    <class kind="struct">DDS_AsynchronousPublisherQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_ASYNCHRONOUSPUBLISHER_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSAsynchronousPublisherQosModule.html</anchorfile>
      <anchor>ga47d54c8f3c78688601aefff28b621f7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSAvailabilityQosModule</name>
    <title>AVAILABILITY</title>
    <filename>group__DDSAvailabilityQosModule.html</filename>
    <class kind="struct">DDS_EndpointGroup_t</class>
    <class kind="struct">DDS_EndpointGroupSeq</class>
    <class kind="struct">DDS_AvailabilityQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_AVAILABILITY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSAvailabilityQosModule.html</anchorfile>
      <anchor>ga169826b882da0fc27a5c091c951503cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBatchQosModule</name>
    <title>BATCH</title>
    <filename>group__DDSBatchQosModule.html</filename>
    <class kind="struct">DDS_BatchQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_BATCH_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSBatchQosModule.html</anchorfile>
      <anchor>ga24582ca2c666739b3bf1de4ca81c944d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDatabaseQosModule</name>
    <title>DATABASE</title>
    <filename>group__DDSDatabaseQosModule.html</filename>
    <class kind="struct">DDS_DatabaseQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DATABASE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDatabaseQosModule.html</anchorfile>
      <anchor>ga7071604c8ed072c891bb83c3fa2ccf1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDataReaderProtocolQosModule</name>
    <title>DATA_READER_PROTOCOL</title>
    <filename>group__DDSDataReaderProtocolQosModule.html</filename>
    <class kind="struct">DDS_DataReaderProtocolQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DATAREADERPROTOCOL_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDataReaderProtocolQosModule.html</anchorfile>
      <anchor>ga0c3a1424cb3984a4438eae5bb92972c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDataReaderResourceLimitsQosModule</name>
    <title>DATA_READER_RESOURCE_LIMITS</title>
    <filename>group__DDSDataReaderResourceLimitsQosModule.html</filename>
    <class kind="struct">DDS_DataReaderResourceLimitsQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DATAREADERRESOURCELIMITS_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDataReaderResourceLimitsQosModule.html</anchorfile>
      <anchor>ga4aa3763bd497404514504d6b59426cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_AUTO_MAX_TOTAL_INSTANCES</name>
      <anchorfile>group__DDSDataReaderResourceLimitsQosModule.html</anchorfile>
      <anchor>gabd19381203208406d882abeeb9e53d3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDataWriterProtocolQosModule</name>
    <title>DATA_WRITER_PROTOCOL</title>
    <filename>group__DDSDataWriterProtocolQosModule.html</filename>
    <class kind="struct">DDS_DataWriterProtocolQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DATAWRITERPROTOCOL_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDataWriterProtocolQosModule.html</anchorfile>
      <anchor>gaec8323b8d2c61caf7b635c22da0979da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDataWriterResourceLimitsQosModule</name>
    <title>DATA_WRITER_RESOURCE_LIMITS</title>
    <filename>group__DDSDataWriterResourceLimitsQosModule.html</filename>
    <class kind="struct">DDS_DataWriterResourceLimitsQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_DataWriterResourceLimitsInstanceReplacementKind</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>ga4e1d22822e791111c475586408e5af88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_UNREGISTERED_INSTANCE_REPLACEMENT</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>gga4e1d22822e791111c475586408e5af88a3b91cc2e153df3da80e7f4b34e2b6f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ALIVE_INSTANCE_REPLACEMENT</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>gga4e1d22822e791111c475586408e5af88a3bd754f39231c8997cb372d31a83b4d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DISPOSED_INSTANCE_REPLACEMENT</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>gga4e1d22822e791111c475586408e5af88a30271662385c3265b54df551c7ee08c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ALIVE_THEN_DISPOSED_INSTANCE_REPLACEMENT</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>gga4e1d22822e791111c475586408e5af88ac0cd646be98852eacf8bb217ea9a6fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DISPOSED_THEN_ALIVE_INSTANCE_REPLACEMENT</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>gga4e1d22822e791111c475586408e5af88a3ee1048f6f6b01ea79b19ac8213762db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ALIVE_OR_DISPOSED_INSTANCE_REPLACEMENT</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>gga4e1d22822e791111c475586408e5af88a6cc7f716a9606e4ae9ba3547d666297f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DATAWRITERRESOURCELIMITS_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDataWriterResourceLimitsQosModule.html</anchorfile>
      <anchor>ga62baa4cc829ae82a5d240231c2fd9d80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDeadlineQosModule</name>
    <title>DEADLINE</title>
    <filename>group__DDSDeadlineQosModule.html</filename>
    <class kind="struct">DDS_DeadlineQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DEADLINE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDeadlineQosModule.html</anchorfile>
      <anchor>gad8e101b521a1a1af7086f659d07bf055</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDestinationOrderQosModule</name>
    <title>DESTINATION_ORDER</title>
    <filename>group__DDSDestinationOrderQosModule.html</filename>
    <class kind="struct">DDS_DestinationOrderQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_DestinationOrderQosPolicyKind</name>
      <anchorfile>group__DDSDestinationOrderQosModule.html</anchorfile>
      <anchor>ga8f1c0c2b179c6281aa9e92d5ea88cbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS</name>
      <anchorfile>group__DDSDestinationOrderQosModule.html</anchorfile>
      <anchor>gga8f1c0c2b179c6281aa9e92d5ea88cbfeaa718dc1f974fc792af552d293986bb26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BY_SOURCE_TIMESTAMP_DESTINATIONORDER_QOS</name>
      <anchorfile>group__DDSDestinationOrderQosModule.html</anchorfile>
      <anchor>gga8f1c0c2b179c6281aa9e92d5ea88cbfeac7a65745504a7d4ccbc41299154fe67b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DESTINATIONORDER_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDestinationOrderQosModule.html</anchorfile>
      <anchor>ga601b86edc58e98535e313f9c7c30a89f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDiscoveryQosModule</name>
    <title>DISCOVERY</title>
    <filename>group__DDSDiscoveryQosModule.html</filename>
    <subgroup>NDDS_DISCOVERY_PEERS</subgroup>
    <class kind="struct">DDS_DiscoveryQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DISCOVERY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDiscoveryQosModule.html</anchorfile>
      <anchor>ga03a15389b03cb0a805b1d36d2e4fe8a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDiscoveryConfigQosModule</name>
    <title>DISCOVERY_CONFIG</title>
    <filename>group__DDSDiscoveryConfigQosModule.html</filename>
    <class kind="struct">DDS_BuiltinTopicReaderResourceLimits_t</class>
    <class kind="struct">DDS_DiscoveryConfigQosPolicy</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DISCOVERYCONFIG_BUILTIN_PLUGIN_MASK_ALL</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga75f8db9a3deb5d5803827c0e49d7540f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DISCOVERYCONFIG_BUILTIN_PLUGIN_MASK_NONE</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga274eaefb5741ea64654b264324ce7848</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DISCOVERYCONFIG_BUILTIN_PLUGIN_MASK_DEFAULT</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga2e8abf1cf6174b7ad2e57a6daa409a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_Long</type>
      <name>DDS_DiscoveryConfigBuiltinPluginKindMask</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga39e570e403891ed478fe9a0b8296b02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_DiscoveryConfigBuiltinPluginKind</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga356965829eadc834769365098e84fe38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DISCOVERYCONFIG_BUILTIN_SDP</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>gga356965829eadc834769365098e84fe38ac55aacdca28c8b42b982ceccd8461dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_RemoteParticipantPurgeKind</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga875fd04a10a836a93f2bc9ce0005ce50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LIVELINESS_BASED_REMOTE_PARTICIPANT_PURGE</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>gga875fd04a10a836a93f2bc9ce0005ce50a93db8a06b817d5765eff47212d6dcf01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NO_REMOTE_PARTICIPANT_PURGE</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>gga875fd04a10a836a93f2bc9ce0005ce50af2f216cc3f29a1ef38aeee6396b750ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DISCOVERYCONFIG_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDiscoveryConfigQosModule.html</anchorfile>
      <anchor>ga9433f294bd4d4e64ea0cacd1df60b800</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDomainParticipantResourceLimitsQosModule</name>
    <title>DOMAIN_PARTICIPANT_RESOURCE_LIMITS</title>
    <filename>group__DDSDomainParticipantResourceLimitsQosModule.html</filename>
    <class kind="struct">DDS_AllocationSettings_t</class>
    <class kind="struct">DDS_DomainParticipantResourceLimitsQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_DomainParticipantResourceLimitsIgnoredEntityReplacementKind</name>
      <anchorfile>group__DDSDomainParticipantResourceLimitsQosModule.html</anchorfile>
      <anchor>ga60acba71b5611bb3a79a2a4b0361737b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NO_REPLACEMENT_IGNORED_ENTITY_REPLACEMENT</name>
      <anchorfile>group__DDSDomainParticipantResourceLimitsQosModule.html</anchorfile>
      <anchor>gga60acba71b5611bb3a79a2a4b0361737ba48dea9036e47192c1dfe8bed6342ee4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_ALIVE_FIRST_IGNORED_ENTITY_REPLACEMENT</name>
      <anchorfile>group__DDSDomainParticipantResourceLimitsQosModule.html</anchorfile>
      <anchor>gga60acba71b5611bb3a79a2a4b0361737ba7e5042bfd81a58806d3ab597e4b31553</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DOMAINPARTICIPANTRESOURCELIMITS_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDomainParticipantResourceLimitsQosModule.html</anchorfile>
      <anchor>gaa668a948c296ca4a63c784630006293e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDurabilityQosModule</name>
    <title>DURABILITY</title>
    <filename>group__DDSDurabilityQosModule.html</filename>
    <class kind="struct">DDS_DurabilityQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_DurabilityQosPolicyKind</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>ga4bc6b72c72928cb9ed6432e3e6a83e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_VOLATILE_DURABILITY_QOS</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>gga4bc6b72c72928cb9ed6432e3e6a83e2eab81cc94a7a319b48b17e177d217a09d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSIENT_LOCAL_DURABILITY_QOS</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>gga4bc6b72c72928cb9ed6432e3e6a83e2ea82f8bcc308fa4721d8d8525c383e7d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSIENT_DURABILITY_QOS</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>gga4bc6b72c72928cb9ed6432e3e6a83e2ea81786bd134fe8ca8cf5525715004c39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PERSISTENT_DURABILITY_QOS</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>gga4bc6b72c72928cb9ed6432e3e6a83e2eacbd6b266c74543d92befcec26ccf38c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DURABILITY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDurabilityQosModule.html</anchorfile>
      <anchor>ga1b3a5465ffbb746429f36352bab84e78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDurabilityServiceQosModule</name>
    <title>DURABILITY_SERVICE</title>
    <filename>group__DDSDurabilityServiceQosModule.html</filename>
    <class kind="struct">DDS_DurabilityServiceQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_DURABILITYSERVICE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSDurabilityServiceQosModule.html</anchorfile>
      <anchor>ga7935c959c60877e9dac540c0c1efbaf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSEntityFactoryQosModule</name>
    <title>ENTITY_FACTORY</title>
    <filename>group__DDSEntityFactoryQosModule.html</filename>
    <class kind="struct">DDS_EntityFactoryQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_ENTITYFACTORY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSEntityFactoryQosModule.html</anchorfile>
      <anchor>gaa43f922824b3121a6e126eb8571881ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSEntityNameQosModule</name>
    <title>ENTITY_NAME</title>
    <filename>group__DDSEntityNameQosModule.html</filename>
    <class kind="struct">DDS_EntityNameQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_ENTITYNAME_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSEntityNameQosModule.html</anchorfile>
      <anchor>ga669a7300faad4d8538cc57496e3d995d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSEventQosModule</name>
    <title>EVENT</title>
    <filename>group__DDSEventQosModule.html</filename>
    <class kind="struct">DDS_EventQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_EVENT_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSEventQosModule.html</anchorfile>
      <anchor>ga4655fc24915abc52d7eb1edf4ace022e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSExclusiveAreaQosModule</name>
    <title>EXCLUSIVE_AREA</title>
    <filename>group__DDSExclusiveAreaQosModule.html</filename>
    <class kind="struct">DDS_ExclusiveAreaQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_EXCLUSIVEAREA_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSExclusiveAreaQosModule.html</anchorfile>
      <anchor>ga25f07083d7e5d859fbe5e8b58e9ed547</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSHistoryQosModule</name>
    <title>HISTORY</title>
    <filename>group__DDSHistoryQosModule.html</filename>
    <class kind="struct">DDS_HistoryQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_HistoryQosPolicyKind</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>ga96c54dadb2beb87b23776e766e282185</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_KEEP_LAST_HISTORY_QOS</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>gga96c54dadb2beb87b23776e766e282185a993d3120b7bbb347ce11e0e6f68b29ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_KEEP_ALL_HISTORY_QOS</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>gga96c54dadb2beb87b23776e766e282185a9e526d876dae232aa083125c72135f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_RefilterQosPolicyKind</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>ga2eec16ce240664606523f2f3fe15afaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NONE_REFILTER_QOS</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>gga2eec16ce240664606523f2f3fe15afafa15094145b5c80aa0a20e4c737cde450d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ALL_REFILTER_QOS</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>gga2eec16ce240664606523f2f3fe15afafa4e27405a911349d1ea74e08254fe48c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ON_DEMAND_REFILTER_QOS</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>gga2eec16ce240664606523f2f3fe15afafaf380823256d466dbbc35b1e19d0ae10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_HISTORY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSHistoryQosModule.html</anchorfile>
      <anchor>ga2e73ca5ab5c1c6dae089887675579999</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSGroupDataQosModule</name>
    <title>GROUP_DATA</title>
    <filename>group__DDSGroupDataQosModule.html</filename>
    <class kind="struct">DDS_GroupDataQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_GROUPDATA_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSGroupDataQosModule.html</anchorfile>
      <anchor>gab94ea0755d9e2f2c956f7b48399dcef6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSLatencyBudgetQosModule</name>
    <title>LATENCY_BUDGET</title>
    <filename>group__DDSLatencyBudgetQosModule.html</filename>
    <class kind="struct">DDS_LatencyBudgetQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_LATENCYBUDGET_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSLatencyBudgetQosModule.html</anchorfile>
      <anchor>ga10745fee13dae2bf0d513aa2295ca3d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSLifespanQosModule</name>
    <title>LIFESPAN</title>
    <filename>group__DDSLifespanQosModule.html</filename>
    <class kind="struct">DDS_LifespanQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_LIFESPAN_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSLifespanQosModule.html</anchorfile>
      <anchor>ga17656b39e101b3f174892552789f9ad9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSLivelinessQosModule</name>
    <title>LIVELINESS</title>
    <filename>group__DDSLivelinessQosModule.html</filename>
    <class kind="struct">DDS_LivelinessQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_LivelinessQosPolicyKind</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>ga3ea638553fd66356c38071040de062e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_AUTOMATIC_LIVELINESS_QOS</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>gga3ea638553fd66356c38071040de062e5ad9cee7b01dd754152a13b6999b57911b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_MANUAL_BY_PARTICIPANT_LIVELINESS_QOS</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>gga3ea638553fd66356c38071040de062e5a5519eb00b713987173ff0858e7e3c1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_MANUAL_BY_TOPIC_LIVELINESS_QOS</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>gga3ea638553fd66356c38071040de062e5a6ea670a089709fe482e1c92f5ad1c255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_LIVELINESS_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSLivelinessQosModule.html</anchorfile>
      <anchor>ga2ba9dfae3f10f49d0a24d84b916ed559</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSLocatorFilterQosModule</name>
    <title>LOCATORFILTER</title>
    <filename>group__DDSLocatorFilterQosModule.html</filename>
    <class kind="struct">DDS_LocatorFilter_t</class>
    <class kind="struct">DDS_LocatorFilterSeq</class>
    <class kind="struct">DDS_LocatorFilterQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_LOCATORFILTER_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSLocatorFilterQosModule.html</anchorfile>
      <anchor>ga754ade9a53fefb3e3a3792f7990a3817</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSLoggingQosModule</name>
    <title>LOGGING</title>
    <filename>group__DDSLoggingQosModule.html</filename>
    <class kind="struct">DDS_LoggingQosPolicy</class>
  </compound>
  <compound kind="group">
    <name>DDSMultiChannelQosModule</name>
    <title>MULTICHANNEL</title>
    <filename>group__DDSMultiChannelQosModule.html</filename>
    <class kind="struct">DDS_ChannelSettings_t</class>
    <class kind="struct">DDS_ChannelSettingsSeq</class>
    <class kind="struct">DDS_MultiChannelQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_MULTICHANNEL_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSMultiChannelQosModule.html</anchorfile>
      <anchor>ga9c7da23e6a182bc0d3b641715364e121</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSOwnershipQosModule</name>
    <title>OWNERSHIP</title>
    <filename>group__DDSOwnershipQosModule.html</filename>
    <class kind="struct">DDS_OwnershipQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_OwnershipQosPolicyKind</name>
      <anchorfile>group__DDSOwnershipQosModule.html</anchorfile>
      <anchor>gaa88100c64a26cc036cb2eb2d631c3f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SHARED_OWNERSHIP_QOS</name>
      <anchorfile>group__DDSOwnershipQosModule.html</anchorfile>
      <anchor>ggaa88100c64a26cc036cb2eb2d631c3f43a262c9859d5c214495c02cd39366a335f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_EXCLUSIVE_OWNERSHIP_QOS</name>
      <anchorfile>group__DDSOwnershipQosModule.html</anchorfile>
      <anchor>ggaa88100c64a26cc036cb2eb2d631c3f43a6f223289a81f87d7929408a84a27f316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_OWNERSHIP_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSOwnershipQosModule.html</anchorfile>
      <anchor>ga01b90088464ff341702d0c9d65614723</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSOwnershipStrengthQosModule</name>
    <title>OWNERSHIP_STRENGTH</title>
    <filename>group__DDSOwnershipStrengthQosModule.html</filename>
    <class kind="struct">DDS_OwnershipStrengthQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_OWNERSHIPSTRENGTH_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSOwnershipStrengthQosModule.html</anchorfile>
      <anchor>ga6ef729ad8937496eae51bb1b521f7cbb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPartitionQosModule</name>
    <title>PARTITION</title>
    <filename>group__DDSPartitionQosModule.html</filename>
    <class kind="struct">DDS_PartitionQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PARTITION_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSPartitionQosModule.html</anchorfile>
      <anchor>ga342e224dc462b1a921645abc9f40193b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPresentationQosModule</name>
    <title>PRESENTATION</title>
    <filename>group__DDSPresentationQosModule.html</filename>
    <class kind="struct">DDS_PresentationQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_PresentationQosPolicyAccessScopeKind</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>ga123d979f855f637f32eb525b778175b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_INSTANCE_PRESENTATION_QOS</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>gga123d979f855f637f32eb525b778175b2ab7e8c01f13b9c46013094fdee7d6af36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TOPIC_PRESENTATION_QOS</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>gga123d979f855f637f32eb525b778175b2a6d21a371adc6e10a62c2739171f5c22f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_GROUP_PRESENTATION_QOS</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>gga123d979f855f637f32eb525b778175b2ae0591a04e045da1d86f25fa8bec39937</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_HIGHEST_OFFERED_PRESENTATION_QOS</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>gga123d979f855f637f32eb525b778175b2a197081ad5ba206346c667d9cecd7ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PRESENTATION_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSPresentationQosModule.html</anchorfile>
      <anchor>ga900dc2e47524317be59bb2c565f93167</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSProfileQosModule</name>
    <title>PROFILE</title>
    <filename>group__DDSProfileQosModule.html</filename>
    <class kind="struct">DDS_ProfileQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSProfileQosModule.html</anchorfile>
      <anchor>ga8fba065e74868faf649cb8b9a84e225a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPropertyQosModule</name>
    <title>PROPERTY</title>
    <filename>group__DDSPropertyQosModule.html</filename>
    <class kind="struct">DDS_Property_t</class>
    <class kind="struct">DDS_PropertySeq</class>
    <class kind="struct">DDS_PropertyQosPolicy</class>
    <class kind="class">DDSPropertyQosPolicyHelper</class>
    <member kind="function" static="yes">
      <type>static DDS_Long</type>
      <name>get_number_of_properties</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga3be8800428109b6ca1aac5ff41b1e1d5</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>assert_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga82c89cbede7fcc9fd5cfd523c26f4ef1</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const char *value, DDS_Boolean propagate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>add_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>gaaa0a6e88624631d9558ab3a0153fa287</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const char *value, DDS_Boolean propagate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>assert_pointer_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga9765e9ca3de7b8d9c11513aa7f2e5af1</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const void *pointer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>add_pointer_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga2ce1555f7c51496156b4441ebbf5dd2d</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const void *pointer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static struct DDS_Property_t *</type>
      <name>lookup_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga2e48c8cd73cc00cd13dd26173054deae</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>remove_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga9acb767b17df7b2ccaa506c9b3a32a65</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>get_properties</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga1666b0317e288a81339cb99f8dbf6b13</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, struct DDS_PropertySeq &amp;properties, const char *name_prefix)</arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROPERTY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga944fb93c287fe289c504636c8440f09c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSPublishModeQosModule</name>
    <title>PUBLISH_MODE</title>
    <filename>group__DDSPublishModeQosModule.html</filename>
    <class kind="struct">DDS_PublishModeQosPolicy</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PUBLICATION_PRIORITY_UNDEFINED</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>ga7f54323acc81cece560738a363ba1d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_PUBLICATION_PRIORITY_AUTOMATIC</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>ga0a64ad713b96e67908a0abe008cd938a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_PublishModeQosPolicyKind</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>ga7c71d1e8aba7e852f23c9fcce4b80b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_SYNCHRONOUS_PUBLISH_MODE_QOS</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>gga7c71d1e8aba7e852f23c9fcce4b80b42ac767f78a22d81ac1988d6b94d2908a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ASYNCHRONOUS_PUBLISH_MODE_QOS</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>gga7c71d1e8aba7e852f23c9fcce4b80b42a4ca8021581a2541bb90d19d64fb0ac1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PUBLISHMODE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSPublishModeQosModule.html</anchorfile>
      <anchor>gaa607e829eab258e89dad196ee9fcc44e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReaderDataLifecycleQosModule</name>
    <title>READER_DATA_LIFECYCLE</title>
    <filename>group__DDSReaderDataLifecycleQosModule.html</filename>
    <class kind="struct">DDS_ReaderDataLifecycleQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_READERDATALIFECYCLE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSReaderDataLifecycleQosModule.html</anchorfile>
      <anchor>gaa9fba25045c5b10b5893f47e01e596dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReceiverPoolQosModule</name>
    <title>RECEIVER_POOL</title>
    <filename>group__DDSReceiverPoolQosModule.html</filename>
    <class kind="struct">DDS_ReceiverPoolQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_RECEIVERPOOL_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSReceiverPoolQosModule.html</anchorfile>
      <anchor>gae46437082166dad2d34bed8540db692c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LENGTH_AUTO</name>
      <anchorfile>group__DDSReceiverPoolQosModule.html</anchorfile>
      <anchor>ga6933fba9f01758e62c667ddde633fdd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSReliabilityQosModule</name>
    <title>RELIABILITY</title>
    <filename>group__DDSReliabilityQosModule.html</filename>
    <class kind="struct">DDS_ReliabilityQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_ReliabilityQosPolicyKind</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>gaf09e82d431c2328186c7fb4b3fa9ad91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_BEST_EFFORT_RELIABILITY_QOS</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>ggaf09e82d431c2328186c7fb4b3fa9ad91aae82431f2015239328733f3cb41d780d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RELIABLE_RELIABILITY_QOS</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>ggaf09e82d431c2328186c7fb4b3fa9ad91ae5d04022c6405f9db6406489956d1923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_ReliabilityQosPolicyAcknowledgmentModeKind</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>ga288de7529d06055c9edd3900a73f3dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PROTOCOL_ACKNOWLEDGMENT_MODE</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>gga288de7529d06055c9edd3900a73f3dcaaeffb3d742ceb0c5f9f0e6faa9b2be363</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_APPLICATION_AUTO_ACKNOWLEDGMENT_MODE</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>gga288de7529d06055c9edd3900a73f3dcaa03b205febaff413c71b700c4979d8c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_APPLICATION_EXPLICIT_ACKNOWLEDGMENT_MODE</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>gga288de7529d06055c9edd3900a73f3dcaa48e6db746c88202c67f9801d15ba1477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_RELIABILITY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSReliabilityQosModule.html</anchorfile>
      <anchor>gaa2ea1a3a781a45f219367f7692b22d88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSResourceLimitsQosModule</name>
    <title>RESOURCE_LIMITS</title>
    <filename>group__DDSResourceLimitsQosModule.html</filename>
    <class kind="struct">DDS_ResourceLimitsQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_RESOURCELIMITS_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSResourceLimitsQosModule.html</anchorfile>
      <anchor>ga23a54790589cda39a3386d8b125e1d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_Long</type>
      <name>DDS_LENGTH_UNLIMITED</name>
      <anchorfile>group__DDSResourceLimitsQosModule.html</anchorfile>
      <anchor>ga58912505c0b73a5f1d3677eaf9ce9e6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSServiceQosModule</name>
    <title>SERVICE</title>
    <filename>group__DDSServiceQosModule.html</filename>
    <class kind="struct">DDS_ServiceQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_ServiceQosPolicyKind</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>ga463ff5174eda4faf13d45dedcdd0350b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NO_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350ba951693e2fcf81638d79ec887306bc9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_PERSISTENCE_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350bacd29a7f9335d02a4f5967e5ae54a1d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_QUEUING_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350baea2a67c7eaac56d01fd78a2866aaebd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ROUTING_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350ba7a992616cb623c614757b12830ec7e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RECORDING_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350baa15fb944d8d4a432618c7a6a1999d06d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REPLAY_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350ba2c0512c20ba79918fb49ace9afdc4e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DATABASE_INTEGRATION_SERVICE_QOS</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gga463ff5174eda4faf13d45dedcdd0350ba7dd42e61adca9e3936ce450061283d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_SERVICE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSServiceQosModule.html</anchorfile>
      <anchor>gab728b08008a409df0b7a89bc6b93d5f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSSystemResourceLimitsQosModule</name>
    <title>SYSTEM_RESOURCE_LIMITS</title>
    <filename>group__DDSSystemResourceLimitsQosModule.html</filename>
    <class kind="struct">DDS_SystemResourceLimitsQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_SYSTEMRESOURCELIMITS_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSSystemResourceLimitsQosModule.html</anchorfile>
      <anchor>gaf4619064d506b3035184602c6fbca48f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTimeBasedFilterQosModule</name>
    <title>TIME_BASED_FILTER</title>
    <filename>group__DDSTimeBasedFilterQosModule.html</filename>
    <class kind="struct">DDS_TimeBasedFilterQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TIMEBASEDFILTER_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTimeBasedFilterQosModule.html</anchorfile>
      <anchor>gadf9bb98444c0e81442be12f7d4cf1255</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTopicDataQosModule</name>
    <title>TOPIC_DATA</title>
    <filename>group__DDSTopicDataQosModule.html</filename>
    <class kind="struct">DDS_TopicDataQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TOPICDATA_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTopicDataQosModule.html</anchorfile>
      <anchor>ga69cc17a9cadbd428ad6eaea256a76325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportBuiltinQosModule</name>
    <title>TRANSPORT_BUILTIN</title>
    <filename>group__DDSTransportBuiltinQosModule.html</filename>
    <class kind="struct">DDS_TransportBuiltinQosPolicy</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TRANSPORTBUILTIN_MASK_NONE</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>ga6ca4849d4fd1acc45ab078eb6a7369c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TRANSPORTBUILTIN_MASK_DEFAULT</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gab0aa337e14820376edb24366dd8796ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_TRANSPORTBUILTIN_MASK_ALL</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gad3cb1d021917fba305653d540686e8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_Long</type>
      <name>DDS_TransportBuiltinKindMask</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>ga6e1f304ca96188f87b8b35f6c872ef33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_TransportBuiltinKind</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>ga7e413d72243d5e455e53b6c253945f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTBUILTIN_UDPv4</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gga7e413d72243d5e455e53b6c253945f2fab541d85f88d888f2f1eaff0c5eaebd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTBUILTIN_SHMEM</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gga7e413d72243d5e455e53b6c253945f2faf52465922ef11f74c7fa91d36bf3b8d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_TRANSPORTBUILTIN_UDPv6</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gga7e413d72243d5e455e53b6c253945f2fa1fdd0161e262303b4bf32133be1c10de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTBUILTIN_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>ga0b318caf36a4b9f537e00998b83359ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTBUILTIN_SHMEM_ALIAS</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gaef8fc55a836215119b2805d8c01b1680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTBUILTIN_UDPv4_ALIAS</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>gaadda867090751859c8c9a3263cae17b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTBUILTIN_UDPv6_ALIAS</name>
      <anchorfile>group__DDSTransportBuiltinQosModule.html</anchorfile>
      <anchor>ga6f0968f238d76555e8a40de446c4ec2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportMulticastQosModule</name>
    <title>TRANSPORT_MULTICAST</title>
    <filename>group__DDSTransportMulticastQosModule.html</filename>
    <subgroup>DDSTransportMulticastSettingsModule</subgroup>
    <subgroup>DDSTransportMulticastMappingModule</subgroup>
    <class kind="struct">DDS_TransportMulticastQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_TransportMulticastQosPolicyKind</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>ga3fffb4774defdccc38faaea64c40e209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_AUTOMATIC_TRANSPORT_MULTICAST_QOS</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>gga3fffb4774defdccc38faaea64c40e209a4cb9aec4ac33f07a23630b1522463ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_UNICAST_ONLY_TRANSPORT_MULTICAST_QOS</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>gga3fffb4774defdccc38faaea64c40e209aeeb63b90bdca09a992c76a742b453c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTMULTICAST_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTransportMulticastQosModule.html</anchorfile>
      <anchor>ga9565e886335b23f5401673438e5d9e8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportMulticastMappingQosModule</name>
    <title>TRANSPORT_MULTICAST_MAPPING</title>
    <filename>group__DDSTransportMulticastMappingQosModule.html</filename>
    <class kind="struct">DDS_TransportMulticastMappingQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTMULTICASTMAPPING_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTransportMulticastMappingQosModule.html</anchorfile>
      <anchor>ga830714052e5df0248b3771ff2b2fd875</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportPriorityQosModule</name>
    <title>TRANSPORT_PRIORITY</title>
    <filename>group__DDSTransportPriorityQosModule.html</filename>
    <class kind="struct">DDS_TransportPriorityQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTPRIORITY_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTransportPriorityQosModule.html</anchorfile>
      <anchor>gaa22a1344ef745f814ee88652d83e18bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportSelectionQosModule</name>
    <title>TRANSPORT_SELECTION</title>
    <filename>group__DDSTransportSelectionQosModule.html</filename>
    <class kind="struct">DDS_TransportSelectionQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTSELECTION_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTransportSelectionQosModule.html</anchorfile>
      <anchor>ga78b8c9ca7cf6520457012bf15fa8ffb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTransportUnicastQosModule</name>
    <title>TRANSPORT_UNICAST</title>
    <filename>group__DDSTransportUnicastQosModule.html</filename>
    <subgroup>DDSTransportUnicastSettingsModule</subgroup>
    <class kind="struct">DDS_TransportUnicastQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TRANSPORTUNICAST_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTransportUnicastQosModule.html</anchorfile>
      <anchor>ga94b06f9b11ccb85650a8fb51c7afcd54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTypeConsistencyEnforcementQosModule</name>
    <title>TYPE_CONSISTENCY_ENFORCEMENT</title>
    <filename>group__DDSTypeConsistencyEnforcementQosModule.html</filename>
    <class kind="struct">DDS_TypeConsistencyEnforcementQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_TypeConsistencyKind</name>
      <anchorfile>group__DDSTypeConsistencyEnforcementQosModule.html</anchorfile>
      <anchor>ga2f14b750ee0af86a09a0663a9c2c08f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_DISALLOW_TYPE_COERCION</name>
      <anchorfile>group__DDSTypeConsistencyEnforcementQosModule.html</anchorfile>
      <anchor>gga2f14b750ee0af86a09a0663a9c2c08f2a81457fae2aea099cb0374e4cba506750</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ALLOW_TYPE_COERCION</name>
      <anchorfile>group__DDSTypeConsistencyEnforcementQosModule.html</anchorfile>
      <anchor>gga2f14b750ee0af86a09a0663a9c2c08f2afb435413e3805242703990f8a4032942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TYPE_CONSISTENCY_ENFORCEMENT_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTypeConsistencyEnforcementQosModule.html</anchorfile>
      <anchor>gab8a98ab4c76a8414b632796ec4685d1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSTypeSupportQosModule</name>
    <title>TYPESUPPORT</title>
    <filename>group__DDSTypeSupportQosModule.html</filename>
    <class kind="struct">DDS_TypeSupportQosPolicy</class>
    <member kind="enumeration">
      <name>DDS_CdrPaddingKind</name>
      <anchorfile>group__DDSTypeSupportQosModule.html</anchorfile>
      <anchor>ga563e7c4a35aeb2022a2889e37688c620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_ZERO_CDR_PADDING</name>
      <anchorfile>group__DDSTypeSupportQosModule.html</anchorfile>
      <anchor>gga563e7c4a35aeb2022a2889e37688c620af21f6145af2844d0f2ca1cae0ab371b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_NOT_SET_CDR_PADDING</name>
      <anchorfile>group__DDSTypeSupportQosModule.html</anchorfile>
      <anchor>gga563e7c4a35aeb2022a2889e37688c620a064ef575d62dcca00ce28d76e77eb544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_AUTO_CDR_PADDING</name>
      <anchorfile>group__DDSTypeSupportQosModule.html</anchorfile>
      <anchor>gga563e7c4a35aeb2022a2889e37688c620aa350d0bd37a5031ae95f22b31c8ce2d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_TYPESUPPORT_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSTypeSupportQosModule.html</anchorfile>
      <anchor>gaef3412a0fe193f8a5ddd95ed195bcb3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSUserDataQosModule</name>
    <title>USER_DATA</title>
    <filename>group__DDSUserDataQosModule.html</filename>
    <class kind="struct">DDS_UserDataQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_USERDATA_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSUserDataQosModule.html</anchorfile>
      <anchor>ga3938bf7c85a8422a06c97fa3011a51bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSWriterDataLifecycleQosModule</name>
    <title>WRITER_DATA_LIFECYCLE</title>
    <filename>group__DDSWriterDataLifecycleQosModule.html</filename>
    <class kind="struct">DDS_WriterDataLifecycleQosPolicy</class>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_WRITERDATALIFECYCLE_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSWriterDataLifecycleQosModule.html</anchorfile>
      <anchor>ga4747197d5debb5fcac8e1771b7d8f444</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSWireProtocolQosModule</name>
    <title>WIRE_PROTOCOL</title>
    <filename>group__DDSWireProtocolQosModule.html</filename>
    <class kind="struct">DDS_RtpsWellKnownPorts_t</class>
    <class kind="struct">DDS_WireProtocolQosPolicy</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_RTPS_RESERVED_PORT_MASK_DEFAULT</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga1b5419759ed8988eeb702d44081eb7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_RTPS_RESERVED_PORT_MASK_NONE</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga9c310ac062861f4c8f7387296e75789a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDS_RTPS_RESERVED_PORT_MASK_ALL</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga8da9de511f05101aac031e5df5389c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_Long</type>
      <name>DDS_RtpsReservedPortKindMask</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gac88fa6d7bf97f0b0f8aa680b5a4c9bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_RtpsReservedPortKind</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga71e7dce068b419c11d05392cebd3add0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_RESERVED_PORT_BUILTIN_UNICAST</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga71e7dce068b419c11d05392cebd3add0a02ff0d28093a0ce1d0baf6f0e03f54cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_RESERVED_PORT_BUILTIN_MULTICAST</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga71e7dce068b419c11d05392cebd3add0a51db8ff1b6a5acc4da7b67e911c294a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_RESERVED_PORT_USER_UNICAST</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga71e7dce068b419c11d05392cebd3add0aae428873a02ac16fa661a26e1ce98643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_RESERVED_PORT_USER_MULTICAST</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga71e7dce068b419c11d05392cebd3add0a8206ad89b7774789a016bfe62c018c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_WireProtocolQosPolicyAutoKind</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga77715b85c8ddc488532ee25b44ae2298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_AUTO_ID_FROM_IP</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga77715b85c8ddc488532ee25b44ae2298a59784ece459057d0de87f7eff4b21c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_AUTO_ID_FROM_MAC</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga77715b85c8ddc488532ee25b44ae2298ac53f702493967e2f2ee469241c4a5dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_RTPS_AUTO_ID_FROM_UUID</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gga77715b85c8ddc488532ee25b44ae2298ac01dbd34f4f2458d25f22dd5588443ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsWellKnownPorts_t</type>
      <name>DDS_RTI_BACKWARDS_COMPATIBLE_RTPS_WELL_KNOWN_PORTS</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga5502ae29160f5e3387097e02e4f034d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsWellKnownPorts_t</type>
      <name>DDS_INTEROPERABLE_RTPS_WELL_KNOWN_PORTS</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>ga8e1c02e92ccc930c8b89cafeeaf95045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_WIREPROTOCOL_QOS_POLICY_NAME</name>
      <anchorfile>group__DDSWireProtocolQosModule.html</anchorfile>
      <anchor>gabedf25cb9836887985c6a0c5b08fbfda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSExtendedQosSupportModule</name>
    <title>Extended Qos Support</title>
    <filename>group__DDSExtendedQosSupportModule.html</filename>
    <subgroup>DDSThreadSettingsModule</subgroup>
    <class kind="struct">DDS_RtpsReliableReaderProtocol_t</class>
    <class kind="struct">DDS_RtpsReliableWriterProtocol_t</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportUnicastSettingsModule</name>
    <title>Unicast Settings</title>
    <filename>group__DDSTransportUnicastSettingsModule.html</filename>
    <class kind="struct">DDS_TransportUnicastSettings_t</class>
    <class kind="struct">DDS_TransportUnicastSettingsSeq</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportMulticastSettingsModule</name>
    <title>Multicast Settings</title>
    <filename>group__DDSTransportMulticastSettingsModule.html</filename>
    <class kind="struct">DDS_TransportMulticastSettings_t</class>
    <class kind="struct">DDS_TransportMulticastSettingsSeq</class>
  </compound>
  <compound kind="group">
    <name>DDSTransportMulticastMappingModule</name>
    <title>Multicast Mapping</title>
    <filename>group__DDSTransportMulticastMappingModule.html</filename>
    <class kind="struct">DDS_TransportMulticastMappingFunction_t</class>
    <class kind="struct">DDS_TransportMulticastMapping_t</class>
    <class kind="struct">DDS_TransportMulticastMappingSeq</class>
  </compound>
  <compound kind="group">
    <name>NDDS_DISCOVERY_PEERS</name>
    <title>NDDS_DISCOVERY_PEERS</title>
    <filename>group__NDDS__DISCOVERY__PEERS.html</filename>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_locator_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_address_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_env_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_file_format</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_precedence</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_default</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">NDDS_DISCOVERY_PEERS_builtin_transport_class_names</docanchor>
    <docanchor file="group__NDDS__DISCOVERY__PEERS">DDS_DISCOVERY_PEERS_localhost_communication</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSEntityModule</name>
    <title>Entity Support</title>
    <filename>group__DDSEntityModule.html</filename>
    <class kind="class">DDSListener</class>
    <class kind="class">DDSEntity</class>
    <class kind="class">DDSDomainEntity</class>
  </compound>
  <compound kind="group">
    <name>DDSConditionsModule</name>
    <title>Conditions and WaitSets</title>
    <filename>group__DDSConditionsModule.html</filename>
    <class kind="struct">DDS_WaitSetProperty_t</class>
    <class kind="struct">DDSConditionSeq</class>
    <class kind="class">DDSCondition</class>
    <class kind="class">DDSGuardCondition</class>
    <class kind="class">DDSStatusCondition</class>
    <class kind="class">DDSWaitSet</class>
  </compound>
  <compound kind="group">
    <name>DDSCookieModule</name>
    <title>Cookie</title>
    <filename>group__DDSCookieModule.html</filename>
    <class kind="struct">DDS_Cookie_t</class>
  </compound>
  <compound kind="group">
    <name>DDSSampleFlagModule</name>
    <title>Sample Flags</title>
    <filename>group__DDSSampleFlagModule.html</filename>
    <member kind="typedef">
      <type>enum DDS_SampleFlagBits</type>
      <name>DDS_SampleFlagBits</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>gafe51f9aae590e484ae764612d296a0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DDS_Long</type>
      <name>DDS_SampleFlag</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>ga87a0b1b700b979e064dfaec5168f82d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DDS_SampleFlagBits</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>gabc245e63a056e9a47e44d76b304b96b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REDELIVERED_SAMPLE</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>ggabc245e63a056e9a47e44d76b304b96b1a65aae58f2a25ca4dce10d3410291d521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_INTERMEDIATE_REPLY_SEQUENCE_SAMPLE</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>ggabc245e63a056e9a47e44d76b304b96b1acb348c02a94a207e1cda0ffa0096339a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_REPLICATE_SAMPLE</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>ggabc245e63a056e9a47e44d76b304b96b1af6f43de6fa08f050d11e4ec04ec6543f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DDS_LAST_SHARED_READER_QUEUE_SAMPLE</name>
      <anchorfile>group__DDSSampleFlagModule.html</anchorfile>
      <anchor>ggabc245e63a056e9a47e44d76b304b96b1a2096ea5659be98b2d4f6c0bb66de0668</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSWriteParamsModule</name>
    <title>WriteParams</title>
    <filename>group__DDSWriteParamsModule.html</filename>
    <class kind="struct">DDS_SampleIdentity_t</class>
    <class kind="struct">DDS_AckResponseData_t</class>
    <class kind="struct">DDS_WriteParams_t</class>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>DDS_SampleIdentity_equals</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>gae78cca512205dc5db2a1e097868f980e</anchor>
      <arglist>(const struct DDS_SampleIdentity_t *self, const struct DDS_SampleIdentity_t *other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_WriteParams_reset</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>ga62f0f1b1ee4503c9fedbf340148dca0c</anchor>
      <arglist>(struct DDS_WriteParams_t *self)</arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>writer_guid</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>ga541fc431fa4eb3472e1d5ed3588691ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>sequence_number</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>gab784a7f40efde9c165e60d94c49309a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SampleIdentity_t</type>
      <name>DDS_AUTO_SAMPLE_IDENTITY</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>ga589116c64f4216eafecedaa8b5649661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SampleIdentity_t</type>
      <name>DDS_UNKNOWN_SAMPLE_IDENTITY</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>gae844d8a490343dfaa9facac7566784a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_WriteParams_t</type>
      <name>DDS_WRITEPARAMS_DEFAULT</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>ga7bf52a0658663c171854c10a92a7be2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSHeapClass</name>
    <title>Heap Support</title>
    <filename>group__DDSHeapClass.html</filename>
    <member kind="function">
      <type>void *</type>
      <name>DDS_Heap_calloc</name>
      <anchorfile>group__DDSHeapClass.html</anchorfile>
      <anchor>ga3bdadf75592e3c34edb59f120c604f6b</anchor>
      <arglist>(size_t numElem, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>DDS_Heap_malloc</name>
      <anchorfile>group__DDSHeapClass.html</anchorfile>
      <anchor>ga42637c69d72a9e43c3272931f1d2461b</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_Heap_free</name>
      <anchorfile>group__DDSHeapClass.html</anchorfile>
      <anchor>gae00d96cd7a293a2d9b59cf8ea42d96ab</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSBuiltinQosProfilesModule</name>
    <title>Builtin Qos Profiles</title>
    <filename>group__DDSBuiltinQosProfilesModule.html</filename>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_BUILTIN_QOS_LIB</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gac8ddbed4a6ebeb4c96d291cfd1cfa1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_BASELINE_ROOT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaf6158aa692ca313c020ddeb62e65b8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_BASELINE</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa23a84af58e2418ae4a06c0ac3f6aacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_BASELINE_5_0_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaf8e3aaf19175bacdddeb0e88b0c28e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_BASELINE_5_1_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga27aa003a09cb1fa24529a405688c3e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_BASELINE_5_2_0</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gada2d7fb89a4ee5eb121d1c7174a5ceb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_COMMON</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9c6603e2737ef49c0190ab7e04ae8b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_MONITORING_COMMON</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga59b3f97fbb536c84c4cee613394ccf56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_CONNEXT_MICRO_COMPATIBILITY</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gadf2e38d6ed5fccd22baecd2ec0235420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_OTHER_DDS_VENDOR_COMPATIBILITY</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga4afdc924c8546e748995f69682574f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_510_TRANSPORT_COMPATIBILITY</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga5998bcaf073a8af0467afd38899ef9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_BUILTIN_QOS_LIB_EXP</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaea14dcc7c1bd95e3eac99cb75bbca3ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga014a42b61b8211eb3ed756cea9270b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga8fc9b078df9e3b885c91e59304dcf435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_BEST_EFFORT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae9705c7f3a077ba7d30bfe2e4d6bfb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE_HIGH_THROUGHPUT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9db89b51347cff70b4c8cbaddfdaa39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE_LOW_LATENCY</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga010887ad6f46434b76ebf40e2741b50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_PARTICIPANT_LARGE_DATA</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gabde2971009c250f458aac6428ec134fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_PARTICIPANT_LARGE_DATA_MONITORING</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gab9ceb5e33cb0edfe8b459b40a7284bf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE_LARGE_DATA</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga69065c6ff0d56645b47032c54f914929</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_LARGE_DATA</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga9752106250f452cfaf6946b7abe4b960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE_LARGE_DATA_FAST_FLOW</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga47ca43f019b90f203bd944241f9fa95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE_LARGE_DATA_MEDIUM_FLOW</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga100d67ae1d7da873b89e3fbcbf8bfc11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_STRICT_RELIABLE_LARGE_DATA_SLOW_FLOW</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae4d5d170efa479d47175c9ea50b0673d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_LARGE_DATA_FAST_FLOW</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga7cff15b662bd27da31fd507b091a8218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_LARGE_DATA_MEDIUM_FLOW</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga1c6cb2f0b154ec81e5e4a92e035437d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_LARGE_DATA_SLOW_FLOW</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga0500bc5a6c666c78c0ec27753097387a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_TRANSIENT_LOCAL</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga0017c88750a3e4aace84916db6a10058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_TRANSIENT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga13f5e5704d458cc7dbfb2f7b57cef752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_KEEP_LAST_RELIABLE_PERSISTENT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga4be205a4ac503d4b1ae5e6d02f62ef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_GENERIC_AUTO_TUNING</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga60ab19025d183e7c8317710b7d4cb629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_PERIODIC_DATA</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga15c50c48c70ff7b75ba687b121f9c793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_STREAMING</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa616086aecf4c78606dc27ba053b51e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_RELIABLE_STREAMING</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gadaff173faa04eb6a5f915dbddab5cf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_EVENT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gab4a7dbc71bba7c2bf5cf38e4b689dde6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_ALARM_EVENT</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gacee4ac182195f8d7a3a4d2e5a09a4dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_STATUS</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gae3e95eb9b1c3b9dc06061cb45773ade2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_ALARM_STATUS</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>ga4d84c111a06810dd9a3fa676240f1e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>DDS_PROFILE_PATTERN_LAST_VALUE_CACHE</name>
      <anchorfile>group__DDSBuiltinQosProfilesModule.html</anchorfile>
      <anchor>gaa312ac8dc83f7b90102ff648a4f3a4cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSDomainParticipantConfigParamsModule</name>
    <title>DomainParticipantConfigParams</title>
    <filename>group__DDSDomainParticipantConfigParamsModule.html</filename>
    <class kind="struct">DDS_DomainParticipantConfigParams_t</class>
    <member kind="define">
      <type>#define</type>
      <name>DDS_DomainParticipantConfigParams_t_INITIALIZER</name>
      <anchorfile>group__DDSDomainParticipantConfigParamsModule.html</anchorfile>
      <anchor>ga58ad4f1541ea459a3b486242c0784a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>DDS_DOMAIN_ID_USE_XML_CONFIG</name>
      <anchorfile>group__DDSDomainParticipantConfigParamsModule.html</anchorfile>
      <anchor>ga9c8c18a119504163c8544e719153529e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>DDS_ENTITY_NAME_USE_XML_CONFIG</name>
      <anchorfile>group__DDSDomainParticipantConfigParamsModule.html</anchorfile>
      <anchor>gabb05a486517015ddb5f4e272d4e6348d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>DDS_QOS_ELEMENT_NAME_USE_XML_CONFIG</name>
      <anchorfile>group__DDSDomainParticipantConfigParamsModule.html</anchorfile>
      <anchor>ga4c6600a6ce41ed0f6ebaa05efba39e7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSUserManagedThreadModule</name>
    <title>User-managed Threads</title>
    <filename>group__DDSUserManagedThreadModule.html</filename>
    <class kind="class">DDSThreadFactory</class>
    <member kind="typedef">
      <type>DDS_ThreadFactory_OnSpawnedFunction</type>
      <name>DDSThreadFactory_OnSpawnedFunction</name>
      <anchorfile>group__DDSUserManagedThreadModule.html</anchorfile>
      <anchor>gad11e8bdaf39e54a34af535f13c125501</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DDSOctetBufferClass</name>
    <title>Octet Buffer Support</title>
    <filename>group__DDSOctetBufferClass.html</filename>
    <member kind="function">
      <type>unsigned char *</type>
      <name>DDS_OctetBuffer_alloc</name>
      <anchorfile>group__DDSOctetBufferClass.html</anchorfile>
      <anchor>ga6874aeb6ea85085d8ee231acb03046f7</anchor>
      <arglist>(unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>DDS_OctetBuffer_dup</name>
      <anchorfile>group__DDSOctetBufferClass.html</anchorfile>
      <anchor>ga4044b653a659395927fd737d4f4ddc21</anchor>
      <arglist>(const unsigned char *buffer, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_OctetBuffer_free</name>
      <anchorfile>group__DDSOctetBufferClass.html</anchorfile>
      <anchor>gab1544366d61e59aa40086de42ce0829d</anchor>
      <arglist>(unsigned char *buffer)</arglist>
    </member>
    <docanchor file="group__DDSOctetBufferClass">DDSOctetBufferClass_conventions</docanchor>
    <docanchor file="group__DDSOctetBufferClass">DDSOctetBufferClass_usage</docanchor>
  </compound>
  <compound kind="group">
    <name>DDSSequenceModule</name>
    <title>Sequence Support</title>
    <filename>group__DDSSequenceModule.html</filename>
    <subgroup>DDSBuiltinSequenceModule</subgroup>
    <class kind="struct">FooSeq</class>
  </compound>
  <compound kind="group">
    <name>DDSStringClass</name>
    <title>String Support</title>
    <filename>group__DDSStringClass.html</filename>
    <member kind="function">
      <type>char *</type>
      <name>DDS_String_alloc</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>gac243227428eb05799e9f1ab30aeefa85</anchor>
      <arglist>(size_t length)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>DDS_String_dup</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>gaaadc788c3850b5625c6d78794943db7d</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_String_free</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga13074f0132f743923a4a36ee533997fe</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Wchar *</type>
      <name>DDS_Wstring_alloc</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga9aa1d876248a07849dde1d80ad7ddabd</anchor>
      <arglist>(DDS_UnsignedLong length)</arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>DDS_Wstring_length</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga22288be0eacf2af3953451235b09f46c</anchor>
      <arglist>(const DDS_Wchar *str)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Wchar *</type>
      <name>DDS_Wstring_copy</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga3bd687c1bb2d175f2c60a97dff412302</anchor>
      <arglist>(DDS_Wchar *dst, const DDS_Wchar *src)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Wchar *</type>
      <name>DDS_Wstring_copy_and_widen</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga37130e3833ec894270cd5218a614709a</anchor>
      <arglist>(DDS_Wchar *dst, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Wchar *</type>
      <name>DDS_Wstring_dup</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga9918181ab2531231c49f74bc8adbf66a</anchor>
      <arglist>(const DDS_Wchar *str)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Wchar *</type>
      <name>DDS_Wstring_dup_and_widen</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga075cf1127c65bbea736e06a1c79c5118</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DDS_Wstring_free</name>
      <anchorfile>group__DDSStringClass.html</anchorfile>
      <anchor>ga778f647e401f39a32e67c15dca5bdbff</anchor>
      <arglist>(DDS_Wchar *str)</arglist>
    </member>
    <docanchor file="group__DDSStringClass">DDSStringClass_conventions</docanchor>
    <docanchor file="group__DDSStringClass">DDSStringClass_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_AcknowledgmentInfo</name>
    <filename>structDDS__AcknowledgmentInfo.html</filename>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>subscription_handle</name>
      <anchorfile>structDDS__AcknowledgmentInfo.html</anchorfile>
      <anchor>a21c5527d6ff43651ed354a2587e9032e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SampleIdentity_t</type>
      <name>sample_identity</name>
      <anchorfile>structDDS__AcknowledgmentInfo.html</anchorfile>
      <anchor>a77924c80fdd7f4c6cd5b284136df7238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>valid_response_data</name>
      <anchorfile>structDDS__AcknowledgmentInfo.html</anchorfile>
      <anchor>af567538f6fd4c69c9616235fff0303b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AckResponseData_t</type>
      <name>response_data</name>
      <anchorfile>structDDS__AcknowledgmentInfo.html</anchorfile>
      <anchor>aa69fff8601c99afb00e43b88c12379f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_AckResponseData_t</name>
    <filename>structDDS__AckResponseData__t.html</filename>
    <member kind="variable">
      <type>struct DDS_OctetSeq</type>
      <name>value</name>
      <anchorfile>structDDS__AckResponseData__t.html</anchorfile>
      <anchor>aedbeb1b4fb8ea1c62cbc9e3c00532933</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_AllocationSettings_t</name>
    <filename>structDDS__AllocationSettings__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_count</name>
      <anchorfile>structDDS__AllocationSettings__t.html</anchorfile>
      <anchor>aa0c1f475fa840bc72d011e9a63cbceab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_count</name>
      <anchorfile>structDDS__AllocationSettings__t.html</anchorfile>
      <anchor>a073162ffde191269a0e7128bd129fefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>incremental_count</name>
      <anchorfile>structDDS__AllocationSettings__t.html</anchorfile>
      <anchor>a41743e8af9c73c45825aa17dd70fc957</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_AsynchronousPublisherQosPolicy</name>
    <filename>structDDS__AsynchronousPublisherQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_asynchronous_write</name>
      <anchorfile>structDDS__AsynchronousPublisherQosPolicy.html</anchorfile>
      <anchor>a7808fc463de942d9129f048791dd769c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ThreadSettings_t</type>
      <name>thread</name>
      <anchorfile>structDDS__AsynchronousPublisherQosPolicy.html</anchorfile>
      <anchor>a63bf9dde43035317f22c78a324e44f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_asynchronous_batch</name>
      <anchorfile>structDDS__AsynchronousPublisherQosPolicy.html</anchorfile>
      <anchor>a4194b5ed17b811ac0bcfc29caf44b919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ThreadSettings_t</type>
      <name>asynchronous_batch_thread</name>
      <anchorfile>structDDS__AsynchronousPublisherQosPolicy.html</anchorfile>
      <anchor>ad79a48844bf0a6afea2d239603b109c0</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__AsynchronousPublisherQosPolicy">DDSAsynchronousPublisherQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_AvailabilityQosPolicy</name>
    <filename>structDDS__AvailabilityQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>enable_required_subscriptions</name>
      <anchorfile>structDDS__AvailabilityQosPolicy.html</anchorfile>
      <anchor>a79bb96c3fe8c072c6910e351db6ad7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_data_availability_waiting_time</name>
      <anchorfile>structDDS__AvailabilityQosPolicy.html</anchorfile>
      <anchor>a58852863451f739852b39a13c6b8dcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_endpoint_availability_waiting_time</name>
      <anchorfile>structDDS__AvailabilityQosPolicy.html</anchorfile>
      <anchor>aa48f79008c6b5e8c19d99597185784d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EndpointGroupSeq</type>
      <name>required_matched_endpoint_groups</name>
      <anchorfile>structDDS__AvailabilityQosPolicy.html</anchorfile>
      <anchor>a0005bf94381fe61423e9e776c65a9426</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__AvailabilityQosPolicy">DDSAvailabilityQosModule_usage</docanchor>
    <docanchor file="structDDS__AvailabilityQosPolicy">DDSAvailabilityQosModule_consistency</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_BatchQosPolicy</name>
    <filename>structDDS__BatchQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>enable</name>
      <anchorfile>structDDS__BatchQosPolicy.html</anchorfile>
      <anchor>a8324371a1eb1c03c8781a783a34da35a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_data_bytes</name>
      <anchorfile>structDDS__BatchQosPolicy.html</anchorfile>
      <anchor>a1a58dd062eb3b1c8c0b0f3d30d4bdfe5</anchor>
      <arglist></arglist>
      <docanchor file="structDDS__BatchQosPolicy">DDSBatchQosModule_max_data_bytes_consistency</docanchor>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples</name>
      <anchorfile>structDDS__BatchQosPolicy.html</anchorfile>
      <anchor>a8b334ad9988fcb016b48fd42cc5881ec</anchor>
      <arglist></arglist>
      <docanchor file="structDDS__BatchQosPolicy">DDSBatchQosModule_max_samples_consistency</docanchor>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_flush_delay</name>
      <anchorfile>structDDS__BatchQosPolicy.html</anchorfile>
      <anchor>a72851aa141c9963e808ce1777ac48aea</anchor>
      <arglist></arglist>
      <docanchor file="structDDS__BatchQosPolicy">DDSBatchQosModule_max_flush_delay_consistency</docanchor>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>source_timestamp_resolution</name>
      <anchorfile>structDDS__BatchQosPolicy.html</anchorfile>
      <anchor>a534aacc612c437ec164945c3cb0713ac</anchor>
      <arglist></arglist>
      <docanchor file="structDDS__BatchQosPolicy">DDSBatchQosModule_source_timestamp_resolution_consistency</docanchor>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>thread_safe_write</name>
      <anchorfile>structDDS__BatchQosPolicy.html</anchorfile>
      <anchor>a965f3534dd8633a75b8c908468223c15</anchor>
      <arglist></arglist>
      <docanchor file="structDDS__BatchQosPolicy">DDSBatchQosModule_thread_safe_write_consistency</docanchor>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_BooleanSeq</name>
    <filename>structDDS__BooleanSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_BuiltinTopicKey_t</name>
    <filename>structDDS__BuiltinTopicKey__t.html</filename>
    <member kind="variable">
      <type>DDS_BUILTIN_TOPIC_KEY_TYPE_NATIVE</type>
      <name>value</name>
      <anchorfile>structDDS__BuiltinTopicKey__t.html</anchorfile>
      <anchor>ae1ed8823d7cea0ee8786cd8b3b125556</anchor>
      <arglist>[DDS_BUILTIN_TOPIC_KEY_TYPE_NATIVE_LENGTH]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_BuiltinTopicReaderResourceLimits_t</name>
    <filename>structDDS__BuiltinTopicReaderResourceLimits__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_samples</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>ab5ab5ff0c2303fab9ff06d0cc64f8504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a9ea867d2b1f210e505105efa9762cf14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_infos</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a8e1546b305a9bf1b431b0ec91d8bc0b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_infos</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>afb6d88881a363af5fe373430e575810f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_outstanding_reads</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a2aa4fd171b1071062bb4dba84534a605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_outstanding_reads</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>af0ca796138941181ba89785e85640f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples_per_read</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a8d4fabf63677ce74dd9fdea54ab20ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_fragmentation_support</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a5cba4e12015f1b2b98d020b40a70fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_fragmented_samples</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a308718d47a8c484715abdf8f9e82a242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_fragmented_samples</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>ae4b2d2d67108aeca90a47194824a3121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_fragmented_samples_per_remote_writer</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>ac04d8487854cfc1e3fc1d1671108c841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_fragments_per_sample</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>aea252713d7fc7c51054d93d7e118e97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>dynamically_allocate_fragmented_samples</name>
      <anchorfile>structDDS__BuiltinTopicReaderResourceLimits__t.html</anchorfile>
      <anchor>a5624940b36f32ed34cdbc6f3630fac04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ChannelSettings_t</name>
    <filename>structDDS__ChannelSettings__t.html</filename>
    <member kind="variable">
      <type>struct DDS_TransportMulticastSettingsSeq</type>
      <name>multicast_settings</name>
      <anchorfile>structDDS__ChannelSettings__t.html</anchorfile>
      <anchor>abf11a7af0e36554fe0f0b7c8ba6e1d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filter_expression</name>
      <anchorfile>structDDS__ChannelSettings__t.html</anchorfile>
      <anchor>a35746740ca9dddd7a38e3bd971c7fc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>priority</name>
      <anchorfile>structDDS__ChannelSettings__t.html</anchorfile>
      <anchor>a0da9c5019b87eb8151052977437cfbcc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ChannelSettingsSeq</name>
    <filename>structDDS__ChannelSettingsSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_CharSeq</name>
    <filename>structDDS__CharSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_ContentFilterProperty_t</name>
    <filename>structDDS__ContentFilterProperty__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>content_filter_topic_name</name>
      <anchorfile>structDDS__ContentFilterProperty__t.html</anchorfile>
      <anchor>af174a0668858490a0680d6449a7fa941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>related_topic_name</name>
      <anchorfile>structDDS__ContentFilterProperty__t.html</anchorfile>
      <anchor>aa649949c779496a688847d1cd4680d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filter_class_name</name>
      <anchorfile>structDDS__ContentFilterProperty__t.html</anchorfile>
      <anchor>ac91f62b0adb8f41cd5a6a630a81c48e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filter_expression</name>
      <anchorfile>structDDS__ContentFilterProperty__t.html</anchorfile>
      <anchor>aac3b491b2c8fb3f17bbdc6bc5158b81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>expression_parameters</name>
      <anchorfile>structDDS__ContentFilterProperty__t.html</anchorfile>
      <anchor>aa0cc70b50cf80d776969b2a8594f5a7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_Cookie_t</name>
    <filename>structDDS__Cookie__t.html</filename>
    <member kind="variable">
      <type>struct DDS_OctetSeq</type>
      <name>value</name>
      <anchorfile>structDDS__Cookie__t.html</anchorfile>
      <anchor>aeb01120181ecb1cd661a41894d69f3f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DatabaseQosPolicy</name>
    <filename>structDDS__DatabaseQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_ThreadSettings_t</type>
      <name>thread</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>abe59b18ab33b6abbbcbd869dedfa93bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>shutdown_timeout</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>afcf4a476f5b2930c52fa0b46707977b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>cleanup_period</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>a58ee0babaa65dbb435aa788dd649f172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>shutdown_cleanup_period</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>a17dc46e4dd757576e6cc68487379f6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_records</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>a852c16fa2f43abda220a89fd45865cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_skiplist_level</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>a2dcee72a51e6a9efcf09d7d7ffa7be2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_weak_references</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>a883add16220593c018b2e8255a6413fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_weak_references</name>
      <anchorfile>structDDS__DatabaseQosPolicy.html</anchorfile>
      <anchor>a7eb2d88b6aff37ea157edecee67201c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataReaderCacheStatus</name>
    <filename>structDDS__DataReaderCacheStatus.html</filename>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sample_count_peak</name>
      <anchorfile>structDDS__DataReaderCacheStatus.html</anchorfile>
      <anchor>af18f29c855f554132e005bbaf16a4e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sample_count</name>
      <anchorfile>structDDS__DataReaderCacheStatus.html</anchorfile>
      <anchor>a367964c71438881a176851f2e22cedbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataReaderProtocolQosPolicy</name>
    <filename>structDDS__DataReaderProtocolQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>virtual_guid</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>aa0a668d93724b44b2f548160cf67ef0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>rtps_object_id</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>a5e88dab82a659401efbfed7ae2dd7ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>expects_inline_qos</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>adf4d61ee211ccb5d86f847e9632bc5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_positive_acks</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>af57b5cff82b583c119730bfe614ee628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>propagate_dispose_of_unregistered_instances</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>a6e29a7af72fac32b0567da59c800b558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>propagate_unregister_of_disposed_instances</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>a4798ad3698b566e5e376627f4a21cef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableReaderProtocol_t</type>
      <name>rtps_reliable_reader</name>
      <anchorfile>structDDS__DataReaderProtocolQosPolicy.html</anchorfile>
      <anchor>ac962c1b10fbf15c0a68d975f9e95d995</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataReaderProtocolStatus</name>
    <filename>structDDS__DataReaderProtocolStatus.html</filename>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_sample_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a6450c822d25c25f45d7983aed50053e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_sample_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>ab78c5a36118e560908bf98d9a6fc6e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_sample_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>aff143f3b0a66398e51772489b72fbe14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_sample_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a378a36842f1d4a07bae362a187bb9722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>duplicate_sample_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a9823a3908aef514b94a8974229d444da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>duplicate_sample_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>aa17367b4e30b00ff3cc7b53e4275af20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>duplicate_sample_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>ab73ec6267290a50373076a94b1cad62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>duplicate_sample_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>abb946e1760220f2b59a0e2aac0067c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a0314b65de985e64e554be6dd7c0e433e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a8b3090165de26cafbaf5c96eedf5377c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a699c9b3c7a8d24bb0e38197c0e0cc6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>afdcc9056aee1942975e05ce6c7fa4eab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_heartbeat_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a438aa50234e75b1bfc6b5218eeff67a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_heartbeat_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>ae038741ffb2a13a389e833bebf194323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_heartbeat_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>afde6e80305f8e65befe4444308129d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_heartbeat_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>ab1936c9237b0f84f1e8c293292f61fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_ack_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>af4f6e0c5fffad76ad6cf9ce133766656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_ack_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a325c162e548a123f3760cbbe22f3e60b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_ack_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>aee08837a58fdb2524930694a524aec65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_ack_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>ac15e4e640380b70c5c9374c9e062a6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_nack_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a267cfcb222f600f2ccd01a76c52581f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_nack_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a3a94e2e33a967ae8a212968bc51362f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_nack_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a52570022bf134a13768da1f9b5352164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_nack_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>aaf39b497efc7f81db168b2740c814027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_gap_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a0bab39ca047913b7b873a260079efc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_gap_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a71b2f9ba7e875d86f43a1bdd31e1e8d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_gap_bytes</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>afc7e4f4c736ee36f7c34b17d8836261d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_gap_bytes_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a38340ed75be0d97564657e455c3b8b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>rejected_sample_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a36de0ca445f1fdc3fcce390c7e5d75d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>rejected_sample_count_change</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a34710beb763a2089664d439272fe5b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>first_available_sample_sequence_number</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>aca350c9759e0d5552bf2ecffb6fd49f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>last_available_sample_sequence_number</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>ac30430e8d7538e29bc664d102b6ca88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>last_committed_sample_sequence_number</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a1ae028a318d3925477886eb3537d82bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>uncommitted_sample_count</name>
      <anchorfile>structDDS__DataReaderProtocolStatus.html</anchorfile>
      <anchor>a01cb8f2645ced9c99fdbc4c82dca1943</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataReaderQos</name>
    <filename>structDDS__DataReaderQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a5a46348c62dc5a4594ec798babb16175</anchor>
      <arglist>(const DDS_DataReaderQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>aa725129a084cf7cc5a88e3240790bc0c</anchor>
      <arglist>(const DDS_DataReaderQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityQosPolicy</type>
      <name>durability</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a773c37cf8218a8fc52ed862f61a9ffb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DeadlineQosPolicy</type>
      <name>deadline</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a490674322e9365f8fa7c1240d84371e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LatencyBudgetQosPolicy</type>
      <name>latency_budget</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a9dcd621be2055fbaf344782537385c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LivelinessQosPolicy</type>
      <name>liveliness</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a8aeff400ce1755fc2ee1c110c9f94d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliabilityQosPolicy</type>
      <name>reliability</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a4bf8f25113b843eb1dd45326d01b2341</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DestinationOrderQosPolicy</type>
      <name>destination_order</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a5e6b5a0bb4a1c5c03c0509e3ef80b2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_HistoryQosPolicy</type>
      <name>history</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a03484335737f91b92a89cb0ebbe18655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ResourceLimitsQosPolicy</type>
      <name>resource_limits</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a27f550c1f22be54dfe3b69e007fabad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_UserDataQosPolicy</type>
      <name>user_data</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a24dfd6a672faaa0d65047747f21d91ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipQosPolicy</type>
      <name>ownership</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>aa5360151520cbee3661f720525f16f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TimeBasedFilterQosPolicy</type>
      <name>time_based_filter</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>aa0a89101de5b9d0028f04877139262cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReaderDataLifecycleQosPolicy</type>
      <name>reader_data_lifecycle</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a97c41d195de10ea5645cb8e34d938c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeConsistencyEnforcementQosPolicy</type>
      <name>type_consistency</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a6b7f33ee133e8dc419625f2564752020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataReaderResourceLimitsQosPolicy</type>
      <name>reader_resource_limits</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>ac6f4f6e01f59c4d53490717db313bd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataReaderProtocolQosPolicy</type>
      <name>protocol</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a3f75d761d08de6457f9e81d81fa2174d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportSelectionQosPolicy</type>
      <name>transport_selection</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>ae41f3b2e31385cb93647e430d87ae343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportUnicastQosPolicy</type>
      <name>unicast</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a25a95b0fa7c430d30431284132f808ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportMulticastQosPolicy</type>
      <name>multicast</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a88be8296924413045ef04f93e097d6ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PropertyQosPolicy</type>
      <name>property</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a9999e4ac4149fad62a7011e01c13481e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ServiceQosPolicy</type>
      <name>service</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>ad53e35739f78b585fd0894f1468f75a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AvailabilityQosPolicy</type>
      <name>availability</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a1b96d6554ff66fe8b983affb5a02d29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>subscription_name</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a5e49f4b0b3fda24a86ab70e05be5ae08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportPriorityQosPolicy</type>
      <name>transport_priority</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a5629205e461569706c89618153eba383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeSupportQosPolicy</type>
      <name>type_support</name>
      <anchorfile>structDDS__DataReaderQos.html</anchorfile>
      <anchor>a55132672f1023daa0855d23b32e981ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataReaderResourceLimitsQosPolicy</name>
    <filename>structDDS__DataReaderResourceLimitsQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_writers</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae89be540f623745dab6b0d6379037da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_writers_per_instance</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a79ab710ce28f1718df9a42cd10a46b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples_per_remote_writer</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a7210d8354ee1db9a55fc18ed56105d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_infos</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6f871521d0791014ee54ec70ee57cbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_remote_writers</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a82f44e7655fa6535a464b09f7e447743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_remote_writers_per_instance</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a9e822ed635a2ba4dc26668df7306a2ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_infos</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a7d00e4c0128edfbd6d501e2094162c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_outstanding_reads</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a0e3217a96e2ec0d7a3803adfe7c3b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_outstanding_reads</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a82873fd35e4159bce6c23cc0de5fcca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples_per_read</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a3672d889d158f8da9c2465e5ec3046c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_fragmentation_support</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae6b5f1ff7b6954e38b8693eefc7e781f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_fragmented_samples</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ab829f0f900a4eb50dd796040f70afb26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_fragmented_samples</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>af997416e8a8dab3f2e309a68ed48bb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_fragmented_samples_per_remote_writer</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a1f4afc77231d262ce0e1a320b5e6f964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_fragments_per_sample</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a67642418056ab77f7102eb1e735a5bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>dynamically_allocate_fragmented_samples</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>abd03f44d9c89ebe7dd0cd8026c671129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_total_instances</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a90e66c63b7fdafccd4090792c47ec79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_virtual_writers</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a1334473402f0fcd847ed0c1949a511b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_remote_virtual_writers</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a0dfb9b5fb92024e4e56ab5fe56e87140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_virtual_writers_per_instance</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a162eee845adbe96f8f40a9966a066a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_remote_virtual_writers_per_instance</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a354bb399a209e710ecc7093e77de2c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_writers_per_sample</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a004638f76e0cbbdd8018cedca107a34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_query_condition_filters</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>abd0bbad5b44d11f09cd7c4d2a738765b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_app_ack_response_length</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a22e6ff9fcd67631949d80ff737a7d514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>keep_minimum_state_for_instances</name>
      <anchorfile>structDDS__DataReaderResourceLimitsQosPolicy.html</anchorfile>
      <anchor>abf3642407abc792f2a8929570b870a65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataWriterCacheStatus</name>
    <filename>structDDS__DataWriterCacheStatus.html</filename>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sample_count_peak</name>
      <anchorfile>structDDS__DataWriterCacheStatus.html</anchorfile>
      <anchor>adf72fbaccb17884308d466a69c758996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sample_count</name>
      <anchorfile>structDDS__DataWriterCacheStatus.html</anchorfile>
      <anchor>aae687743d9bfc042138403cea816d991</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataWriterProtocolQosPolicy</name>
    <filename>structDDS__DataWriterProtocolQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>virtual_guid</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a8a2a9cfa7948d4a20bc07dd0b1a73651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>rtps_object_id</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a7cf2b8d79c78ecd65f8a98921dcf1f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>push_on_write</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a1a6869d778673c72e269dfb5ebd5ff7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_positive_acks</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a24c907704252724906cc913a9445ec27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_inline_keyhash</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a528d881bd67054fab2b5b9ebbb3949d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>serialize_key_with_dispose</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a7d8c1e77cbcf49d4b993d2e567c6468a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>propagate_app_ack_with_no_response</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a7da010da4a59d2c284828f2c799cabda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableWriterProtocol_t</type>
      <name>rtps_reliable_writer</name>
      <anchorfile>structDDS__DataWriterProtocolQosPolicy.html</anchorfile>
      <anchor>a073f347f5d06730a44c411e5ce25fe6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataWriterProtocolStatus</name>
    <filename>structDDS__DataWriterProtocolStatus.html</filename>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pushed_sample_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a12495956577f9d5a6d7d430aaf3c0e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pushed_sample_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>af720cc676bef0fd04bb1efab932f1a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pushed_sample_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a3be8d26ae24a432593bcab682540438c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pushed_sample_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>ab755efadda917c13dee7bd960131ef45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a4957c243bc4783ea18cddb9d1795a9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>adecdd6d0e3b7dd18184635f4ac7c7d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>ab8292b2e90e85cc16ccbb4c2981cce0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>filtered_sample_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a1e4dc7dd1cb90f502f9ef8230e664108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_heartbeat_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>aee963da84a6f4a02efffcbd4c5114f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_heartbeat_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a64740ace028dda9acc52b1108ded43b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_heartbeat_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a1bd8e0e8deb7d4209b8b86dcd852df41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_heartbeat_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a83828daa69602fc3965fa2ecbe766811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pulled_sample_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a4b3f91d3a5f84e1feef8ee99d0625257</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pulled_sample_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>af6164472c3a6c9ede1fa31d3d2c9a3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pulled_sample_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a3225d3541e1811991916510d36d2f0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>pulled_sample_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a1e93f40c9e9b4a01d0e9b14487ceed9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_ack_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a8eeae22651a527f3ce1d3042cdeaa748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_ack_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>acefa8381589129f63436a24fa587140f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_ack_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>afa6a686ae681e8bbdc0276ee52bb170f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_ack_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a200513a4d64eed54c0e9559c7004837e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_nack_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>af8a03adc942d3ab524b7b6bdc63fe166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_nack_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a980ea558af5d6cf543b19fca28623ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_nack_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a42520671719215763f9257dfff72ecbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>received_nack_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>aef4906b7b695b9fceddcaac783094136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_gap_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a8a91673c4503f164def38df566dd7c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_gap_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a8a9c8fb0e4a8bf097518aaa62f0e297d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_gap_bytes</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a5d64d5fe40cd0ef3f4cd636b6ff5ed8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>sent_gap_bytes_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a94b4c5ec7e8d85a25560ed6281cbb4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>rejected_sample_count</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a50ad36a491831b66e402afed7aa558e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_LongLong</type>
      <name>rejected_sample_count_change</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>ae8d27d9504a292a5acc4d37dde207964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>send_window_size</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a8a6c2876c488b14e4d7d13cd73a7280b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>first_available_sample_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a40c3b2a0db1643c5cdc9eb93c1cca24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>last_available_sample_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>ad9c7c625a927c813c0db8e40d2dd7018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>first_unacknowledged_sample_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a9ca72a81a757aeafbc1336ccb4b1c650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>first_available_sample_virtual_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a928dc4d953e23dce3238c37bab5154a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>last_available_sample_virtual_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a6df6be36620391e6d46f8764cf141713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>first_unacknowledged_sample_virtual_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>add2bcaa03eff746c1229fc5c4d20aa75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>first_unacknowledged_sample_subscription_handle</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>a0d9a4348d9ba372472006582eaecdb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>first_unelapsed_keep_duration_sample_sequence_number</name>
      <anchorfile>structDDS__DataWriterProtocolStatus.html</anchorfile>
      <anchor>aa0f7a7a2af42c9c687613a7ae6f3a916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataWriterQos</name>
    <filename>structDDS__DataWriterQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a8d63d83133ff58c3b3bfbc747ba8ac13</anchor>
      <arglist>(const DDS_DataWriterQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>af7c7e75fc6a0717f69ac6be2eea0c6de</anchor>
      <arglist>(const DDS_DataWriterQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityQosPolicy</type>
      <name>durability</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a37fa03c7f1bd7b0a584afd382defd324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityServiceQosPolicy</type>
      <name>durability_service</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a23ab4f34abe53514b8797cb05978034f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DeadlineQosPolicy</type>
      <name>deadline</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a9eaeedfdde65d28d210563e2039bd123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LatencyBudgetQosPolicy</type>
      <name>latency_budget</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>ae5e6c5367a4ffc9ce990c1937e5485e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LivelinessQosPolicy</type>
      <name>liveliness</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>abca7765eae18d4d06835ddb6166d7f8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliabilityQosPolicy</type>
      <name>reliability</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a5268bd83b058755ce8c475da3ba47320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DestinationOrderQosPolicy</type>
      <name>destination_order</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>ae345e3c13aeca8972d7a75378cfa65b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_HistoryQosPolicy</type>
      <name>history</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>af9f94864a545fd0b7205f3b68209bc8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ResourceLimitsQosPolicy</type>
      <name>resource_limits</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>acba41cd24991ce678ad133bcc276b55c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportPriorityQosPolicy</type>
      <name>transport_priority</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a592dc4ca23e177da5f7d84df5f3f1c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LifespanQosPolicy</type>
      <name>lifespan</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a8ae42428d66521e2f1898b484090c9d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_UserDataQosPolicy</type>
      <name>user_data</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a3f145630b7f9627256c0c854de786f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipQosPolicy</type>
      <name>ownership</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a70eb989bc9b61ba88d0d4ea7de5206a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipStrengthQosPolicy</type>
      <name>ownership_strength</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a2e629630ceb241efaa8699f728847f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_WriterDataLifecycleQosPolicy</type>
      <name>writer_data_lifecycle</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>aab281f387079bf167d0f98f8944daaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataWriterResourceLimitsQosPolicy</type>
      <name>writer_resource_limits</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a14ef85955ab7c01c1b4eff56e2479149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DataWriterProtocolQosPolicy</type>
      <name>protocol</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a7a31aa6f32bd67ba2609d75702a6ba1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportSelectionQosPolicy</type>
      <name>transport_selection</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a03b5325b63abf5f00f92fca0b431e7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportUnicastQosPolicy</type>
      <name>unicast</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>ad6c6afd00b73cf2dc14785c7463f8ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PublishModeQosPolicy</type>
      <name>publish_mode</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>ac37f1fe53d755fc7d6b372b5159ce353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PropertyQosPolicy</type>
      <name>property</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a3bd43c56430260d3fa3947b362f903c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ServiceQosPolicy</type>
      <name>service</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a11b6a097a4351c8494f0722c3dd4eca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_BatchQosPolicy</type>
      <name>batch</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>ac4436ea094d7e187b462e274d32dba98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_MultiChannelQosPolicy</type>
      <name>multi_channel</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>ae047013a468a8cf4945a60563cb68224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AvailabilityQosPolicy</type>
      <name>availability</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a153bb9a3c10c51c494148b20b1e59a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>publication_name</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a2271bd1fa6ed7d53fba82b603b9b2836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeSupportQosPolicy</type>
      <name>type_support</name>
      <anchorfile>structDDS__DataWriterQos.html</anchorfile>
      <anchor>a40a65c5ab2e4e5eb549d973f9070734f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DataWriterResourceLimitsQosPolicy</name>
    <filename>structDDS__DataWriterResourceLimitsQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_concurrent_blocking_threads</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aa9301a0ac214a885aa7090df82cfe379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_concurrent_blocking_threads</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a55a4971d099b159567805143262f5fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_reader_filters</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aa7a681cc4e445f5554947fd8fe7ea8d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_batches</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aab6420cc36ff42174fe0b87ab37adb98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_batches</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a51214037c1916adf948814915c95bbfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_DataWriterResourceLimitsInstanceReplacementKind</type>
      <name>instance_replacement</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aa3096f84ff6ef88d24193839da252b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>replace_empty_instances</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a93a49c6de19f143e4832362ce530dca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>autoregister_instances</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6845f18cc4d999f6db20fe25e9a1e5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_virtual_writers</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6115c592654801f1ac128db3a88a7a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_virtual_writers</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a270e412af06fcb0d68fce88b7585d175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_remote_readers</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6f64b3e30241cdb06ce4942641336025</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_app_ack_remote_readers</name>
      <anchorfile>structDDS__DataWriterResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aef96d76fe9d30d660d15e23b6977f62b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DeadlineQosPolicy</name>
    <filename>structDDS__DeadlineQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>period</name>
      <anchorfile>structDDS__DeadlineQosPolicy.html</anchorfile>
      <anchor>a3bc084edc8320df0e64d8ac2b857635d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__DeadlineQosPolicy">DDSDeadlineQosModule_usage</docanchor>
    <docanchor file="structDDS__DeadlineQosPolicy">DDSDeadlineQosModule_compatibility</docanchor>
    <docanchor file="structDDS__DeadlineQosPolicy">DDSDeadlineQosModule_consistency</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_DestinationOrderQosPolicy</name>
    <filename>structDDS__DestinationOrderQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_DestinationOrderQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__DestinationOrderQosPolicy.html</anchorfile>
      <anchor>a6b16d4602f9b8dde684f8dd737958bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>source_timestamp_tolerance</name>
      <anchorfile>structDDS__DestinationOrderQosPolicy.html</anchorfile>
      <anchor>a692d1a1f1117dbb9eadb980a41f8a156</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__DestinationOrderQosPolicy">DDSDestinationOrderQosModule_usage</docanchor>
    <docanchor file="structDDS__DestinationOrderQosPolicy">DDSDestinationOrderQosModule_compatibility</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_DiscoveryConfigQosPolicy</name>
    <filename>structDDS__DiscoveryConfigQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>participant_liveliness_lease_duration</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a78c4d3b8bda361a00e123f58ea496e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>participant_liveliness_assert_period</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a58d8005ad44ec8545eaaa019bc77524c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_RemoteParticipantPurgeKind</type>
      <name>remote_participant_purge_kind</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>acfd0ee9f3d19feb198c234c7959bc56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_liveliness_loss_detection_period</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ab60026edbf67766f2ca901337ca65463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_participant_announcements</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a2abc915422be346150d8cfc09d3345e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>min_initial_participant_announcement_period</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a5b625b0ae085116b68955243308ad521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_initial_participant_announcement_period</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>aecd01b607e910c49c9e3dcb184e688c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_BuiltinTopicReaderResourceLimits_t</type>
      <name>participant_reader_resource_limits</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>aa5549937794c08f395a725a22cb4c601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableReaderProtocol_t</type>
      <name>publication_reader</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a582ad216653b81cd3e6645684035d1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_BuiltinTopicReaderResourceLimits_t</type>
      <name>publication_reader_resource_limits</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a61292b4827f01f470c0d423605b9e703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableReaderProtocol_t</type>
      <name>subscription_reader</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ae9e22f94e06b6f2e8d14f1bef594f708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_BuiltinTopicReaderResourceLimits_t</type>
      <name>subscription_reader_resource_limits</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ae1dff56a9e82a553bd0dfc65c68eabe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableWriterProtocol_t</type>
      <name>publication_writer</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a4dd350ea9eb8f9a2cae267bb5e019981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_WriterDataLifecycleQosPolicy</type>
      <name>publication_writer_data_lifecycle</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>af09ec8b56f9ca57ecf255448cdc597d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableWriterProtocol_t</type>
      <name>subscription_writer</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a27ccb8e5002c6f48ab0ac5e1181398eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_WriterDataLifecycleQosPolicy</type>
      <name>subscription_writer_data_lifecycle</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ae392e79d8c02c84d7c0eaf2fef8d3383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_DiscoveryConfigBuiltinPluginKindMask</type>
      <name>builtin_discovery_plugins</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a890fa00bfca67626fc0f083854f37092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ReliabilityQosPolicyKind</type>
      <name>participant_message_reader_reliability_kind</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>af758085b3f24d0c40c3e134a2436f191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableReaderProtocol_t</type>
      <name>participant_message_reader</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ab4ac91c7d91b09177f8616aacb6ddac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsReliableWriterProtocol_t</type>
      <name>participant_message_writer</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>aee2a53191d51da9a648e09ff81bda1cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PublishModeQosPolicy</type>
      <name>publication_writer_publish_mode</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a995552a14a096220b99fad1967866be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PublishModeQosPolicy</type>
      <name>subscription_writer_publish_mode</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a355ef3cbf54ee8a2173607f58372c3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AsynchronousPublisherQosPolicy</type>
      <name>asynchronous_publisher</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ad0364fda2576f4329035e01878973c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>default_domain_announcement_period</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>a2752eac191f6864b08436ca1064e8a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>ignore_default_domain_announcements</name>
      <anchorfile>structDDS__DiscoveryConfigQosPolicy.html</anchorfile>
      <anchor>ad5ebda7333ed1a9f5eca281dd564ecf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DiscoveryQosPolicy</name>
    <filename>structDDS__DiscoveryQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>enabled_transports</name>
      <anchorfile>structDDS__DiscoveryQosPolicy.html</anchorfile>
      <anchor>a9ee4ed308f6ef12bbc2299fe242f5f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>initial_peers</name>
      <anchorfile>structDDS__DiscoveryQosPolicy.html</anchorfile>
      <anchor>a7f767e8bb620e6ae873479d9975accbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>multicast_receive_addresses</name>
      <anchorfile>structDDS__DiscoveryQosPolicy.html</anchorfile>
      <anchor>a3b418c737004c65e39715e6bb56c1bc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>metatraffic_transport_priority</name>
      <anchorfile>structDDS__DiscoveryQosPolicy.html</anchorfile>
      <anchor>ab9e5fcdee48bc5f6955e56d386e776d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>accept_unknown_peers</name>
      <anchorfile>structDDS__DiscoveryQosPolicy.html</anchorfile>
      <anchor>a0b53178426ae877ea27b90c70cedaec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>enable_endpoint_discovery</name>
      <anchorfile>structDDS__DiscoveryQosPolicy.html</anchorfile>
      <anchor>a7b1400c39293827e9199ba13780b1b21</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__DiscoveryQosPolicy">DDSDiscoveryQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_DomainParticipantConfigParams_t</name>
    <filename>structDDS__DomainParticipantConfigParams__t.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>domain_id</name>
      <anchorfile>structDDS__DomainParticipantConfigParams__t.html</anchorfile>
      <anchor>aa8c75b0ab49766ec907c7fbd08c37444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>participant_name</name>
      <anchorfile>structDDS__DomainParticipantConfigParams__t.html</anchorfile>
      <anchor>adb97acfa4e940afe8d00a94e999b7641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>participant_qos_library_name</name>
      <anchorfile>structDDS__DomainParticipantConfigParams__t.html</anchorfile>
      <anchor>a2c43c16d0c8604d7687cd425e9573064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>participant_qos_profile_name</name>
      <anchorfile>structDDS__DomainParticipantConfigParams__t.html</anchorfile>
      <anchor>af8158c414de75ab5079683c266413923</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>domain_entity_qos_library_name</name>
      <anchorfile>structDDS__DomainParticipantConfigParams__t.html</anchorfile>
      <anchor>a506f2eea2a8876370da6c522d6f607b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>domain_entity_qos_profile_name</name>
      <anchorfile>structDDS__DomainParticipantConfigParams__t.html</anchorfile>
      <anchor>a60eca413d06388e20ac0f7f91e0db36c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DomainParticipantFactoryQos</name>
    <filename>structDDS__DomainParticipantFactoryQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a724a1bef6b387074fe0ebb64506cb7fb</anchor>
      <arglist>(const DDS_DomainParticipantFactoryQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a9a4aaee783258afd6e116702f73a4fdc</anchor>
      <arglist>(const DDS_DomainParticipantFactoryQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityFactoryQosPolicy</type>
      <name>entity_factory</name>
      <anchorfile>structDDS__DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a02dc2ae2e347305a6f1735fbf1f51677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SystemResourceLimitsQosPolicy</type>
      <name>resource_limits</name>
      <anchorfile>structDDS__DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a1e06a547d236cbba768b708ed62337e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ProfileQosPolicy</type>
      <name>profile</name>
      <anchorfile>structDDS__DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a4fd711ef77e1cf45a5ddeaf037c169d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LoggingQosPolicy</type>
      <name>logging</name>
      <anchorfile>structDDS__DomainParticipantFactoryQos.html</anchorfile>
      <anchor>a3c2198e494e66919db3224262c3c2dab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DomainParticipantQos</name>
    <filename>structDDS__DomainParticipantQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a9ff189ad9e04c8610c7e6bb205e47093</anchor>
      <arglist>(const DDS_DomainParticipantQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a26b3aa2f9c39663d595bd7edab891e36</anchor>
      <arglist>(const DDS_DomainParticipantQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_UserDataQosPolicy</type>
      <name>user_data</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>ad25fbfa462bf8a35bc8f3f97078d9b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityFactoryQosPolicy</type>
      <name>entity_factory</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a1fda50d3d2d8e95e07408a9bec2cd8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_WireProtocolQosPolicy</type>
      <name>wire_protocol</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a1b49955a2e19cd71e131dc35c583f429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportBuiltinQosPolicy</type>
      <name>transport_builtin</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a3cb5ef6780f60c92c52ee86593b2de7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportUnicastQosPolicy</type>
      <name>default_unicast</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a9c456eb0fe8c34fffe3f17d32d69b2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DiscoveryQosPolicy</type>
      <name>discovery</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>aed1ebb084373f4a46c9566bd6c392e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DomainParticipantResourceLimitsQosPolicy</type>
      <name>resource_limits</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>ab52b04a5ddfb4bdf50534ef410a65fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EventQosPolicy</type>
      <name>event</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>aba141910e59b298acc893ab545b36894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReceiverPoolQosPolicy</type>
      <name>receiver_pool</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a19350d639073352cad0abafe44d003a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DatabaseQosPolicy</type>
      <name>database</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a9d74f7ae55f1e2fe340b3494877055b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DiscoveryConfigQosPolicy</type>
      <name>discovery_config</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a2b9b48fcc81e247656a8db38e6ed1778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PropertyQosPolicy</type>
      <name>property</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>af292ae3a6358178b9170a123ac2ded1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>participant_name</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a8ebae4aadc6caa1958ad599606b329a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportMulticastMappingQosPolicy</type>
      <name>multicast_mapping</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a7ceb841932337c0b468d103cae76b9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeSupportQosPolicy</type>
      <name>type_support</name>
      <anchorfile>structDDS__DomainParticipantQos.html</anchorfile>
      <anchor>a6e9b58cbc7f1e5288325f23b01aa1a51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DomainParticipantResourceLimitsQosPolicy</name>
    <filename>structDDS__DomainParticipantResourceLimitsQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>local_writer_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a3347cc2a914c30acaa1ee4f9ba986e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>local_reader_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6fc288aa6006c1ff7cdc5b417dbc8ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>local_publisher_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a2177c292404266bdc851ef61b23019a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>local_subscriber_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a1190a056417b90808ae15f2042758d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>local_topic_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>abc22d569ddc1e74b6ab3a536991665d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>remote_writer_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a1b52cdc700ecae67b18f3929d56d666d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>remote_reader_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a1802796a5d26ebf34f931ce2128e07a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>remote_participant_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>af916b1052155aa1daa45b590b5e00f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>matching_writer_reader_pair_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6f4f6a96d6251aadcafd05effcf9bead</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>matching_reader_writer_pair_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a9f5816b097b60d37f1ba03f0394935bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>ignored_entity_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>af531f580e108d445e6a97ce53fe6505f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>content_filtered_topic_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a21202347ddf6bd47cd97664b6026fd04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>content_filter_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>af1f7ee3769bddca21a30fa62c9d6faa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>read_condition_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a614d3e6cc89c4e134972f8ece718bf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>query_condition_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae7b09c606bc332a347b27ade804b0e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>outstanding_asynchronous_sample_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ab89b2ba71e20bef97f1c34886d4445d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AllocationSettings_t</type>
      <name>flow_controller_allocation</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aaf4904b9b8fb9ed650b610a38eaca8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>local_writer_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6ecc7c77c9344783bd304d31444d88ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>local_reader_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aad67df2020bd2ca5c08aa775c60e5561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>local_publisher_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a4abbcfe9a65d368ceb225eee9433112f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>local_subscriber_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6b794249513194e14edc1170f2a72699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>local_topic_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a84594c0ffa6879ee6ac845802465327c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>remote_writer_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a2bd19c09c640f4b2beb36e230eacab3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>remote_reader_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae8acf3de382e4652d6f40fabd491f3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>remote_participant_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a2995076b9e2e6d4d7d8de81d2a35bc4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>matching_writer_reader_pair_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aa3a097f37752c378800099ef22fd93a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>matching_reader_writer_pair_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a907f7752379b840636a367a40d36be2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>ignored_entity_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aac1f2be6cb0a89b68b023b3e11ed3139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>content_filtered_topic_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a3c481b193f33e96624be3c19bccc854b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>content_filter_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a08edfa879fe06d29c55dcc96b4270084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>flow_controller_hash_buckets</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ab4bf38e29a672dcca9fc58ed1bcf8a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_gather_destinations</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a7963dc712bf1b737c4c51e2f185c89cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>participant_user_data_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ad614f99b6fdd36443f3873c2fc4372f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>topic_data_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aaaa9561fca4bc9ba78f795c95d998cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>publisher_group_data_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a68f0f4f2db374a517c036eb16e93c59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>subscriber_group_data_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a50f86f3bdb0f394befd4abe1611efdf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>writer_user_data_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aa11438e715e6704e18173815e3766a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>reader_user_data_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a093ce6b8f97fdaa3d6843071f05afe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_partitions</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6b37b5d8e18a9a3bb40178b74436ec28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_partition_cumulative_characters</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>adaae0663c2f786d8779e126abf8f0779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>type_code_max_serialized_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a55d8561093c4ab21484613a4b8de2999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>type_object_max_serialized_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>af7e993465ab759a9032c95bd19a44262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>type_object_max_deserialized_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ad29a2a0ac775b118bc3e80f290f879c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>deserialized_type_object_dynamic_allocation_threshold</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a5738288b7264799298b99e985cad86fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>contentfilter_property_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aef1ff851202f5777d31528a52d528e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>channel_seq_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae0a143c080d8f9ce1939306ef6e6c749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>channel_filter_expression_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a5b8f830c9eafaef35a4f3a5fe50fa70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>participant_property_list_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a603f54cdee298b107e90b4984641854c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>participant_property_string_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae5d33afb9e6fb931d167754f1ebf641a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>writer_property_list_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>aa5b28c30aa6beda6a0568ba77aa23e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>writer_property_string_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a0a876affe67313f446c01512ff8ea7b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>reader_property_list_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a47ae2ed49d92fb045a78da6e15ac30d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>reader_property_string_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a329bfdf7c0e7ad6f780d5f0602346dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_endpoint_groups</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a6ade5ac0d97d60b7af0c863777354bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_endpoint_group_cumulative_characters</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a5d2d500aa2304bdb80571618ee9aca34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>transport_info_list_max_length</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a8886a393ac7fc8a0f903a1e92c4f9fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_DomainParticipantResourceLimitsIgnoredEntityReplacementKind</type>
      <name>ignored_entity_replacement_kind</name>
      <anchorfile>structDDS__DomainParticipantResourceLimitsQosPolicy.html</anchorfile>
      <anchor>acdcc109cb659ca9386557f696b83bfcb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DoubleSeq</name>
    <filename>structDDS__DoubleSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_DurabilityQosPolicy</name>
    <filename>structDDS__DurabilityQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_DurabilityQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__DurabilityQosPolicy.html</anchorfile>
      <anchor>a3a8d255d2a64010fc8a098290911fe03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>direct_communication</name>
      <anchorfile>structDDS__DurabilityQosPolicy.html</anchorfile>
      <anchor>a61554f529a8935be25c0bc1e099b6672</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__DurabilityQosPolicy">DDSDurabilityQosModule_usage</docanchor>
    <docanchor file="structDDS__DurabilityQosPolicy">DDSDurabilityQosModule_usage_persistence</docanchor>
    <docanchor file="structDDS__DurabilityQosPolicy">DDSDurabilityQosModule_compatibility</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_DurabilityServiceQosPolicy</name>
    <filename>structDDS__DurabilityServiceQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>service_cleanup_delay</name>
      <anchorfile>structDDS__DurabilityServiceQosPolicy.html</anchorfile>
      <anchor>ac7a8523eddd55ccc214144a5d39af775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_HistoryQosPolicyKind</type>
      <name>history_kind</name>
      <anchorfile>structDDS__DurabilityServiceQosPolicy.html</anchorfile>
      <anchor>a0f20c5b7f96c3f1e8945cb094cd42b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>history_depth</name>
      <anchorfile>structDDS__DurabilityServiceQosPolicy.html</anchorfile>
      <anchor>aedd0604b30ea071c63e61b6dde0b2e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples</name>
      <anchorfile>structDDS__DurabilityServiceQosPolicy.html</anchorfile>
      <anchor>a060a03b3687c6f68e59be1fa6010fa92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_instances</name>
      <anchorfile>structDDS__DurabilityServiceQosPolicy.html</anchorfile>
      <anchor>a375e00f042b67e01e2a97b7963401f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples_per_instance</name>
      <anchorfile>structDDS__DurabilityServiceQosPolicy.html</anchorfile>
      <anchor>af51c6d0f98637f8afa5db5e6b2bb0c47</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__DurabilityServiceQosPolicy">DDSDurabilityServiceQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_Duration_t</name>
    <filename>structDDS__Duration__t.html</filename>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_micros</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga54a1b5c068b2bceb0358a003c2d678a0</anchor>
      <arglist>(DDS_UnsignedLongLong microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_millis</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gace827953c744110d71f8590572f4c7c2</anchor>
      <arglist>(DDS_UnsignedLongLong milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_nanos</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>gae295539fddfc2cc07f8012a40aecbdc1</anchor>
      <arglist>(DDS_UnsignedLongLong nanoseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Duration_t</type>
      <name>from_seconds</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga2aa5871b585cf7a5d9b2c76c7ce4f90c</anchor>
      <arglist>(DDS_UnsignedLong seconds)</arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>sec</name>
      <anchorfile>structDDS__Duration__t.html</anchorfile>
      <anchor>a657203cce563e66c0114daed408ccc3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>nanosec</name>
      <anchorfile>structDDS__Duration__t.html</anchorfile>
      <anchor>a3b0cc19e5e7ffff0d0c5ee8b679b50cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicData</name>
    <filename>structDDS__DynamicData.html</filename>
    <member kind="function">
      <type></type>
      <name>DDS_DynamicData</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a47c5a1d0b15c392e748786c61806248f</anchor>
      <arglist>(const DDS_TypeCode *type, const DDS_DynamicDataProperty_t &amp;property)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_valid</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a30e0e5731f2a3fbe1d026ed7d6894fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>copy</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a09f5d5206cb1453ba5242d50200120b8</anchor>
      <arglist>(const DDS_DynamicData &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>equal</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a4925f25f0b438879fc1d15b335e7a760</anchor>
      <arglist>(const DDS_DynamicData &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_DynamicData &amp;</type>
      <name>operator=</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a96b45f0d8897810aa0a6c940edb687ac</anchor>
      <arglist>(const DDS_DynamicData &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>operator==</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ab1013105fde8b4fb73c7820470a28b3d</anchor>
      <arglist>(const DDS_DynamicData &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>clear_all_members</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a241df186178411eb00686927a6431347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>clear_optional_member</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a53bd06e383b1c407a5d3aabef4038768</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_buffer</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>af8bbfa84fdcd72de5e42b2fa39fd67ea</anchor>
      <arglist>(DDS_Octet *storage, DDS_Long size)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_estimated_max_buffer_size</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a9b840c265eb11426a617099fcae66495</anchor>
      <arglist>(DDS_Long &amp;size) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>from_cdr_buffer</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a8dc2b0ee56c105503e8c01b94896ea93</anchor>
      <arglist>(const char *buffer, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>to_cdr_buffer</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ae31195afe3fe6f567ddce38e7f99980e</anchor>
      <arglist>(char *buffer, unsigned int &amp;length)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>print</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a48f0ef3d21c8774428f9724e8c00fdd1</anchor>
      <arglist>(FILE *fp, int indent) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_info</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a44884886e75fe0ee70bfc0f4e09c34e2</anchor>
      <arglist>(DDS_DynamicDataInfo &amp;info_out) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>bind_type</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad97185b8f53885c36b8248635c09cf83</anchor>
      <arglist>(const DDS_TypeCode *type)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>unbind_type</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a5f162eff46a16eeeed55286d554f14d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>bind_complex_member</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a00db8585e7cd9d2c3191abb1d78e799b</anchor>
      <arglist>(DDS_DynamicData &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>unbind_complex_member</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>afa47f74f187d00120299e50425b2c18f</anchor>
      <arglist>(DDS_DynamicData &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const DDS_TypeCode *</type>
      <name>get_type</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a37d65b6441f93d19b422bedbfac3da06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DDS_TCKind</type>
      <name>get_type_kind</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a89be4b160e14bbe11ff21bdd2d3c770b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>get_member_count</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>aaf75061f0dbbc06e78cde48d705fc7a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>member_exists</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a56de71122f89a714e6786d1f8ab1c187</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>member_exists_in_type</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a178caafa61452a37ac50d4aec97a9479</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_member_info</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a07eb47849650b215715623f7d2e519f5</anchor>
      <arglist>(DDS_DynamicDataMemberInfo &amp;info, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_member_info_by_index</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a1ef9eb8fdc83f9ee327a93f41336ae61</anchor>
      <arglist>(struct DDS_DynamicDataMemberInfo &amp;info, DDS_UnsignedLong index) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_member_type</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a23af79e6d1207a61cd9486cc39b6f522</anchor>
      <arglist>(const DDS_TypeCode *&amp;type_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>is_member_key</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>adb566aac46fdc76ece9a31392f4d904f</anchor>
      <arglist>(DDS_Boolean &amp;is_key_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_long</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a99f43fb819da506cb1345951e066bd1c</anchor>
      <arglist>(DDS_Long &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_short</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a585029c72a3c89ff4b401734b52b3e33</anchor>
      <arglist>(DDS_Short &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ulong</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a85dfaa7e3c35e3f4adfd2e181840ac00</anchor>
      <arglist>(DDS_UnsignedLong &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ushort</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>aad885f483096182a91c0dae33a91ec4a</anchor>
      <arglist>(DDS_UnsignedShort &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_float</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a3f51e7d8253572cacec50fdf5006b0eb</anchor>
      <arglist>(DDS_Float &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_double</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a60fdfc7e956fb625c72377a2d7d5e7aa</anchor>
      <arglist>(DDS_Double &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_boolean</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a599de2483ea132a3a6c7126264a2d7c1</anchor>
      <arglist>(DDS_Boolean &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_char</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>afa1a9917b7c37b2eae03e985159b5c3d</anchor>
      <arglist>(DDS_Char &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_octet</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad3da51d7f7d752bd80e8d808fbc93988</anchor>
      <arglist>(DDS_Octet &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_longlong</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a95cb81a456787f4714c65f3fb6afde24</anchor>
      <arglist>(DDS_LongLong &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ulonglong</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a2d34158b0dda9131ffddc3793138398b</anchor>
      <arglist>(DDS_UnsignedLongLong &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_longdouble</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ac4fc74fb407fd36d1df09833da896a48</anchor>
      <arglist>(DDS_LongDouble &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_wchar</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a01c03654ff12a6113bd242d52a2d8f89</anchor>
      <arglist>(DDS_Wchar &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_string</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a48af1ec320ed5fcbdb6cae6ef1cafff9</anchor>
      <arglist>(char *&amp;value, DDS_UnsignedLong *size, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_wstring</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad1729109def35933cf8413d38ca0b690</anchor>
      <arglist>(DDS_Wchar *&amp;value, DDS_UnsignedLong *size, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_complex_member</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a557763a66568db6964570f452cf565c2</anchor>
      <arglist>(DDS_DynamicData &amp;value_out, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_long_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a04f8254f5422a3e02e47ed46f12a46cd</anchor>
      <arglist>(DDS_Long *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_short_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>afd45b8b983680a75b188f5c1c9ee05f7</anchor>
      <arglist>(DDS_Short *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ulong_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ae88f0b22449cbf8d0779b17d1e2f95a3</anchor>
      <arglist>(DDS_UnsignedLong *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ushort_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a3181f97d40b266a0c4c33b6c36d02492</anchor>
      <arglist>(DDS_UnsignedShort *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_float_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a28b747d93ed0fd1f1f498de4dd30905d</anchor>
      <arglist>(DDS_Float *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_double_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>abbbc668f0c962e68f8fe06aad6340448</anchor>
      <arglist>(DDS_Double *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_boolean_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a99e2083b598950e1c50d81c72561f07e</anchor>
      <arglist>(DDS_Boolean *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_char_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>af13c3a5854e254ed7a85cecef087f4b8</anchor>
      <arglist>(DDS_Char *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_octet_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a02b43bf066f808bf35c387c88f180d31</anchor>
      <arglist>(DDS_Octet *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_longlong_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a76e7e849928ddbe8e326c5e88ee774ee</anchor>
      <arglist>(DDS_LongLong *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ulonglong_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ab309fc954c788c152128c18974649acd</anchor>
      <arglist>(DDS_UnsignedLongLong *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_longdouble_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a6501b84895b7a045dabc9f58a69ad04f</anchor>
      <arglist>(DDS_LongDouble *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_wchar_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a25fa941d3bd6c776a620da330a7f6260</anchor>
      <arglist>(DDS_Wchar *array, DDS_UnsignedLong *length, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_long_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad467a9f68ad5593536a89a4059a240a8</anchor>
      <arglist>(DDS_LongSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_short_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ace9effd165e530abc765735c7162ab77</anchor>
      <arglist>(DDS_ShortSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ulong_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>af48fa17b9320fd14416eca24ec1538d0</anchor>
      <arglist>(DDS_UnsignedLongSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ushort_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a54e9954d2fcbccfd38ca3801e25054bf</anchor>
      <arglist>(DDS_UnsignedShortSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_float_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a19035fad894c57f09d4b5b043cb29d67</anchor>
      <arglist>(DDS_FloatSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_double_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a1973a31e8dc9260590c085499f55fd72</anchor>
      <arglist>(DDS_DoubleSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_boolean_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a7ba01e490b84bb9afafb710b45954230</anchor>
      <arglist>(DDS_BooleanSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_char_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a67a7eeb1da6a64128172e7fc5547be01</anchor>
      <arglist>(DDS_CharSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_octet_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a9157ef7503ef3878f2c6483386a7f656</anchor>
      <arglist>(DDS_OctetSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_longlong_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>af8b59cb55aeb1294960d80bcfebbb609</anchor>
      <arglist>(DDS_LongLongSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_ulonglong_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ab77424d212b4c95da235fe77273cf6d8</anchor>
      <arglist>(DDS_UnsignedLongLongSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_longdouble_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>af8ca59fdcb6ecdefe8a32fb89ad90064</anchor>
      <arglist>(DDS_LongDoubleSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>get_wchar_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a2f4303fa24602fc16b9e036af89fb65d</anchor>
      <arglist>(DDS_WcharSeq &amp;seq, const char *member_name, DDS_DynamicDataMemberId member_id) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_long</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ac5e2a4c6731191945ce1df3474014ad9</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Long value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_short</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>addee52dfce49edea50746a695125a191</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Short value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ulong</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a8ad9b34f6d733ceeca9288ab57beead6</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ushort</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a9262728c2baecf602cab1ef2f534c00c</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedShort value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_float</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>aa81960ac04ecbad8b64cff468b48b9d8</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Float value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_double</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a08b00e8e75aff9407b2252a2f0a29fb5</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Double value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_boolean</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a8c7716873c33d5f793973338324ce14d</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_char</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ae2a096a59527b83f5a39064f74f659b8</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Char value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_octet</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad1fb2cf385e2dafab31c973f70b27d09</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Octet value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_longlong</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a690fffee4146434dcff28596be322a6e</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_LongLong value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ulonglong</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a1653120d0e71e17ccc2a326ce727aefe</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLongLong value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_longdouble</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>aca2012c6708b5563aaa3821df33f8ff4</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_LongDouble value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_wchar</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a25eae7fdd429c9d95986d6e5a371beb8</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_Wchar value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_string</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a9d5ad099f832a6bfdc5389e53b494725</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_wstring</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>aa1240a05156c3881dd8fcde5c8d30b67</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_Wchar *value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_complex_member</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad62551b59e7a521f5412640003295a7e</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_DynamicData &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_long_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a5ac5757378e4f0269b3f40f57f74230b</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Long *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_short_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a79fe7f28e9d6c43d64bb7f5b59855db5</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Short *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ulong_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a2f5fa00954359d4cd155efb4f00192bd</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_UnsignedLong *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ushort_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>acb6d36237a769f7f75d7eb4200c7348a</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_UnsignedShort *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_float_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a0a0227104c9637321565fbaed4e37a1c</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Float *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_double_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ab7cc3cdc7b6eb33948470309cdc1b64e</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Double *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_boolean_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>acf016a3a9fd56af698b420fd02a88c03</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Boolean *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_char_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>affebe45b28d1eb7426f3b4ef7b2b0009</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Char *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_octet_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a9fcd43d9e2812d7f8075e2d368eb9336</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Octet *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_longlong_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>abe2ac5b3d52457a93688aae324a3327e</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_LongLong *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ulonglong_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a71c7d8b1d8476e5203f81af80732fdd3</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_UnsignedLongLong *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_longdouble_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ab0d839029b8cf09f55718759c0043030</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_LongDouble *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_wchar_array</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>af6e06e5d3734ec8ec74c80bb5c23767e</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, DDS_UnsignedLong length, const DDS_Wchar *array)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_long_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>ad4712d95b73591b81759887d327a5124</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_LongSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_short_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a5c0bf10174ed43db81b5048d4058a17c</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_ShortSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ulong_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a96b4969af842db25ec0d5e853f7335cc</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_UnsignedLongSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ushort_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a922bd2e82b2f41d7e0c01c797b4e9824</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_UnsignedShortSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_float_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a2f043e6b4936be75ebbc6d2f1bc26c2c</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_FloatSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_double_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a742366c790b6ddf3857c5056fbaa1892</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_DoubleSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_boolean_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a22e2c3d422d4ba531856b87b4e775681</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_BooleanSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_char_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a376c67bc9d6c292166bee9a1b54dedd5</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_CharSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_octet_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a2dc054e90e69332d17c45ba54296db7c</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_OctetSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_longlong_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a0ef370741665aafdaa4e07435d4dfdec</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_LongLongSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_ulonglong_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a70cb8ac801237511a478524a9e3ff555</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_UnsignedLongLongSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_longdouble_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>aee6eb4b560ff4d28310c3b1dee8dfbf2</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_LongDoubleSeq &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>set_wchar_seq</name>
      <anchorfile>structDDS__DynamicData.html</anchorfile>
      <anchor>a5aa0713c31e3c384b5f36e5162087f37</anchor>
      <arglist>(const char *member_name, DDS_DynamicDataMemberId member_id, const DDS_WcharSeq &amp;value)</arglist>
    </member>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_member_name_id</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_collections</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_functionality</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_functionality_lifecycle</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_functionality_get_set</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_functionality_query</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_functionality_bind</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_functionality_keys</docanchor>
    <docanchor file="structDDS__DynamicData">DDSDynamicDataModule_performance</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicDataInfo</name>
    <filename>structDDS__DynamicDataInfo.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>member_count</name>
      <anchorfile>structDDS__DynamicDataInfo.html</anchorfile>
      <anchor>af7bc0ed063328d63f3e30d56a506b4b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>stored_size</name>
      <anchorfile>structDDS__DynamicDataInfo.html</anchorfile>
      <anchor>a2a747bd02af0d2771310e238cecb4a00</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicDataMemberInfo</name>
    <filename>structDDS__DynamicDataMemberInfo.html</filename>
    <member kind="variable">
      <type>DDS_DynamicDataMemberId</type>
      <name>member_id</name>
      <anchorfile>structDDS__DynamicDataMemberInfo.html</anchorfile>
      <anchor>a2e9cd8299b52ab2034c1ffa8ad5f2f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>member_name</name>
      <anchorfile>structDDS__DynamicDataMemberInfo.html</anchorfile>
      <anchor>a2add5b362e0cab6eb56af7c7ccdc3f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>member_exists</name>
      <anchorfile>structDDS__DynamicDataMemberInfo.html</anchorfile>
      <anchor>afed92e27d4088c171490cf7891a22e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TCKind</type>
      <name>member_kind</name>
      <anchorfile>structDDS__DynamicDataMemberInfo.html</anchorfile>
      <anchor>a353b8dfb418b929b5ea2768e81ad1d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>element_count</name>
      <anchorfile>structDDS__DynamicDataMemberInfo.html</anchorfile>
      <anchor>aa6896e798c40c53d72cfd9f597badeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TCKind</type>
      <name>element_kind</name>
      <anchorfile>structDDS__DynamicDataMemberInfo.html</anchorfile>
      <anchor>a7b7a707314c8448b605c5cd7d51cd2f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicDataProperty_t</name>
    <filename>structDDS__DynamicDataProperty__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>buffer_initial_size</name>
      <anchorfile>structDDS__DynamicDataProperty__t.html</anchorfile>
      <anchor>ad751e09e1b5c2ec37330503073213d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>buffer_max_size</name>
      <anchorfile>structDDS__DynamicDataProperty__t.html</anchorfile>
      <anchor>ae82fa317174df880ee873fb73e7d887c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicDataSeq</name>
    <filename>structDDS__DynamicDataSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicDataTypeProperty_t</name>
    <filename>structDDS__DynamicDataTypeProperty__t.html</filename>
    <member kind="variable">
      <type>struct DDS_DynamicDataProperty_t</type>
      <name>data</name>
      <anchorfile>structDDS__DynamicDataTypeProperty__t.html</anchorfile>
      <anchor>a257efb57536d0fdd00fddef00c3640e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DynamicDataTypeSerializationProperty_t</type>
      <name>serialization</name>
      <anchorfile>structDDS__DynamicDataTypeProperty__t.html</anchorfile>
      <anchor>ac7db9608a24ec4a8f9206463eecd4978</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_DynamicDataTypeSerializationProperty_t</name>
    <filename>structDDS__DynamicDataTypeSerializationProperty__t.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>use_42e_compatible_alignment</name>
      <anchorfile>structDDS__DynamicDataTypeSerializationProperty__t.html</anchorfile>
      <anchor>a64d7dc6e6f032ce259c325076d4bbb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>max_size_serialized</name>
      <anchorfile>structDDS__DynamicDataTypeSerializationProperty__t.html</anchorfile>
      <anchor>a294841697c9045f8c7d4cbfe1812a537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>min_size_serialized</name>
      <anchorfile>structDDS__DynamicDataTypeSerializationProperty__t.html</anchorfile>
      <anchor>ab03ac88e4b6d19097cd8cd0809a4de6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>trim_to_size</name>
      <anchorfile>structDDS__DynamicDataTypeSerializationProperty__t.html</anchorfile>
      <anchor>ab1a66c950559f3925dec2c194179b762</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_EndpointGroup_t</name>
    <filename>structDDS__EndpointGroup__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>role_name</name>
      <anchorfile>structDDS__EndpointGroup__t.html</anchorfile>
      <anchor>a8691456e25943a517b4a7a96b5ef778d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>quorum_count</name>
      <anchorfile>structDDS__EndpointGroup__t.html</anchorfile>
      <anchor>ace628a44fe0ed3d39b21185afe4d5374</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_EndpointGroupSeq</name>
    <filename>structDDS__EndpointGroupSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_EntityFactoryQosPolicy</name>
    <filename>structDDS__EntityFactoryQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>autoenable_created_entities</name>
      <anchorfile>structDDS__EntityFactoryQosPolicy.html</anchorfile>
      <anchor>a4b650acc47f1a51eefd90a072d6a70f6</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__EntityFactoryQosPolicy">DDSEntityFactoryQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_EntityNameQosPolicy</name>
    <filename>structDDS__EntityNameQosPolicy.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__EntityNameQosPolicy.html</anchorfile>
      <anchor>a564868d7879c1db2da049ed3cc2c4ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>role_name</name>
      <anchorfile>structDDS__EntityNameQosPolicy.html</anchorfile>
      <anchor>ae9b3fcba53b00cbf75c0edbc785332c9</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__EntityNameQosPolicy">DDSEntityNameQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_EnumMember</name>
    <filename>structDDS__EnumMember.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__EnumMember.html</anchorfile>
      <anchor>a3b475e4683ede010bcdb681b85eaada2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>ordinal</name>
      <anchorfile>structDDS__EnumMember.html</anchorfile>
      <anchor>a1c981e305c6c00aaef0964d872eb5d0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_EnumMemberSeq</name>
    <filename>structDDS__EnumMemberSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_EventQosPolicy</name>
    <filename>structDDS__EventQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_ThreadSettings_t</type>
      <name>thread</name>
      <anchorfile>structDDS__EventQosPolicy.html</anchorfile>
      <anchor>acbbd094dc9b44add126e1efdf5433c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_count</name>
      <anchorfile>structDDS__EventQosPolicy.html</anchorfile>
      <anchor>ab6df398735d3abcb5127d201c8441360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_count</name>
      <anchorfile>structDDS__EventQosPolicy.html</anchorfile>
      <anchor>ae9ae6d11894f70c51a84ab3bff70cb4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ExclusiveAreaQosPolicy</name>
    <filename>structDDS__ExclusiveAreaQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>use_shared_exclusive_area</name>
      <anchorfile>structDDS__ExclusiveAreaQosPolicy.html</anchorfile>
      <anchor>a6f4a182c16cd91fc2250dd043450b9c1</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__ExclusiveAreaQosPolicy">DDSExclusiveAreaQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_ExpressionProperty</name>
    <filename>structDDS__ExpressionProperty.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>key_only_filter</name>
      <anchorfile>structDDS__ExpressionProperty.html</anchorfile>
      <anchor>ac2a4c794cdd4e22ce1cc8568f290f96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>writer_side_filter_optimization</name>
      <anchorfile>structDDS__ExpressionProperty.html</anchorfile>
      <anchor>a921205af1e067d3d483c4835a5d216eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_FilterSampleInfo</name>
    <filename>structDDS__FilterSampleInfo.html</filename>
    <member kind="variable">
      <type>struct DDS_SampleIdentity_t</type>
      <name>related_sample_identity</name>
      <anchorfile>structDDS__FilterSampleInfo.html</anchorfile>
      <anchor>ab8d179c24eb14e7629a3a1353018bbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_source_guid</name>
      <anchorfile>structDDS__FilterSampleInfo.html</anchorfile>
      <anchor>aa7be99a7b1ad3f3997cd7c0c9ee6f0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_reader_guid</name>
      <anchorfile>structDDS__FilterSampleInfo.html</anchorfile>
      <anchor>a7a766df37b9124328656dc91007455bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_FloatSeq</name>
    <filename>structDDS__FloatSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_FlowControllerProperty_t</name>
    <filename>structDDS__FlowControllerProperty__t.html</filename>
    <member kind="variable">
      <type>DDS_FlowControllerSchedulingPolicy</type>
      <name>scheduling_policy</name>
      <anchorfile>structDDS__FlowControllerProperty__t.html</anchorfile>
      <anchor>a97ba75a849dfbdb62fedc501f72188d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_FlowControllerTokenBucketProperty_t</type>
      <name>token_bucket</name>
      <anchorfile>structDDS__FlowControllerProperty__t.html</anchorfile>
      <anchor>a8eb65d1b99a39daf5a1521bb31603f3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_FlowControllerTokenBucketProperty_t</name>
    <filename>structDDS__FlowControllerTokenBucketProperty__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_tokens</name>
      <anchorfile>structDDS__FlowControllerTokenBucketProperty__t.html</anchorfile>
      <anchor>a662f02e48691a39d0d3ab13d6e4efc66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>tokens_added_per_period</name>
      <anchorfile>structDDS__FlowControllerTokenBucketProperty__t.html</anchorfile>
      <anchor>a721f7182e312c99deb1e152e849dc694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>tokens_leaked_per_period</name>
      <anchorfile>structDDS__FlowControllerTokenBucketProperty__t.html</anchorfile>
      <anchor>af9e2f8fd04c1bfa059f85fe42b4f2df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>period</name>
      <anchorfile>structDDS__FlowControllerTokenBucketProperty__t.html</anchorfile>
      <anchor>a6dc56f20c740970edbe778ece872824d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>bytes_per_token</name>
      <anchorfile>structDDS__FlowControllerTokenBucketProperty__t.html</anchorfile>
      <anchor>a9a648e9579c63f93c2bf17a78b713536</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_GroupDataQosPolicy</name>
    <filename>structDDS__GroupDataQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_OctetSeq</type>
      <name>value</name>
      <anchorfile>structDDS__GroupDataQosPolicy.html</anchorfile>
      <anchor>ab2a91d6c692556b213354d871f99b840</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__GroupDataQosPolicy">DDSGroupDataQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_GUID_t</name>
    <filename>structDDS__GUID__t.html</filename>
    <member kind="variable">
      <type>DDS_Octet</type>
      <name>value</name>
      <anchorfile>structDDS__GUID__t.html</anchorfile>
      <anchor>a59075031ce8b08abfe195c6e18ec1e4a</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_HistoryQosPolicy</name>
    <filename>structDDS__HistoryQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_HistoryQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__HistoryQosPolicy.html</anchorfile>
      <anchor>a3cb2743cd13a81614bcc4f314cd640ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>depth</name>
      <anchorfile>structDDS__HistoryQosPolicy.html</anchorfile>
      <anchor>aef0fb3fd3579866be17d1a936f5e3729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_RefilterQosPolicyKind</type>
      <name>refilter</name>
      <anchorfile>structDDS__HistoryQosPolicy.html</anchorfile>
      <anchor>a57fc2012e6696f112fed75bfbb9181c8</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__HistoryQosPolicy">DDSHistoryQosModule_usage</docanchor>
    <docanchor file="structDDS__HistoryQosPolicy">DDSHistoryQosModule_consistency</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_InconsistentTopicStatus</name>
    <filename>structDDS__InconsistentTopicStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__InconsistentTopicStatus.html</anchorfile>
      <anchor>aa9a91b98bef93619270c7d946db09e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__InconsistentTopicStatus.html</anchorfile>
      <anchor>a9787c195c5350dde62dd77a6f4ad7f82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_InstanceHandleSeq</name>
    <filename>structDDS__InstanceHandleSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_KeyedOctets</name>
    <filename>structDDS__KeyedOctets.html</filename>
    <member kind="function">
      <type></type>
      <name>DDS_KeyedOctets</name>
      <anchorfile>structDDS__KeyedOctets.html</anchorfile>
      <anchor>ab8037c94f5dc290faa36aaadbfa3bf69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDS_KeyedOctets</name>
      <anchorfile>structDDS__KeyedOctets.html</anchorfile>
      <anchor>a29624f897cdb2df21ec94ad6f3305026</anchor>
      <arglist>(int key_size, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DDS_KeyedOctets</name>
      <anchorfile>structDDS__KeyedOctets.html</anchorfile>
      <anchor>a8f0c6971b86d4037a3eddda434f9f28a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>key</name>
      <anchorfile>structDDS__KeyedOctets.html</anchorfile>
      <anchor>a7551f6b447effb4c5777339742c5e87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>structDDS__KeyedOctets.html</anchorfile>
      <anchor>a9d871f7ab4c38162a1f90ced4c758721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>value</name>
      <anchorfile>structDDS__KeyedOctets.html</anchorfile>
      <anchor>a05e97b4efdbf5dde0ed62107fa61a1b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_KeyedOctetsSeq</name>
    <filename>structDDS__KeyedOctetsSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_KeyedString</name>
    <filename>structDDS__KeyedString.html</filename>
    <member kind="function">
      <type></type>
      <name>DDS_KeyedString</name>
      <anchorfile>structDDS__KeyedString.html</anchorfile>
      <anchor>ad163c6219e02421dbcca16134c9c78bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDS_KeyedString</name>
      <anchorfile>structDDS__KeyedString.html</anchorfile>
      <anchor>a78f2ff1b0309850b8bf11979af5a2227</anchor>
      <arglist>(int key_size, int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DDS_KeyedString</name>
      <anchorfile>structDDS__KeyedString.html</anchorfile>
      <anchor>a81f2336f69836dbebd26257a03e3ea62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>key</name>
      <anchorfile>structDDS__KeyedString.html</anchorfile>
      <anchor>a9778538b061fdaa0754773883fc5fe8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>value</name>
      <anchorfile>structDDS__KeyedString.html</anchorfile>
      <anchor>a4c3046a4749745d072d5be067d718e1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_KeyedStringSeq</name>
    <filename>structDDS__KeyedStringSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_LatencyBudgetQosPolicy</name>
    <filename>structDDS__LatencyBudgetQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>duration</name>
      <anchorfile>structDDS__LatencyBudgetQosPolicy.html</anchorfile>
      <anchor>a28d7a05d6a5559f3e174c5bebe0852b4</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__LatencyBudgetQosPolicy">DDSLatencyBudgetQosModule_usage</docanchor>
    <docanchor file="structDDS__LatencyBudgetQosPolicy">DDSLatencyBudgetQosModule_compatibility</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_LifespanQosPolicy</name>
    <filename>structDDS__LifespanQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>duration</name>
      <anchorfile>structDDS__LifespanQosPolicy.html</anchorfile>
      <anchor>a5e6057fb4e4570e83d67616638bfe5e1</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__LifespanQosPolicy">DDSLifespanQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_LivelinessChangedStatus</name>
    <filename>structDDS__LivelinessChangedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>alive_count</name>
      <anchorfile>structDDS__LivelinessChangedStatus.html</anchorfile>
      <anchor>a80d936174c0ab0ec3f00c93d42cd5e8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>not_alive_count</name>
      <anchorfile>structDDS__LivelinessChangedStatus.html</anchorfile>
      <anchor>a033deaf4050e1d8c8f449a8d8d23f42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>alive_count_change</name>
      <anchorfile>structDDS__LivelinessChangedStatus.html</anchorfile>
      <anchor>a9f6482b97ab94cffa0151a14043970b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>not_alive_count_change</name>
      <anchorfile>structDDS__LivelinessChangedStatus.html</anchorfile>
      <anchor>a7538f6a9c8972ce3f715926666152458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_publication_handle</name>
      <anchorfile>structDDS__LivelinessChangedStatus.html</anchorfile>
      <anchor>a40f5066740fe151f0ab30596ad6141c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_LivelinessLostStatus</name>
    <filename>structDDS__LivelinessLostStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__LivelinessLostStatus.html</anchorfile>
      <anchor>a6476fa4f784212625c98f08587b25c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__LivelinessLostStatus.html</anchorfile>
      <anchor>a84e853a0e6a2f5c403b65047b3a43d60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_LivelinessQosPolicy</name>
    <filename>structDDS__LivelinessQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_LivelinessQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__LivelinessQosPolicy.html</anchorfile>
      <anchor>a03b38bf501032dec5e022778f8a9a4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>lease_duration</name>
      <anchorfile>structDDS__LivelinessQosPolicy.html</anchorfile>
      <anchor>a5ace30a25fd07e0392687cdb405171b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>assertions_per_lease_duration</name>
      <anchorfile>structDDS__LivelinessQosPolicy.html</anchorfile>
      <anchor>a214943a451a463948462ac1d797333cf</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__LivelinessQosPolicy">DDSLivelinessQosModule_usage</docanchor>
    <docanchor file="structDDS__LivelinessQosPolicy">DDSLivelinessQosModule_compatibility</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_Locator_t</name>
    <filename>structDDS__Locator__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>kind</name>
      <anchorfile>structDDS__Locator__t.html</anchorfile>
      <anchor>a9edcd4e034b5e0da83908eb0015584ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>port</name>
      <anchorfile>structDDS__Locator__t.html</anchorfile>
      <anchor>a3be09c0e74c71adf066926ead6cafad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Octet</type>
      <name>address</name>
      <anchorfile>structDDS__Locator__t.html</anchorfile>
      <anchor>a21501fa2cc5fc8f3eb08bc66b3c8f724</anchor>
      <arglist>[DDS_LOCATOR_ADDRESS_LENGTH_MAX]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_LocatorFilter_t</name>
    <filename>structDDS__LocatorFilter__t.html</filename>
    <member kind="variable">
      <type>struct DDS_LocatorSeq</type>
      <name>locators</name>
      <anchorfile>structDDS__LocatorFilter__t.html</anchorfile>
      <anchor>a0c96d1176b7c23d0719bbb7c81bf864f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filter_expression</name>
      <anchorfile>structDDS__LocatorFilter__t.html</anchorfile>
      <anchor>aa115e4c5980cd83204e2873186f3eda7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_LocatorFilterQosPolicy</name>
    <filename>structDDS__LocatorFilterQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_LocatorFilterSeq</type>
      <name>locator_filters</name>
      <anchorfile>structDDS__LocatorFilterQosPolicy.html</anchorfile>
      <anchor>a8b180a9c8e4542fbb2a321e583bb886e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filter_name</name>
      <anchorfile>structDDS__LocatorFilterQosPolicy.html</anchorfile>
      <anchor>a7da2ccdaeeef09bd3519880c4e439b52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_LocatorFilterSeq</name>
    <filename>structDDS__LocatorFilterSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_LocatorSeq</name>
    <filename>structDDS__LocatorSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_LoggingQosPolicy</name>
    <filename>structDDS__LoggingQosPolicy.html</filename>
    <member kind="variable">
      <type>NDDS_Config_LogVerbosity</type>
      <name>verbosity</name>
      <anchorfile>structDDS__LoggingQosPolicy.html</anchorfile>
      <anchor>aaf847ddec11017b976bbb0e93f918ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NDDS_Config_LogCategory</type>
      <name>category</name>
      <anchorfile>structDDS__LoggingQosPolicy.html</anchorfile>
      <anchor>abdfa0dc2c78ab53003e4d78cd5000cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NDDS_Config_LogPrintFormat</type>
      <name>print_format</name>
      <anchorfile>structDDS__LoggingQosPolicy.html</anchorfile>
      <anchor>a068e1abdb2e02a22f6062585bb3c3793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>output_file</name>
      <anchorfile>structDDS__LoggingQosPolicy.html</anchorfile>
      <anchor>a7c262bbe4378b5e53d8c6024da42ebf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_LongDoubleSeq</name>
    <filename>structDDS__LongDoubleSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_LongLongSeq</name>
    <filename>structDDS__LongLongSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_LongSeq</name>
    <filename>structDDS__LongSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_MultiChannelQosPolicy</name>
    <filename>structDDS__MultiChannelQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_ChannelSettingsSeq</type>
      <name>channels</name>
      <anchorfile>structDDS__MultiChannelQosPolicy.html</anchorfile>
      <anchor>ad66a42cffccfb0ba3daf01aa1b65edf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filter_name</name>
      <anchorfile>structDDS__MultiChannelQosPolicy.html</anchorfile>
      <anchor>abce9222676b24a8b348efe0fc0904a37</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__MultiChannelQosPolicy">DDSMultiChannelQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_Octets</name>
    <filename>structDDS__Octets.html</filename>
    <member kind="function">
      <type></type>
      <name>DDS_Octets</name>
      <anchorfile>structDDS__Octets.html</anchorfile>
      <anchor>aeed0e246724823821d266d5eec71543b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDS_Octets</name>
      <anchorfile>structDDS__Octets.html</anchorfile>
      <anchor>af6fff4b9b3d81ca505aad6c0ada8611d</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DDS_Octets</name>
      <anchorfile>structDDS__Octets.html</anchorfile>
      <anchor>a6943b2a439625f8c0132e6d13882e42b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>structDDS__Octets.html</anchorfile>
      <anchor>a67c79fe81ce668b1493fb9446df4c570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>value</name>
      <anchorfile>structDDS__Octets.html</anchorfile>
      <anchor>ae289d9fba09f3386ba897fd02969df29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_OctetSeq</name>
    <filename>structDDS__OctetSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_OctetsSeq</name>
    <filename>structDDS__OctetsSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_OfferedDeadlineMissedStatus</name>
    <filename>structDDS__OfferedDeadlineMissedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__OfferedDeadlineMissedStatus.html</anchorfile>
      <anchor>a17262425aea25d6dfe4b6162d596c2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__OfferedDeadlineMissedStatus.html</anchorfile>
      <anchor>a996c66a2e5072f20a0850fd94ecc433c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_instance_handle</name>
      <anchorfile>structDDS__OfferedDeadlineMissedStatus.html</anchorfile>
      <anchor>acd00bafe297f4563cb55f1dda96bfa4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_OfferedIncompatibleQosStatus</name>
    <filename>structDDS__OfferedIncompatibleQosStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>aa90180c83fd132288ac14a05d090b117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>a68363b158df1f07e32d67249111958e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_QosPolicyId_t</type>
      <name>last_policy_id</name>
      <anchorfile>structDDS__OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>a58f04e98c5edac6e86ae360dbf243b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_QosPolicyCountSeq</type>
      <name>policies</name>
      <anchorfile>structDDS__OfferedIncompatibleQosStatus.html</anchorfile>
      <anchor>a28a38881ba616588ef588ee786668aa9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_OwnershipQosPolicy</name>
    <filename>structDDS__OwnershipQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_OwnershipQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__OwnershipQosPolicy.html</anchorfile>
      <anchor>a27bb5132fe04e1d932300786f79654e6</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__OwnershipQosPolicy">DDSOwnershipQosModule_usage</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">DDSOwnershipQosModule_usage_shared</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">DDSOwnershipQosModule_usage_exclusive</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">DDSOwnershipQosModule_compatibility</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">Registration_liveliness_ownership</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">Ownership_redundant_systems</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">Ownership_data_periodic_update</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">Ownership_data_not_periodic_update</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">Ownership_loss_connectivity_detection</docanchor>
    <docanchor file="structDDS__OwnershipQosPolicy">Unregister_instance_and_dispose_difference</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_OwnershipStrengthQosPolicy</name>
    <filename>structDDS__OwnershipStrengthQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>value</name>
      <anchorfile>structDDS__OwnershipStrengthQosPolicy.html</anchorfile>
      <anchor>afda6a59cd3cfd9bc904c98efc68a61eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ParticipantBuiltinTopicData</name>
    <filename>structDDS__ParticipantBuiltinTopicData.html</filename>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>key</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>ac6f4069f09e74633f2a94d4fd3b5632a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_UserDataQosPolicy</type>
      <name>user_data</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>acd2e4123cf3baaf7aba20bb18d195574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PropertyQosPolicy</type>
      <name>property</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a91f02a3edca55b3f7787301c18e0e287</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ProtocolVersion_t</type>
      <name>rtps_protocol_version</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>aa43e56ac72a721046c9bee8882a0758e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_VendorId_t</type>
      <name>rtps_vendor_id</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a2a7b8d4da99b0808dd6a61003f78b58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>dds_builtin_endpoints</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a814c8143a49a130f9ea41b840738a6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LocatorSeq</type>
      <name>default_unicast_locators</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a24e3aa57dc41e7756130cd4be176125b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ProductVersion_t</type>
      <name>product_version</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a37ff2c7f722e4b8831ad1d66cbac2578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>participant_name</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a9a0ba3542ddd58b6f2f56f15d2e9ac4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_DomainId_t</type>
      <name>domain_id</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a315dce34051af7f830160db2bb117946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportInfoSeq</type>
      <name>transport_info</name>
      <anchorfile>structDDS__ParticipantBuiltinTopicData.html</anchorfile>
      <anchor>a6cbd511a56e8f9bc73625218129a1468</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ParticipantBuiltinTopicDataSeq</name>
    <filename>structDDS__ParticipantBuiltinTopicDataSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_PartitionQosPolicy</name>
    <filename>structDDS__PartitionQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>name</name>
      <anchorfile>structDDS__PartitionQosPolicy.html</anchorfile>
      <anchor>a32d912c94f200b40110043c31a45e12d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__PartitionQosPolicy">DDSPartitionQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_PresentationQosPolicy</name>
    <filename>structDDS__PresentationQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_PresentationQosPolicyAccessScopeKind</type>
      <name>access_scope</name>
      <anchorfile>structDDS__PresentationQosPolicy.html</anchorfile>
      <anchor>a0d46a4e9fe04a65507153013ab542e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>coherent_access</name>
      <anchorfile>structDDS__PresentationQosPolicy.html</anchorfile>
      <anchor>a6882e12b1b9dc671540818bd6a8f3321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>ordered_access</name>
      <anchorfile>structDDS__PresentationQosPolicy.html</anchorfile>
      <anchor>a7a534396ec3b27a902ef4b6fe95ae454</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__PresentationQosPolicy">DDSPresentationQosModule_usage</docanchor>
    <docanchor file="structDDS__PresentationQosPolicy">DDSPresentationQosModule_compatibility</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_ProductVersion_t</name>
    <filename>structDDS__ProductVersion__t.html</filename>
    <member kind="variable">
      <type>DDS_Char</type>
      <name>major</name>
      <anchorfile>structDDS__ProductVersion__t.html</anchorfile>
      <anchor>a8e70ba630c03cf1f8fe0d1bff88d8f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Char</type>
      <name>minor</name>
      <anchorfile>structDDS__ProductVersion__t.html</anchorfile>
      <anchor>a0b5fa5504fbbfbec86e1c50929eb0bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Char</type>
      <name>release</name>
      <anchorfile>structDDS__ProductVersion__t.html</anchorfile>
      <anchor>a85f665c8befa4aff49aaa316318a8c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Char</type>
      <name>revision</name>
      <anchorfile>structDDS__ProductVersion__t.html</anchorfile>
      <anchor>aaef10e3cbed815ddde55a1a06622d115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ProfileQosPolicy</name>
    <filename>structDDS__ProfileQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>string_profile</name>
      <anchorfile>structDDS__ProfileQosPolicy.html</anchorfile>
      <anchor>a2344597aa6c3425072f8de115762256f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>url_profile</name>
      <anchorfile>structDDS__ProfileQosPolicy.html</anchorfile>
      <anchor>a0e2c1f3fdffb07c941ab3f81c8d0fc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>ignore_user_profile</name>
      <anchorfile>structDDS__ProfileQosPolicy.html</anchorfile>
      <anchor>a2a8368ab1d2c31891b84abec365e744b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>ignore_environment_profile</name>
      <anchorfile>structDDS__ProfileQosPolicy.html</anchorfile>
      <anchor>a491347b4e19c06ff31a1434174d11267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>ignore_resource_profile</name>
      <anchorfile>structDDS__ProfileQosPolicy.html</anchorfile>
      <anchor>ab12aebc246d4b662dd0d2a9c2bfc44d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_Property_t</name>
    <filename>structDDS__Property__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__Property__t.html</anchorfile>
      <anchor>a3172a6b3ee8f5939542a5c984faabbea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>value</name>
      <anchorfile>structDDS__Property__t.html</anchorfile>
      <anchor>a92e6de016959b77ae293833ded428dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>propagate</name>
      <anchorfile>structDDS__Property__t.html</anchorfile>
      <anchor>a8b0c6a02a86a64c2828e6948ffa1b9c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_PropertyQosPolicy</name>
    <filename>structDDS__PropertyQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_PropertySeq</type>
      <name>value</name>
      <anchorfile>structDDS__PropertyQosPolicy.html</anchorfile>
      <anchor>a43fc72a57f79876aaf0383c5847a4b00</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__PropertyQosPolicy">DDSPropertyQosModule_usage</docanchor>
    <docanchor file="structDDS__PropertyQosPolicy">DDSPropertyQosModule_usage_reasons</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_PropertySeq</name>
    <filename>structDDS__PropertySeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_ProtocolVersion_t</name>
    <filename>structDDS__ProtocolVersion__t.html</filename>
    <member kind="variable">
      <type>DDS_Octet</type>
      <name>major</name>
      <anchorfile>structDDS__ProtocolVersion__t.html</anchorfile>
      <anchor>a9a9b9ba8dd4bced75c95850ad0d2ca72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Octet</type>
      <name>minor</name>
      <anchorfile>structDDS__ProtocolVersion__t.html</anchorfile>
      <anchor>a6a2df56169f0b599190b6ecf9d3b84a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_PublicationBuiltinTopicData</name>
    <filename>structDDS__PublicationBuiltinTopicData.html</filename>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>key</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a4780175a7c9b523cd5d635256d6e0121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>participant_key</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac1fecede53d648df3be9a1a7de342da4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>topic_name</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a7a839633fbafd0c1b65db9ef35313f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>type_name</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a14c589ddb5213f67d184c87b2af85e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityQosPolicy</type>
      <name>durability</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a5f864a1b922f7892f6bb70b2cea7c4ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityServiceQosPolicy</type>
      <name>durability_service</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a3d8df7b64d9eaf1788f16449d3c6d75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DeadlineQosPolicy</type>
      <name>deadline</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a9bbe601cda488176a4a427988776efd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LatencyBudgetQosPolicy</type>
      <name>latency_budget</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a0ec22ddb9260ff9494edae435c3e6a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LivelinessQosPolicy</type>
      <name>liveliness</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ae2f1ae488666386637ba49fb91eb3a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliabilityQosPolicy</type>
      <name>reliability</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a627123139778dfda5790aa92ca71f548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LifespanQosPolicy</type>
      <name>lifespan</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a84db5f4f222f2e4432a3d184439321c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_UserDataQosPolicy</type>
      <name>user_data</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a32f5f098f4bb08d5887d682bfb449f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipQosPolicy</type>
      <name>ownership</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ab132b2e5d53fcf3666987665afa551f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipStrengthQosPolicy</type>
      <name>ownership_strength</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>add22df16fbee44d1863778ae0709d155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DestinationOrderQosPolicy</type>
      <name>destination_order</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>aa83ac973bffc3b57aa19deb1793d82e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PresentationQosPolicy</type>
      <name>presentation</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a1fe1b64f890d9df606bd8d589939a1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PartitionQosPolicy</type>
      <name>partition</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ab590d198ae7e088ccd89e638acccc8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TopicDataQosPolicy</type>
      <name>topic_data</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a74918b1474f0182091a55460e1cb3402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GroupDataQosPolicy</type>
      <name>group_data</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a8af1c832cffabb15c9cd07026060338a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeCode *</type>
      <name>type_code</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>aa1f6f4832c3fee58fcaa9cb7789abbe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>publisher_key</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>af86cc25f198095f819106518e0d62f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PropertyQosPolicy</type>
      <name>property</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a8b37e8b464591ab33b307791fff5fb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LocatorSeq</type>
      <name>unicast_locators</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ad7175317a2dbd73b660812465b21a061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>virtual_guid</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a048a588f35d3b58f9a207fee5b2424cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ServiceQosPolicy</type>
      <name>service</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a036bd5201ada4be71a472cea52be279b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ProtocolVersion_t</type>
      <name>rtps_protocol_version</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a52d67e43db2cb6f2688479b8526ce82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_VendorId_t</type>
      <name>rtps_vendor_id</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>af522f7c7b9fb2d4b83ffd0df87cb38ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ProductVersion_t</type>
      <name>product_version</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ab1dfe9a65bee3db74bfcd9b8ba963524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LocatorFilterQosPolicy</type>
      <name>locator_filter</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>a7fcf118e8fba33daf622c55a11d75b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_positive_acks</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac343476b84743f7b64d62b90ba66beea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>publication_name</name>
      <anchorfile>structDDS__PublicationBuiltinTopicData.html</anchorfile>
      <anchor>ac69a4e01d59426a9344155cd85090a67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_PublicationBuiltinTopicDataSeq</name>
    <filename>structDDS__PublicationBuiltinTopicDataSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_PublicationMatchedStatus</name>
    <filename>structDDS__PublicationMatchedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__PublicationMatchedStatus.html</anchorfile>
      <anchor>ad30400d098f3bcf74fd5be586f900960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__PublicationMatchedStatus.html</anchorfile>
      <anchor>a15d13c8b8b914298f4d130ce7786beaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>current_count</name>
      <anchorfile>structDDS__PublicationMatchedStatus.html</anchorfile>
      <anchor>ada7d3ae5de5bc07ff1d7f61f0335ce46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>current_count_peak</name>
      <anchorfile>structDDS__PublicationMatchedStatus.html</anchorfile>
      <anchor>a5bd11d41fcdb79661bf56da24f2d4859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>current_count_change</name>
      <anchorfile>structDDS__PublicationMatchedStatus.html</anchorfile>
      <anchor>a9cb517dcb586536ece4872a9c84e3674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_subscription_handle</name>
      <anchorfile>structDDS__PublicationMatchedStatus.html</anchorfile>
      <anchor>acff73198c0b741358f392263631ee818</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_PublisherQos</name>
    <filename>structDDS__PublisherQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>a6a5bf7d864f2ad17e5c91c4ff20b0c69</anchor>
      <arglist>(const DDS_PublisherQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>a007e042bb8e6852d058bc14eff249b74</anchor>
      <arglist>(const DDS_PublisherQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PresentationQosPolicy</type>
      <name>presentation</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>a02acb622fce449cd35c5cef79df93c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PartitionQosPolicy</type>
      <name>partition</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>a96c903f30dd0794f4de01a85a1e002ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GroupDataQosPolicy</type>
      <name>group_data</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>ad99c76a97a261687a9bbeaf29c7118c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityFactoryQosPolicy</type>
      <name>entity_factory</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>a99f7bc6a130ab99727212a24174585c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_AsynchronousPublisherQosPolicy</type>
      <name>asynchronous_publisher</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>aba8bd4e8009fd9a64b88a61e6f86d041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ExclusiveAreaQosPolicy</type>
      <name>exclusive_area</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>ad8dc72e5b1f10762717aa606e624ba4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>publisher_name</name>
      <anchorfile>structDDS__PublisherQos.html</anchorfile>
      <anchor>a93dfa4af1242c1cab54557b646b6664d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_PublishModeQosPolicy</name>
    <filename>structDDS__PublishModeQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_PublishModeQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__PublishModeQosPolicy.html</anchorfile>
      <anchor>a49f7b6e81f30db4fbcb08d79addcf86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>flow_controller_name</name>
      <anchorfile>structDDS__PublishModeQosPolicy.html</anchorfile>
      <anchor>a0752f4c8b5a13772ecdd9e82494d6f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>priority</name>
      <anchorfile>structDDS__PublishModeQosPolicy.html</anchorfile>
      <anchor>ad1e7c5d383bb088b62034f698e37a4e3</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__PublishModeQosPolicy">DDSPublishModeQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_QosPolicyCount</name>
    <filename>structDDS__QosPolicyCount.html</filename>
    <member kind="variable">
      <type>DDS_QosPolicyId_t</type>
      <name>policy_id</name>
      <anchorfile>structDDS__QosPolicyCount.html</anchorfile>
      <anchor>a04945631c19b209d01fad0273f02d283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>count</name>
      <anchorfile>structDDS__QosPolicyCount.html</anchorfile>
      <anchor>a7a4d2e476bb46e16b88f02c992e0b789</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_QosPolicyCountSeq</name>
    <filename>structDDS__QosPolicyCountSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_ReaderDataLifecycleQosPolicy</name>
    <filename>structDDS__ReaderDataLifecycleQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>autopurge_nowriter_samples_delay</name>
      <anchorfile>structDDS__ReaderDataLifecycleQosPolicy.html</anchorfile>
      <anchor>ad4a9e2039f3a92097d3d61a42f6b20ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>autopurge_disposed_samples_delay</name>
      <anchorfile>structDDS__ReaderDataLifecycleQosPolicy.html</anchorfile>
      <anchor>ae1bc6422ef6e8f868064910ee2d2e252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>autopurge_disposed_instances_delay</name>
      <anchorfile>structDDS__ReaderDataLifecycleQosPolicy.html</anchorfile>
      <anchor>a85023064333aacea34d4c645c57855bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ReceiverPoolQosPolicy</name>
    <filename>structDDS__ReceiverPoolQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_ThreadSettings_t</type>
      <name>thread</name>
      <anchorfile>structDDS__ReceiverPoolQosPolicy.html</anchorfile>
      <anchor>aeaf36614747ac8a779f9a2b1964a4cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>buffer_size</name>
      <anchorfile>structDDS__ReceiverPoolQosPolicy.html</anchorfile>
      <anchor>a11be424886e2df39291539b9bb0fe5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>buffer_alignment</name>
      <anchorfile>structDDS__ReceiverPoolQosPolicy.html</anchorfile>
      <anchor>aa820d4eebcce2da4dfd6cfd4746d64c2</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__ReceiverPoolQosPolicy">DDSReceiverPoolQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_ReliabilityQosPolicy</name>
    <filename>structDDS__ReliabilityQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_ReliabilityQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__ReliabilityQosPolicy.html</anchorfile>
      <anchor>a94debccb5177400ff7c39a8cb0252c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_blocking_time</name>
      <anchorfile>structDDS__ReliabilityQosPolicy.html</anchorfile>
      <anchor>afb7c00e8e7734647152883fea621f7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ReliabilityQosPolicyAcknowledgmentModeKind</type>
      <name>acknowledgment_kind</name>
      <anchorfile>structDDS__ReliabilityQosPolicy.html</anchorfile>
      <anchor>aa56c90c279a6e4f0bcedcdedda9e125e</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__ReliabilityQosPolicy">DDSReliabilityQosModule_usage</docanchor>
    <docanchor file="structDDS__ReliabilityQosPolicy">DDSReliabilityQosModule_compatibility</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_ReliableReaderActivityChangedStatus</name>
    <filename>structDDS__ReliableReaderActivityChangedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>active_count</name>
      <anchorfile>structDDS__ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a6db43531b7fdb31abb2fd02cdb063a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>inactive_count</name>
      <anchorfile>structDDS__ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a90132e85cb704923631bb117a86c03e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>active_count_change</name>
      <anchorfile>structDDS__ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a6b834cb11736d3dd8b24fc797f45b9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>inactive_count_change</name>
      <anchorfile>structDDS__ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a89eb6396278944ccf07cdbdf7a6fd631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_instance_handle</name>
      <anchorfile>structDDS__ReliableReaderActivityChangedStatus.html</anchorfile>
      <anchor>a79ba425c659abf712a231783cefeb972</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ReliableWriterCacheChangedStatus</name>
    <filename>structDDS__ReliableWriterCacheChangedStatus.html</filename>
    <member kind="variable">
      <type>struct DDS_ReliableWriterCacheEventCount</type>
      <name>empty_reliable_writer_cache</name>
      <anchorfile>structDDS__ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>a36ca38d1a00740be6917aee5524889ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliableWriterCacheEventCount</type>
      <name>full_reliable_writer_cache</name>
      <anchorfile>structDDS__ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>ac883b076cd3e5cbff2baa0cd9825df2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliableWriterCacheEventCount</type>
      <name>low_watermark_reliable_writer_cache</name>
      <anchorfile>structDDS__ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>a385dbe2cca3d492961ff21c98f3ca524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliableWriterCacheEventCount</type>
      <name>high_watermark_reliable_writer_cache</name>
      <anchorfile>structDDS__ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>ad2701f4274b52177d1ad35af46d21303</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>unacknowledged_sample_count</name>
      <anchorfile>structDDS__ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>a738ffbe3d65704b4c6142b8d2b94f828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>unacknowledged_sample_count_peak</name>
      <anchorfile>structDDS__ReliableWriterCacheChangedStatus.html</anchorfile>
      <anchor>a7222b8f4a5555d8dd6b3a2426e0e9ed0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ReliableWriterCacheEventCount</name>
    <filename>structDDS__ReliableWriterCacheEventCount.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__ReliableWriterCacheEventCount.html</anchorfile>
      <anchor>a1c45bcfa74814d9fc8117ab9028199e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__ReliableWriterCacheEventCount.html</anchorfile>
      <anchor>a6af3ea4563ae9607d5416bb7e6f0cc3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_RequestedDeadlineMissedStatus</name>
    <filename>structDDS__RequestedDeadlineMissedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__RequestedDeadlineMissedStatus.html</anchorfile>
      <anchor>a749931343147237be9c01189a02dece0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__RequestedDeadlineMissedStatus.html</anchorfile>
      <anchor>a6dd5f25ade13513e38f4b6be5b21e4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_instance_handle</name>
      <anchorfile>structDDS__RequestedDeadlineMissedStatus.html</anchorfile>
      <anchor>af489a82127383601c82754f9873be03b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_RequestedIncompatibleQosStatus</name>
    <filename>structDDS__RequestedIncompatibleQosStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>a5e1381230973dff09604e4009114afbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>a059fbc171075a56b41681385abeb8c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_QosPolicyId_t</type>
      <name>last_policy_id</name>
      <anchorfile>structDDS__RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>a728da2e553b4cc129dfbc401e1e96632</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_QosPolicyCountSeq</type>
      <name>policies</name>
      <anchorfile>structDDS__RequestedIncompatibleQosStatus.html</anchorfile>
      <anchor>a9ba7c07d85905e1c5265b6abdfcdb5a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ResourceLimitsQosPolicy</name>
    <filename>structDDS__ResourceLimitsQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples</name>
      <anchorfile>structDDS__ResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a90db906a3958146c5e22557db648e7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_instances</name>
      <anchorfile>structDDS__ResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ab7339605f314f50c7cb658426ff64cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_samples_per_instance</name>
      <anchorfile>structDDS__ResourceLimitsQosPolicy.html</anchorfile>
      <anchor>ae3d9339bebf4c7163cf6dff82882cbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_samples</name>
      <anchorfile>structDDS__ResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a5eba0c723bc2aa90e35193570d7c893a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>initial_instances</name>
      <anchorfile>structDDS__ResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a2ac70a8bc7617cefcbfa2a855e1c51f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>instance_hash_buckets</name>
      <anchorfile>structDDS__ResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a34d65b3472d12b85c307134f9c1bf5d3</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__ResourceLimitsQosPolicy">DDSResourceLimitsQosModule_usage</docanchor>
    <docanchor file="structDDS__ResourceLimitsQosPolicy">DDSResourceLimitsQosModule_consistency</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_RtpsReliableReaderProtocol_t</name>
    <filename>structDDS__RtpsReliableReaderProtocol__t.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>min_heartbeat_response_delay</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>ab4d96a016eefca4dcd8ce001e03f7a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_heartbeat_response_delay</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>aafc2e6ec3a3c039e88355c683a7a622e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>heartbeat_suppression_duration</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>a5fae078d8236e53962649d860087cd6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>nack_period</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>a9c299ef4fe921b91a7bdedadcd38c2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>receive_window_size</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>aa33820f31d05477329cade249b50c8d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>round_trip_time</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>a94e7f68d46c1f0fa2805fd21be8c505b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>app_ack_period</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>a9c87af40207de4455bdaddf7789b956b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>min_app_ack_response_keep_duration</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>a1125d92d4365d62a00d6a9b5f899391a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>samples_per_app_ack</name>
      <anchorfile>structDDS__RtpsReliableReaderProtocol__t.html</anchorfile>
      <anchor>acd2d05d1562c1adf755fbb1eccb6b62b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_RtpsReliableWriterProtocol_t</name>
    <filename>structDDS__RtpsReliableWriterProtocol__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>low_watermark</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>ab603712e435cc4369366afa770700b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>high_watermark</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a7dc8a8bb8168a5acc3041f8970e95665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>heartbeat_period</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a47229dfbfde987f8bbebe67e789e0908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>fast_heartbeat_period</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a0a0198e6baba89dfa5231950814f2a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>late_joiner_heartbeat_period</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a26a476a46b1b4f03171c12c0e4ef784d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>virtual_heartbeat_period</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a86cca4ae688897f712260e830a9127ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>samples_per_virtual_heartbeat</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a2692a857d018a3543ffc513631f219ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_heartbeat_retries</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a5be67d978618b5995cb517b51231d39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>inactivate_nonprogressing_readers</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a0b7adb7146cac9e462b9ffe65dd557cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>heartbeats_per_max_samples</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a9dd9360fe1f9c8a7f251576c8878a139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>min_nack_response_delay</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a7a95278d5204acf040ec49a6348ada46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_nack_response_delay</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>afad848d4636d4c72de4e3b08deddce1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>nack_suppression_duration</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a57a6534419a7d0f53714dc88694f2b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_bytes_per_nack_response</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a13a5686ae6a9b77271bacc39c4d8e80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>disable_positive_acks_min_sample_keep_duration</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>ad659354923989e244b61fbb67461b578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>disable_positive_acks_max_sample_keep_duration</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>ac14a89d1a5ac916982b0966b48fc38f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_positive_acks_enable_adaptive_sample_keep_duration</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a31c48f82088f918774d67d2b045629b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>disable_positive_acks_decrease_sample_keep_duration_factor</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a2ebabf07c0eef5ecd3a24dfa177cf547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>disable_positive_acks_increase_sample_keep_duration_factor</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a3d73821b40894e0d511c29df94bc1443</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>min_send_window_size</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a20be408ce0f25d4631d637e982213d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_send_window_size</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a20f5ce40d2c1f5f9c1ab6673d911b0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>send_window_update_period</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a98e1f6a9e5da6b9c1ffc43a2925d8ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>send_window_increase_factor</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a62cd20d9f29e43c3c56f6411cce8b892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>send_window_decrease_factor</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a544f473d40ccf6bcb7735873c984876c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>enable_multicast_periodic_heartbeat</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>a44046033c98a930c6ab24e4e95af0fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>multicast_resend_threshold</name>
      <anchorfile>structDDS__RtpsReliableWriterProtocol__t.html</anchorfile>
      <anchor>adc5f7500501c036f47c51775529fa3ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_RtpsWellKnownPorts_t</name>
    <filename>structDDS__RtpsWellKnownPorts__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>port_base</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>a3cdc6b5af83651bd7ceb85ba287245f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>domain_id_gain</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>a4b30df9393d72e3a51b5ba8c477750ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>participant_id_gain</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>a526613772db4f73a8971fbc5325d05c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>builtin_multicast_port_offset</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>a33eb1858a19e2c6e8b848ecdaef9846b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>builtin_unicast_port_offset</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>ac6500418371a10482458fac038e7f013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>user_multicast_port_offset</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>a7413f09c3d396779f371462c597fca15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>user_unicast_port_offset</name>
      <anchorfile>structDDS__RtpsWellKnownPorts__t.html</anchorfile>
      <anchor>a0c39f79bc838510fe0ebaf443b25091e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SampleIdentity_t</name>
    <filename>structDDS__SampleIdentity__t.html</filename>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>writer_guid</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>ga541fc431fa4eb3472e1d5ed3588691ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>sequence_number</name>
      <anchorfile>group__DDSWriteParamsModule.html</anchorfile>
      <anchor>gab784a7f40efde9c165e60d94c49309a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SampleInfo</name>
    <filename>structDDS__SampleInfo.html</filename>
    <member kind="variable">
      <type>DDS_SampleStateKind</type>
      <name>sample_state</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>adfe9c2c74b14f914e5b7da022b07cb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ViewStateKind</type>
      <name>view_state</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a99c0b7558c3ebcc94ee9d2b5b7129243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceStateKind</type>
      <name>instance_state</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>af09b886ca0145a110b58440d455b7eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Time_t</type>
      <name>source_timestamp</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a70566edcc3c48c0d7ee42962ffb81150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>instance_handle</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a38bca53647cd2be8c1dff9054126f360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>publication_handle</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a596e409a28afd612c83f2b4964ac4e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>disposed_generation_count</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a2f6c5cc3397d45930946b5b106eed5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>no_writers_generation_count</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a6e57e6e1c9f6e9651f219b03d9c4738b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>sample_rank</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a25fb02a443a66d8724867e361bd7ce0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>generation_rank</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>aeef636d7b85d492aeea87c051d414c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>absolute_generation_rank</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>ab6e1f85729e3f21317860c98e04cb3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>valid_data</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>aa0c5177864ed1aeeb85544fee45904da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Time_t</type>
      <name>reception_timestamp</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>aae99d28717a46008a5bcb7d6319b771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>publication_sequence_number</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a81fffe4da7837199659ed3658bc4d937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>reception_sequence_number</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a13f3d471f52fd39d1b9952d3174be19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>original_publication_virtual_guid</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a8e4c5fb97deba9c0f9a398d8df41e0fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>original_publication_virtual_sequence_number</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a757e8ac8aad20e9535e443e6c236d3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_original_publication_virtual_guid</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a851c866c4e30762fef890654bc03113d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SequenceNumber_t</type>
      <name>related_original_publication_virtual_sequence_number</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a5624cffcfd293588d59d6a76eceb9ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_SampleFlag</type>
      <name>flag</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a20437acdb807758190bb276d620f7ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>source_guid</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>af2043260bc8616590e5e74387e13ffab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_source_guid</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a6c9c8503e5b53cb0ee239466371ce97a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_subscription_guid</name>
      <anchorfile>structDDS__SampleInfo.html</anchorfile>
      <anchor>a8a6aae39087bc7db58797e8ba7caed7c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__SampleInfo">Interpretation_SampleInfo</docanchor>
    <docanchor file="structDDS__SampleInfo">Interpretation_generation_count</docanchor>
    <docanchor file="structDDS__SampleInfo">Interpretation_rank</docanchor>
    <docanchor file="structDDS__SampleInfo">Interpretation_counters_ranks</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_SampleInfoSeq</name>
    <filename>structDDS__SampleInfoSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_SampleLostStatus</name>
    <filename>structDDS__SampleLostStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__SampleLostStatus.html</anchorfile>
      <anchor>a43052fd273fe98fdc508b728469e822f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__SampleLostStatus.html</anchorfile>
      <anchor>af0737bd3744cb5e1021a431ec04b52f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_SampleLostStatusKind</type>
      <name>last_reason</name>
      <anchorfile>structDDS__SampleLostStatus.html</anchorfile>
      <anchor>ad21c353ebef7723adbf01e1d0fde890a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SampleRejectedStatus</name>
    <filename>structDDS__SampleRejectedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__SampleRejectedStatus.html</anchorfile>
      <anchor>a58bd6450fcdeb191ee38e2cf0b365ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__SampleRejectedStatus.html</anchorfile>
      <anchor>a747f4af3354e62f0319a0fee1f9bf54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_SampleRejectedStatusKind</type>
      <name>last_reason</name>
      <anchorfile>structDDS__SampleRejectedStatus.html</anchorfile>
      <anchor>a930005a07242fa12a57d4987d318340d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_instance_handle</name>
      <anchorfile>structDDS__SampleRejectedStatus.html</anchorfile>
      <anchor>a3429f50361863c76cbf746c10808c016</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SequenceNumber_t</name>
    <filename>structDDS__SequenceNumber__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>high</name>
      <anchorfile>structDDS__SequenceNumber__t.html</anchorfile>
      <anchor>a297641f04b0922146eb19a081699941d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>low</name>
      <anchorfile>structDDS__SequenceNumber__t.html</anchorfile>
      <anchor>a5a5d03c1c000db23622583d2070e4b6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ServiceQosPolicy</name>
    <filename>structDDS__ServiceQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_ServiceQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__ServiceQosPolicy.html</anchorfile>
      <anchor>ac388bd78bb2dc4cf4e27ece71feb7110</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ShortSeq</name>
    <filename>structDDS__ShortSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_StringSeq</name>
    <filename>structDDS__StringSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_StructMember</name>
    <filename>structDDS__StructMember.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>a41be098fb181055b8823b79169a52e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_TypeCode *</type>
      <name>type</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>a694e5150f9adc88b81ae0385910a59f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_pointer</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>a587e0680067e02a10c0b3f1230022889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Short</type>
      <name>bits</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>a3ac5d3bde358e53bc844f9cf8b6380d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_key</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>a243a40a0951f4e24cfdf35e7db129c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>id</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>acf2a241f2c43bbaa764ae2b4dda4c033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_optional</name>
      <anchorfile>structDDS__StructMember.html</anchorfile>
      <anchor>a2da3cffca27bb6730ba31fc80878b5d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_StructMemberSeq</name>
    <filename>structDDS__StructMemberSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_SubscriberQos</name>
    <filename>structDDS__SubscriberQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>a754106d5d1cd969a417407cfa59f317c</anchor>
      <arglist>(const DDS_SubscriberQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>a7414ed47ba5b0a2dd1af29cc739a8708</anchor>
      <arglist>(const DDS_SubscriberQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PresentationQosPolicy</type>
      <name>presentation</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>ab282433860a1971397e4583941bd4812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PartitionQosPolicy</type>
      <name>partition</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>a5aff8656c5f0ce9a114cb08eb9137d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GroupDataQosPolicy</type>
      <name>group_data</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>ae315947ac7e283c47db93359bce4209b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityFactoryQosPolicy</type>
      <name>entity_factory</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>a5b0e4b5eccb7b96354b2c61b1ea1fcdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ExclusiveAreaQosPolicy</type>
      <name>exclusive_area</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>ac1ddef02a55d6635bfb43d07318d7a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>subscriber_name</name>
      <anchorfile>structDDS__SubscriberQos.html</anchorfile>
      <anchor>a1eed731765cd5e173a7188f6d42fc68b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SubscriptionBuiltinTopicData</name>
    <filename>structDDS__SubscriptionBuiltinTopicData.html</filename>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>key</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a829b79fa1e5e47f1674ed2f8f185b822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>participant_key</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a97024e2fde388e76064f675b27c37d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>topic_name</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a0efa9df748625b49236c97b2a3d931a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>type_name</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a55f18ae15068f9cd4a00d9b1d76f7280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityQosPolicy</type>
      <name>durability</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a54e08da9c9a243553008d6639840fb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DeadlineQosPolicy</type>
      <name>deadline</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a596c3889d7832089acfc6bc993933294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LatencyBudgetQosPolicy</type>
      <name>latency_budget</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a287fcbce93a86d3d4eab693fc0a62341</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LivelinessQosPolicy</type>
      <name>liveliness</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a713277aec1eed944de33226f92f24460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliabilityQosPolicy</type>
      <name>reliability</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a84ad8f24bfc84563082e5708b15d5103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipQosPolicy</type>
      <name>ownership</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a2474a9d4c4668abad2b408fea10e3fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DestinationOrderQosPolicy</type>
      <name>destination_order</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a7e371141c97ca6dd30c4bec75263554f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_UserDataQosPolicy</type>
      <name>user_data</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>ad18ba165bfc8e733aaec2ff0c57d6d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TimeBasedFilterQosPolicy</type>
      <name>time_based_filter</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a73bdc0aed1c4d8c17793d199d6dcba06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PresentationQosPolicy</type>
      <name>presentation</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>aa088b37585057d548739d168989a06d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PartitionQosPolicy</type>
      <name>partition</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a424ff83753397bb5be1149947e9c9931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TopicDataQosPolicy</type>
      <name>topic_data</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a61213decf9e41ddcbc853d7575f7d623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GroupDataQosPolicy</type>
      <name>group_data</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>ae9d9f7b777d8621b6f09354f47fb9f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeConsistencyEnforcementQosPolicy</type>
      <name>type_consistency</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>ac975a385763c3635c4b264bc9aedec51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TypeCode *</type>
      <name>type_code</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>aca7583fbd453efdf223d9238d93df684</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>subscriber_key</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>ad86fd3da1c24c88c77f56586db060948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_PropertyQosPolicy</type>
      <name>property</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a4236a321a86446dcd6a0d23ca3ef6901</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LocatorSeq</type>
      <name>unicast_locators</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>afedd7b4a3cbe5d3117dd185e59d45b11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LocatorSeq</type>
      <name>multicast_locators</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a65447c6fc1d3221756620cd1014f3b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ContentFilterProperty_t</type>
      <name>content_filter_property</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a55110c4e020e450a3d050526d6bf9f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>virtual_guid</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a1f148fbebdb22c35c43714ebf1d310ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ServiceQosPolicy</type>
      <name>service</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a91e5245f6f48d4c72d56240987c805a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ProtocolVersion_t</type>
      <name>rtps_protocol_version</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a2028417d0c61bd7a6f3e83abeff7b786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_VendorId_t</type>
      <name>rtps_vendor_id</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a5fac724af6421da23b5f931894dce9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ProductVersion_t</type>
      <name>product_version</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a0dc700468688583d8eff6490a35c43e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>disable_positive_acks</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>a16ff35812effdfa1d235b70120205618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_EntityNameQosPolicy</type>
      <name>subscription_name</name>
      <anchorfile>structDDS__SubscriptionBuiltinTopicData.html</anchorfile>
      <anchor>ad783802b0ede75a1cdb0c814e8f29d53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SubscriptionBuiltinTopicDataSeq</name>
    <filename>structDDS__SubscriptionBuiltinTopicDataSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_SubscriptionMatchedStatus</name>
    <filename>structDDS__SubscriptionMatchedStatus.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count</name>
      <anchorfile>structDDS__SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a8e10280adf89dfe5bc7a68865a33463d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>total_count_change</name>
      <anchorfile>structDDS__SubscriptionMatchedStatus.html</anchorfile>
      <anchor>ada65f66c8299f83bf27e25b11e095f17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>current_count</name>
      <anchorfile>structDDS__SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a122d93087f163acf05228e72c7205a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>current_count_peak</name>
      <anchorfile>structDDS__SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a146595d1d23043741215d67a5d1779bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>current_count_change</name>
      <anchorfile>structDDS__SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a9e107e1857634eb3eafa4c7a5c1b98df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>last_publication_handle</name>
      <anchorfile>structDDS__SubscriptionMatchedStatus.html</anchorfile>
      <anchor>a86f6ab482b31e9404ac762dde237af68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_SystemResourceLimitsQosPolicy</name>
    <filename>structDDS__SystemResourceLimitsQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>max_objects_per_thread</name>
      <anchorfile>structDDS__SystemResourceLimitsQosPolicy.html</anchorfile>
      <anchor>a8cc7def6d9695b336791b8da4977a945</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__SystemResourceLimitsQosPolicy">DDSSystemResourceLimitsQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_ThreadSettings_t</name>
    <filename>structDDS__ThreadSettings__t.html</filename>
    <member kind="variable">
      <type>DDS_ThreadSettingsKindMask</type>
      <name>mask</name>
      <anchorfile>structDDS__ThreadSettings__t.html</anchorfile>
      <anchor>a483d77e2188ccb9a100201bd960842dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>priority</name>
      <anchorfile>structDDS__ThreadSettings__t.html</anchorfile>
      <anchor>a65ec707818aa40c06aaece6cade73f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>stack_size</name>
      <anchorfile>structDDS__ThreadSettings__t.html</anchorfile>
      <anchor>a5ca8243de9aac338350f77d3742ec438</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LongSeq</type>
      <name>cpu_list</name>
      <anchorfile>structDDS__ThreadSettings__t.html</anchorfile>
      <anchor>a5cdd01d0622676a8f0dfa45fd763abd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_ThreadSettingsCpuRotationKind</type>
      <name>cpu_rotation</name>
      <anchorfile>structDDS__ThreadSettings__t.html</anchorfile>
      <anchor>aebad0d098ac0f0d571be0f81ae484f4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_Time_t</name>
    <filename>structDDS__Time__t.html</filename>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_micros</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga94ea859522040a3779d976d6313fcf38</anchor>
      <arglist>(DDS_UnsignedLongLong microseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_millis</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga6bb94f1daa2efb49e78d9e5d153ed8b3</anchor>
      <arglist>(DDS_UnsignedLongLong milliseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_nanos</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga5d32c48a16bc8246e09c623b6307f3c2</anchor>
      <arglist>(DDS_UnsignedLongLong nanoseconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_Time_t</type>
      <name>from_seconds</name>
      <anchorfile>group__DDSTimeSupportModule.html</anchorfile>
      <anchor>ga5a094df7d4f918aece6760361936d185</anchor>
      <arglist>(DDS_UnsignedLong seconds)</arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>sec</name>
      <anchorfile>structDDS__Time__t.html</anchorfile>
      <anchor>a53f0f709937e87105dd88bcf124876c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>nanosec</name>
      <anchorfile>structDDS__Time__t.html</anchorfile>
      <anchor>aeefbede0d9976cbcdce3c7499df4b548</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TimeBasedFilterQosPolicy</name>
    <filename>structDDS__TimeBasedFilterQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>minimum_separation</name>
      <anchorfile>structDDS__TimeBasedFilterQosPolicy.html</anchorfile>
      <anchor>a08ec0ede666c060913e4204434da6373</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__TimeBasedFilterQosPolicy">DDSTimeBasedFilterQosModule_usage</docanchor>
    <docanchor file="structDDS__TimeBasedFilterQosPolicy">DDSTimebasedFilterQosModule_consistency</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_TopicBuiltinTopicData</name>
    <filename>structDDS__TopicBuiltinTopicData.html</filename>
    <member kind="variable">
      <type>DDS_BuiltinTopicKey_t</type>
      <name>key</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a5abde366f4086a89951ed0ad41ec3552</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a74cf7cf7526cff0539496451fd54a659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>type_name</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a1e46c19727f4b7985b2ec65adcefe694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityQosPolicy</type>
      <name>durability</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a9590398b53a0e349184217225b80694b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityServiceQosPolicy</type>
      <name>durability_service</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a3ea8e077741a733da8f6e199f8b6e263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DeadlineQosPolicy</type>
      <name>deadline</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>ab3f3526b01c57be995cfaf801a6a56c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LatencyBudgetQosPolicy</type>
      <name>latency_budget</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>aa174050d3fc177e6acf966c0e9b40046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LivelinessQosPolicy</type>
      <name>liveliness</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a9adf8f9e9ded8660c2f3873db134579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliabilityQosPolicy</type>
      <name>reliability</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a648d9a9811749df5c89f67dfa5a30acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportPriorityQosPolicy</type>
      <name>transport_priority</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a5ae66aea565c093cf83f039e687e22cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LifespanQosPolicy</type>
      <name>lifespan</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>af7daf3aac91016a4535e603c063be9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DestinationOrderQosPolicy</type>
      <name>destination_order</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a1a7faa729c73863f14b900ae484e7575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_HistoryQosPolicy</type>
      <name>history</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>a5dacfe3ecd42be8b3ed0976fa09a12d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ResourceLimitsQosPolicy</type>
      <name>resource_limits</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>ae8ffb3a3aa03686dd2ae074c001fc149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipQosPolicy</type>
      <name>ownership</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>afa56dc550f8ccf285a06e41e4a60c377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TopicDataQosPolicy</type>
      <name>topic_data</name>
      <anchorfile>structDDS__TopicBuiltinTopicData.html</anchorfile>
      <anchor>ad3de82020310c1d0ee09a78aca7385d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TopicBuiltinTopicDataSeq</name>
    <filename>structDDS__TopicBuiltinTopicDataSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_TopicDataQosPolicy</name>
    <filename>structDDS__TopicDataQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_OctetSeq</type>
      <name>value</name>
      <anchorfile>structDDS__TopicDataQosPolicy.html</anchorfile>
      <anchor>a31a1702817a6e128bdeff3d08368e23f</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__TopicDataQosPolicy">DDSTopicDataQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_TopicQos</name>
    <filename>structDDS__TopicQos.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a750d83cd3609abfd6b6d1def9017f6d5</anchor>
      <arglist>(const DDS_TopicQos &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>ad2652f58b2955cd1ddff2996907e1690</anchor>
      <arglist>(const DDS_TopicQos &amp;r) const </arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TopicDataQosPolicy</type>
      <name>topic_data</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>ae96efe2b9e5f06e16b37c2b6b8b4df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityQosPolicy</type>
      <name>durability</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>ad814f17ad9f08d3aa2318f2806b27cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DurabilityServiceQosPolicy</type>
      <name>durability_service</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>ae5ff9cbf0353da6e6e2e9f72b0e9c001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DeadlineQosPolicy</type>
      <name>deadline</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>af8df396008572c1739ef6f6c7e92d03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LatencyBudgetQosPolicy</type>
      <name>latency_budget</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a6e3c7ef1901697d638edd2e85ee6397e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LivelinessQosPolicy</type>
      <name>liveliness</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a02d082bc03756feb579e32cfa6a8efc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ReliabilityQosPolicy</type>
      <name>reliability</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a0f0dffd5eb61bcfee7218ded1c51640c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_DestinationOrderQosPolicy</type>
      <name>destination_order</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>afd29d64f9705bad683f450195d31ba50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_HistoryQosPolicy</type>
      <name>history</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a38517796c42c6d9dad32646e03588e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_ResourceLimitsQosPolicy</type>
      <name>resource_limits</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>aee3b485f1e39518f6208cadcd9cbf4e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportPriorityQosPolicy</type>
      <name>transport_priority</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a7188c1de5f77667af8a8f328e7b268ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LifespanQosPolicy</type>
      <name>lifespan</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a5bece1370f2795cdebf46f764b5b5fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_OwnershipQosPolicy</type>
      <name>ownership</name>
      <anchorfile>structDDS__TopicQos.html</anchorfile>
      <anchor>a4f7303da46443dc750ea755397731444</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportBuiltinQosPolicy</name>
    <filename>structDDS__TransportBuiltinQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_TransportBuiltinKindMask</type>
      <name>mask</name>
      <anchorfile>structDDS__TransportBuiltinQosPolicy.html</anchorfile>
      <anchor>aa9c4ce4fb32311fd42ea80b07643d13c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportInfo_t</name>
    <filename>structDDS__TransportInfo__t.html</filename>
    <member kind="variable">
      <type>NDDS_Transport_ClassId_t</type>
      <name>class_id</name>
      <anchorfile>structDDS__TransportInfo__t.html</anchorfile>
      <anchor>aa30b46d08131cc45d869bde0ea1119a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>message_size_max</name>
      <anchorfile>structDDS__TransportInfo__t.html</anchorfile>
      <anchor>aa5d428fc3773cd8890828813a5c57eb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportInfoSeq</name>
    <filename>structDDS__TransportInfoSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastMapping_t</name>
    <filename>structDDS__TransportMulticastMapping__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>addresses</name>
      <anchorfile>structDDS__TransportMulticastMapping__t.html</anchorfile>
      <anchor>a2248773f1776fc59c72cd53ca4f8403d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>topic_expression</name>
      <anchorfile>structDDS__TransportMulticastMapping__t.html</anchorfile>
      <anchor>a15f1d05bf35b2ddc50f552ae8caf2519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_TransportMulticastMappingFunction_t</type>
      <name>mapping_function</name>
      <anchorfile>structDDS__TransportMulticastMapping__t.html</anchorfile>
      <anchor>a1dfc43719d4ecb2a21633631a7ac576f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastMappingFunction_t</name>
    <filename>structDDS__TransportMulticastMappingFunction__t.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>dll</name>
      <anchorfile>structDDS__TransportMulticastMappingFunction__t.html</anchorfile>
      <anchor>a4fb7b404c6f915f110bfb7306e7231b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>function_name</name>
      <anchorfile>structDDS__TransportMulticastMappingFunction__t.html</anchorfile>
      <anchor>a7b99726a193bac1d84dfec4478194e83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastMappingQosPolicy</name>
    <filename>structDDS__TransportMulticastMappingQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_TransportMulticastMappingSeq</type>
      <name>value</name>
      <anchorfile>structDDS__TransportMulticastMappingQosPolicy.html</anchorfile>
      <anchor>ac1d75524c4e1e3d3c53a813bf37cc4ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastMappingSeq</name>
    <filename>structDDS__TransportMulticastMappingSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastQosPolicy</name>
    <filename>structDDS__TransportMulticastQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_TransportMulticastSettingsSeq</type>
      <name>value</name>
      <anchorfile>structDDS__TransportMulticastQosPolicy.html</anchorfile>
      <anchor>ac40270b582c36ae55a4c63e7ea5b1d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_TransportMulticastQosPolicyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__TransportMulticastQosPolicy.html</anchorfile>
      <anchor>a4ff139c37cf791b837062e299ff9d932</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastSettings_t</name>
    <filename>structDDS__TransportMulticastSettings__t.html</filename>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>transports</name>
      <anchorfile>structDDS__TransportMulticastSettings__t.html</anchorfile>
      <anchor>af0441a34b57f344b2ba25fd05568dc5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>receive_address</name>
      <anchorfile>structDDS__TransportMulticastSettings__t.html</anchorfile>
      <anchor>a58f80ed4bc312aef71f86dda512425bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>receive_port</name>
      <anchorfile>structDDS__TransportMulticastSettings__t.html</anchorfile>
      <anchor>abb4f51ce026d2feccee38e7b2e80d6dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportMulticastSettingsSeq</name>
    <filename>structDDS__TransportMulticastSettingsSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportPriorityQosPolicy</name>
    <filename>structDDS__TransportPriorityQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>value</name>
      <anchorfile>structDDS__TransportPriorityQosPolicy.html</anchorfile>
      <anchor>a47435f55f48cd2c39c6a2229c38040df</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__TransportPriorityQosPolicy">DDSTransportPriorityQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportSelectionQosPolicy</name>
    <filename>structDDS__TransportSelectionQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>enabled_transports</name>
      <anchorfile>structDDS__TransportSelectionQosPolicy.html</anchorfile>
      <anchor>ad43378cad73e806289a70bc86a28fe0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportUnicastQosPolicy</name>
    <filename>structDDS__TransportUnicastQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_TransportUnicastSettingsSeq</type>
      <name>value</name>
      <anchorfile>structDDS__TransportUnicastQosPolicy.html</anchorfile>
      <anchor>aa900b5efc6c69e9fd0cfd42188f1c44d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__TransportUnicastQosPolicy">DDSTransportUnicastQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportUnicastSettings_t</name>
    <filename>structDDS__TransportUnicastSettings__t.html</filename>
    <member kind="variable">
      <type>struct DDS_StringSeq</type>
      <name>transports</name>
      <anchorfile>structDDS__TransportUnicastSettings__t.html</anchorfile>
      <anchor>ad68884b4eb4d0e2f1c72e642d829280a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>receive_port</name>
      <anchorfile>structDDS__TransportUnicastSettings__t.html</anchorfile>
      <anchor>af44eba972ed8591e56da11c3f9d61164</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TransportUnicastSettingsSeq</name>
    <filename>structDDS__TransportUnicastSettingsSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_TypeAllocationParams_t</name>
    <filename>structDDS__TypeAllocationParams__t.html</filename>
    <member kind="function">
      <type>struct DDS_TypeAllocationParams_t &amp;</type>
      <name>set_allocate_pointers</name>
      <anchorfile>structDDS__TypeAllocationParams__t.html</anchorfile>
      <anchor>a2b950915162303fb7469826ed17e2e98</anchor>
      <arglist>(DDS_Boolean allocate_pointers)</arglist>
    </member>
    <member kind="function">
      <type>struct DDS_TypeAllocationParams_t &amp;</type>
      <name>set_allocate_optional_members</name>
      <anchorfile>structDDS__TypeAllocationParams__t.html</anchorfile>
      <anchor>a0bf6f3ac9dc980275ad50b4c430d6701</anchor>
      <arglist>(DDS_Boolean allocate_optional_members)</arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>allocate_pointers</name>
      <anchorfile>structDDS__TypeAllocationParams__t.html</anchorfile>
      <anchor>a6a771e49d66d177ca11690acade22abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>allocate_optional_members</name>
      <anchorfile>structDDS__TypeAllocationParams__t.html</anchorfile>
      <anchor>a03da0368c90f38209c63dc31c7e28896</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TypeCode</name>
    <filename>structDDS__TypeCode.html</filename>
    <member kind="function">
      <type>DDS_TCKind</type>
      <name>kind</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a892627af848b5a4d32bcf57bd5feb781</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ExtensibilityKind</type>
      <name>extensibility_kind</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>af1fdea91a025d81592e12069d8288d4e</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>equal</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a5ff1c0771426b671519938b7e7e1ff1f</anchor>
      <arglist>(const DDS_TypeCode *tc, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a63477c110ebeb5b4646b08605ad8388b</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>member_count</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a03cd57d062d064d84c39a4bab76ff72d</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>member_name</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>aad631aa06247491439b15f7a9b127a5a</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>find_member_by_name</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a70c49f1f968cf185a4a8a18a6e2d037d</anchor>
      <arglist>(const char *name, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>member_type</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a2548a486e468b5d64086e13603a67628</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>member_label_count</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>aa0103b7798ab2dc832ec2437974afb5c</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Long</type>
      <name>member_label</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a52cab05607ffdf71b336c5e43962c94b</anchor>
      <arglist>(DDS_UnsignedLong member_index, DDS_UnsignedLong label_index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Long</type>
      <name>member_ordinal</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ad000d42399926b5116094e199046b1a4</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_member_key</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ac11734bec0adf7d566cb2ede675ccb95</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_member_required</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>af530450b9bd8c1c34a6ad3a42895d2b2</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_member_pointer</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>abf4ac58c349980620924cbca42a9fa1c</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_member_bitfield</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a78194b5ade35298fe7ea932ad94babc1</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Short</type>
      <name>member_bitfield_bits</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a820c10bc14fadd7b02599f1090a456c8</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Visibility</type>
      <name>member_visibility</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a5e80a82ac6931006e3d3c621f8a7ffdd</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>discriminator_type</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a15719602822a4a44c8e17ea22f2756d6</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>length</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>af6c7b68075375c5a96fef19893bcf754</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>array_dimension_count</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>af24e5407e640411ca42d0140ee227d87</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>array_dimension</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ad8d1ad3d09eb2ac6a31d89346887866f</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>element_count</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a95215752d204638e3c62affb0598a862</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>content_type</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>aec1a5547960292be67bcd8c06a96822b</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_alias_pointer</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a8243bff524b3ea56427bd85213828556</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Long</type>
      <name>default_index</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a549da831be5443a2e8293184fd895551</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>concrete_base_type</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ae4eb83be0cfa62153d8b82ce28af2752</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ValueModifier</type>
      <name>type_modifier</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ad469051c284cc733c0383505b8f1fcc8</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Long</type>
      <name>member_id</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a00934a41bb19098c461565e4a62a133c</anchor>
      <arglist>(DDS_UnsignedLong index, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>find_member_by_id</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>aaae28dfb9bc7a21d5344a0a0456668d6</anchor>
      <arglist>(DDS_Long id, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>get_type_object_serialized_size</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ab0956063dc076d5a0f08c0dcc51a87a1</anchor>
      <arglist>(DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>add_member_to_enum</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ae387864ebe50e4409fc7e8ad30abab90</anchor>
      <arglist>(const char *name, DDS_Long ordinal, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>add_member_to_union</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ae5615f5226a5cc7b4ffa985972cd7c28</anchor>
      <arglist>(const char *name, DDS_Long id, const DDS_LongSeq &amp;labels, const DDS_TypeCode *tc, DDS_Boolean is_pointer, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>add_member</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a17134eea9ca754d6201714b9d48dfa7b</anchor>
      <arglist>(const char *name, DDS_Long id, const DDS_TypeCode *tc, DDS_Octet member_flags, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_UnsignedLong</type>
      <name>add_member_ex</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>ae008fb8d9fa0ada5d838e4f1059c2909</anchor>
      <arglist>(const char *name, DDS_Long id, const DDS_TypeCode *tc, DDS_Octet member_flags, DDS_Visibility visibility, DDS_Boolean is_pointer, DDS_Short bits, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_IDL</name>
      <anchorfile>structDDS__TypeCode.html</anchorfile>
      <anchor>a4fa3dd558a7ae11dbae08489e6c62091</anchor>
      <arglist>(DDS_UnsignedLong indent, DDS_ExceptionCode_t &amp;ex) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TypeCodeFactory</name>
    <filename>structDDS__TypeCodeFactory.html</filename>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>clone_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a0027a046c59d652d7379ee88053cd742</anchor>
      <arglist>(const DDS_TypeCode *tc, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>aa502605973e2df7f70208defd4d0d621</anchor>
      <arglist>(DDS_TypeCode *tc, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>const DDS_TypeCode *</type>
      <name>get_primitive_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>af8701d6a48e86db25c8956dfd0b759d8</anchor>
      <arglist>(DDS_TCKind tc_kind)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_struct_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>ad12e5873dd93fda53d4a15571c676d52</anchor>
      <arglist>(const char *name, const DDS_StructMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_struct_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a514ad9fc8793a8fb2e71ff8ee667c5be</anchor>
      <arglist>(const char *name, DDS_ExtensibilityKind extensibility_kind, const DDS_StructMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_value_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>ac2c72e39002759a98248c909de2e923b</anchor>
      <arglist>(const char *name, DDS_ValueModifier type_modifier, const DDS_TypeCode *concrete_base, const DDS_ValueMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_value_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a153095e5ff9f7dac6f700d96486460e1</anchor>
      <arglist>(const char *name, DDS_ExtensibilityKind extensibility_kind, DDS_ValueModifier type_modifier, const DDS_TypeCode *concrete_base, const DDS_ValueMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_union_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a99f448fd31ec74f53e05d786d9b5d4a7</anchor>
      <arglist>(const char *name, const DDS_TypeCode *discriminator_type, DDS_Long default_index, const DDS_UnionMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_union_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a072deda8707bddb0d6b864e4410cf369</anchor>
      <arglist>(const char *name, DDS_ExtensibilityKind extensibility_kind, const DDS_TypeCode *discriminator_type, DDS_Long default_index, const DDS_UnionMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_enum_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a811d4ad003f75c9400f789af4043f001</anchor>
      <arglist>(const char *name, const DDS_EnumMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_enum_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>ad8f3330e487cf5c2a331f634d420e91c</anchor>
      <arglist>(const char *name, DDS_ExtensibilityKind extensibility_kind, const DDS_EnumMemberSeq &amp;members, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_alias_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a6e78f9470ccf0db780ee130bc1204e54</anchor>
      <arglist>(const char *name, const DDS_TypeCode *original_type, DDS_Boolean is_pointer, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_string_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>aa83b20f5e2a600e763c84f769e1ebbde</anchor>
      <arglist>(DDS_UnsignedLong bound, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_wstring_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a8da635355fab0713b05ceed61c9207fd</anchor>
      <arglist>(DDS_UnsignedLong bound, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_sequence_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>afed13e0d74d54cbea46c40baa5763aa0</anchor>
      <arglist>(DDS_UnsignedLong bound, const DDS_TypeCode *element_type, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_array_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a828a73f6fbe3e8c26b8b4ad654b5db3a</anchor>
      <arglist>(const DDS_UnsignedLongSeq &amp;dimensions, const DDS_TypeCode *element_type, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type>DDS_TypeCode *</type>
      <name>create_array_tc</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a7fd9ace239f4caf5b702b36c7d8a6e34</anchor>
      <arglist>(DDS_UnsignedLong length, const DDS_TypeCode *element_type, DDS_ExceptionCode_t &amp;ex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_TypeCodeFactory *</type>
      <name>get_instance</name>
      <anchorfile>structDDS__TypeCodeFactory.html</anchorfile>
      <anchor>a2ce5fa61153692525a2f82da507b012c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TypeConsistencyEnforcementQosPolicy</name>
    <filename>structDDS__TypeConsistencyEnforcementQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_TypeConsistencyKind</type>
      <name>kind</name>
      <anchorfile>structDDS__TypeConsistencyEnforcementQosPolicy.html</anchorfile>
      <anchor>a366e358a9fc1095fa5ed89d4cc03d911</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TypeDeallocationParams_t</name>
    <filename>structDDS__TypeDeallocationParams__t.html</filename>
    <member kind="function">
      <type>struct DDS_TypeDeallocationParams_t &amp;</type>
      <name>set_delete_pointers</name>
      <anchorfile>structDDS__TypeDeallocationParams__t.html</anchorfile>
      <anchor>aaa87b40d3152d462f4be629e35290ebb</anchor>
      <arglist>(DDS_Boolean delete_pointers)</arglist>
    </member>
    <member kind="function">
      <type>struct DDS_TypeDeallocationParams_t &amp;</type>
      <name>set_delete_optional_members</name>
      <anchorfile>structDDS__TypeDeallocationParams__t.html</anchorfile>
      <anchor>a8c25d25292b21238e962ed667652c0bb</anchor>
      <arglist>(DDS_Boolean delete_optional_members)</arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>delete_pointers</name>
      <anchorfile>structDDS__TypeDeallocationParams__t.html</anchorfile>
      <anchor>a5bc8e5da998db179aaac32a0cd6db18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>delete_optional_members</name>
      <anchorfile>structDDS__TypeDeallocationParams__t.html</anchorfile>
      <anchor>a6234eefb763e7250c88d03d61af8db4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_TypeSupportQosPolicy</name>
    <filename>structDDS__TypeSupportQosPolicy.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>plugin_data</name>
      <anchorfile>structDDS__TypeSupportQosPolicy.html</anchorfile>
      <anchor>a3ebe86ac341a637dff8a35839c404f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_CdrPaddingKind</type>
      <name>cdr_padding_kind</name>
      <anchorfile>structDDS__TypeSupportQosPolicy.html</anchorfile>
      <anchor>a0916d802f0bc4f2dc26147401d669258</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__TypeSupportQosPolicy">DDSTypeSupportQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_UnionMember</name>
    <filename>structDDS__UnionMember.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__UnionMember.html</anchorfile>
      <anchor>a37c7fb6ee0f17ee3cfcc0ce816ff83fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_pointer</name>
      <anchorfile>structDDS__UnionMember.html</anchorfile>
      <anchor>ad934a158dded86f153545438cd51d234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_LongSeq</type>
      <name>labels</name>
      <anchorfile>structDDS__UnionMember.html</anchorfile>
      <anchor>aa43e9a28a879aaf12d849733320b4dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_TypeCode *</type>
      <name>type</name>
      <anchorfile>structDDS__UnionMember.html</anchorfile>
      <anchor>ac0c2ee7ae58eb28a10415b9db485bb0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_UnionMemberSeq</name>
    <filename>structDDS__UnionMemberSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_UnsignedLongLongSeq</name>
    <filename>structDDS__UnsignedLongLongSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_UnsignedLongSeq</name>
    <filename>structDDS__UnsignedLongSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_UnsignedShortSeq</name>
    <filename>structDDS__UnsignedShortSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_UserDataQosPolicy</name>
    <filename>structDDS__UserDataQosPolicy.html</filename>
    <member kind="variable">
      <type>struct DDS_OctetSeq</type>
      <name>value</name>
      <anchorfile>structDDS__UserDataQosPolicy.html</anchorfile>
      <anchor>a3f61b61c8f3fd5c92908ac6a8cdd97f2</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__UserDataQosPolicy">DDSUserDataQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_ValueMember</name>
    <filename>structDDS__ValueMember.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a2efe43775afb553f666b42d41212cebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const DDS_TypeCode *</type>
      <name>type</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>ad3cb7e943f6568b84438e7cec3d49e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_pointer</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a16ccbeb94ebd073c689aada91996edbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Short</type>
      <name>bits</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a3eab1919b63ecc326402f88f87cc7496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_key</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a2b9a5fc0d522b1a043dda5c177862379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Visibility</type>
      <name>access</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a28c64e1b72da92a2dffcb9437aba90b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>id</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a4e49dd84d94476fea1bfdf9bb75e0364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>is_optional</name>
      <anchorfile>structDDS__ValueMember.html</anchorfile>
      <anchor>a95bb90b560ae9b0ed7070d7395de802b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_ValueMemberSeq</name>
    <filename>structDDS__ValueMemberSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_VendorId_t</name>
    <filename>structDDS__VendorId__t.html</filename>
    <member kind="variable">
      <type>DDS_Octet</type>
      <name>vendorId</name>
      <anchorfile>structDDS__VendorId__t.html</anchorfile>
      <anchor>ab6628df71117d414d85118c5529f7b8a</anchor>
      <arglist>[DDS_VENDOR_ID_LENGTH_MAX]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_WaitSetProperty_t</name>
    <filename>structDDS__WaitSetProperty__t.html</filename>
    <member kind="variable">
      <type>long</type>
      <name>max_event_count</name>
      <anchorfile>structDDS__WaitSetProperty__t.html</anchorfile>
      <anchor>abd76a6d13b625ad0e8f252c585eca301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>max_event_delay</name>
      <anchorfile>structDDS__WaitSetProperty__t.html</anchorfile>
      <anchor>a8204531ee7dcb0e92d18ac506a3bee63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_WcharSeq</name>
    <filename>structDDS__WcharSeq.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDS_WireProtocolQosPolicy</name>
    <filename>structDDS__WireProtocolQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>participant_id</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>af8282d78bd332c9b82d0112fab8c63d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>rtps_host_id</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>a1ec4d6bea721b98a18f77a6f427071a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>rtps_app_id</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>aef56b6377850104aa6d3bd6accb6021d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_UnsignedLong</type>
      <name>rtps_instance_id</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>a59b4f2ecc0b6f73803797c8126945926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_RtpsWellKnownPorts_t</type>
      <name>rtps_well_known_ports</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>a61e692035278a96fd3a6c09328aeb442</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_RtpsReservedPortKindMask</type>
      <name>rtps_reserved_port_mask</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>af317c634a6c4d98f51791295128a405a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_WireProtocolQosPolicyAutoKind</type>
      <name>rtps_auto_id_kind</name>
      <anchorfile>structDDS__WireProtocolQosPolicy.html</anchorfile>
      <anchor>a7818ef96ca05c3f01d7b55fa18a5f6cb</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__WireProtocolQosPolicy">DDSWireProtocolQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_WriteParams_t</name>
    <filename>structDDS__WriteParams__t.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>replace_auto</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>aa10fad0c0351fd46c462383939f4b05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SampleIdentity_t</type>
      <name>identity</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>a0b80053f2cf2e81f7e0278ca64029ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_SampleIdentity_t</type>
      <name>related_sample_identity</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>acc8b6ee944b03a6edb37e8a3e097ac4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Time_t</type>
      <name>source_timestamp</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>a2f79abac4bf7b21bf9d7c17765b689d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_InstanceHandle_t</type>
      <name>handle</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>a516042f3270081bdb65a9b38f710d35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>priority</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>abcd40c21d64ccb446c12192bd4b9b3a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_SampleFlag</type>
      <name>flag</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>aa3424157c29b5077980f7f805851c731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>source_guid</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>af298a23ee052396122ee4bb3b96a3860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_source_guid</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>a922939af8fb278457b372d48a333081f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_GUID_t</type>
      <name>related_reader_guid</name>
      <anchorfile>structDDS__WriteParams__t.html</anchorfile>
      <anchor>a4893a536ae78e1ebd4c7ca49c00eca7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDS_WriterDataLifecycleQosPolicy</name>
    <filename>structDDS__WriterDataLifecycleQosPolicy.html</filename>
    <member kind="variable">
      <type>DDS_Boolean</type>
      <name>autodispose_unregistered_instances</name>
      <anchorfile>structDDS__WriterDataLifecycleQosPolicy.html</anchorfile>
      <anchor>a07278894e9636ebabd43b8188beb99e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>autopurge_unregistered_instances_delay</name>
      <anchorfile>structDDS__WriterDataLifecycleQosPolicy.html</anchorfile>
      <anchor>a7342bd59afe8c033870b00bae0beddf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct DDS_Duration_t</type>
      <name>autopurge_disposed_instances_delay</name>
      <anchorfile>structDDS__WriterDataLifecycleQosPolicy.html</anchorfile>
      <anchor>a412d14feeabad276a90c3baae5f5e821</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="structDDS__WriterDataLifecycleQosPolicy">DDSWriterDataLifecycleQosModule_usage</docanchor>
  </compound>
  <compound kind="struct">
    <name>DDS_WstringSeq</name>
    <filename>structDDS__WstringSeq.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSCondition</name>
    <filename>classDDSCondition.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>get_trigger_value</name>
      <anchorfile>classDDSCondition.html</anchorfile>
      <anchor>a2a9ddc4cd969dca7f9fffd50a1df0af8</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DDSConditionSeq</name>
    <filename>structDDSConditionSeq.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSContentFilter</name>
    <filename>classDDSContentFilter.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>compile</name>
      <anchorfile>classDDSContentFilter.html</anchorfile>
      <anchor>a63e32ab4238cac00b291c5b7ce669067</anchor>
      <arglist>(void **new_compile_data, const char *expression, const DDS_StringSeq &amp;parameters, const DDS_TypeCode *type_code, const char *type_class_name, void *old_compile_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>evaluate</name>
      <anchorfile>classDDSContentFilter.html</anchorfile>
      <anchor>aabc22210922ebc59257a79f984e7a2b2</anchor>
      <arglist>(void *compile_data, const void *sample, const struct DDS_FilterSampleInfo *meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classDDSContentFilter.html</anchorfile>
      <anchor>acf5c25a7d696c0ac5601b5be10b3d7b5</anchor>
      <arglist>(void *compile_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSContentFilteredTopic</name>
    <filename>classDDSContentFilteredTopic.html</filename>
    <base>DDSTopicDescription</base>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_filter_expression</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>a28711a3187ef109efe1a9458a7708e2b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_expression_parameters</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>a2544a0e845e8252641f15c5534e822bf</anchor>
      <arglist>(DDS_StringSeq &amp;parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_expression_parameters</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>acebb54815c4b449acd3dc5f7f6bef02b</anchor>
      <arglist>(const DDS_StringSeq &amp;parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_expression</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>af9a0cd6012f9879f8a2da4cd06e750b2</anchor>
      <arglist>(const char *expression, const DDS_StringSeq &amp;parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>append_to_expression_parameter</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>a0fca75c440681d587cd3fe6c974a5b49</anchor>
      <arglist>(const DDS_Long index, const char *val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>remove_from_expression_parameter</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>aaba06d831c342f88f4f5d627d4efdc81</anchor>
      <arglist>(const DDS_Long index, const char *val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSTopic *</type>
      <name>get_related_topic</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>ad17f952c86fde8b875ca68feeca293c4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a90b53a1c114b40e674e51b5ae9221881</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a1aaa018434f6a8dab450ac8c89f6bf65</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>ae2bf787bb77f8764976c97c4364e53e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSContentFilteredTopic *</type>
      <name>narrow</name>
      <anchorfile>classDDSContentFilteredTopic.html</anchorfile>
      <anchor>a62194d913afff16aa48c3ec9046c806e</anchor>
      <arglist>(DDSTopicDescription *topic_description)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDataReader</name>
    <filename>classDDSDataReader.html</filename>
    <base>DDSDomainEntity</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDataReaderListener</name>
    <filename>classDDSDataReaderListener.html</filename>
    <base virtualness="virtual">DDSListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a9af69ce52e0af0b3683725539c1d0856</anchor>
      <arglist>(DDSDataReader *reader, const DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a1345f9c3b35805f3d2f6566009ed8ab3</anchor>
      <arglist>(DDSDataReader *reader, const DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a40633c2ba81a49466ba4cc1bbc22e521</anchor>
      <arglist>(DDSDataReader *reader, const DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a993e451eb838555c1f351de97fc4a7c8</anchor>
      <arglist>(DDSDataReader *reader, const DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a2bf93bed2f7bdb7b654489010386cd8f</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>ad40c2dbb69d8ca9640cd20660eb26a8a</anchor>
      <arglist>(DDSDataReader *reader, const DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a6f83d0704634023dd8e1a66f83f3e022</anchor>
      <arglist>(DDSDataReader *reader, const DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDataReaderSeq</name>
    <filename>classDDSDataReaderSeq.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSDataWriter</name>
    <filename>classDDSDataWriter.html</filename>
    <base>DDSDomainEntity</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDataWriterListener</name>
    <filename>classDDSDataWriterListener.html</filename>
    <base virtualness="virtual">DDSListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a1c1723bb81c548264780d8b22c406849</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>ae60da4bf340932692394b89489e84893</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>aaa46c2b3a743f9ec8473ba99e1c71554</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>ab7b1ca573cb1be49aeda49846cc20b8d</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a5be4242a16ca4dfd27d0add4edf4d925</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>aa4d34ce27b8ff0d2614cddcfa7b7d2bf</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a971e52d216b2bcee066ac14de8bec972</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_application_acknowledgment</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a9eea859908c72901e17c7825f95e01b1</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_AcknowledgmentInfo &amp;info)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDomainEntity</name>
    <filename>classDDSDomainEntity.html</filename>
    <base>DDSEntity</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a72a6282c6d45e23a9f5d5aa0a90ddbed</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a5f66ca58a9e7493d02c49cd555d297e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>afee81334bd94a0bbe327c98d0a90310d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a05b50d86b5b05f8a0f4824217e015d6e</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDomainParticipant</name>
    <filename>classDDSDomainParticipant.html</filename>
    <base>DDSEntity</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_datawriter_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ae81dec99f679b33b1456b64f7041e945</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datawriter_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>aa4d8e1990ef2029ce627c2f77c241f52</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datawriter_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ac37e2c8bdf4062d81f19d7069928aa74</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_datareader_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a208a39beaa7a96f7c4b6b2d231ac1c48</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datareader_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a5416f308a9c00ad40b84dc72b59aa907</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datareader_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a7524a8756335461786e0c0d0d90dffce</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_flowcontroller_property</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a55b50282258764d5e63463f79b23b2e6</anchor>
      <arglist>(DDS_FlowControllerProperty_t &amp;prop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_flowcontroller_property</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a311d86e291f82ae402c4095094ce9780</anchor>
      <arglist>(const DDS_FlowControllerProperty_t &amp;prop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>register_contentfilter</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a1b166b68d7e50c246d86837ced1e1b3f</anchor>
      <arglist>(const char *filter_name, const DDSContentFilter *contentfilter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSContentFilter *</type>
      <name>lookup_contentfilter</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>aed8c29b972d3d83ad8bdf1bc53bf201c</anchor>
      <arglist>(const char *filter_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_contentfilter</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>afe8dcdac90833376697a12768494bd29</anchor>
      <arglist>(const char *filter_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_library</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a10f9125249d5d35ccdea2c0efec5263f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a64fbc1e742647b69be2da9fc54b36520</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile_library</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ad08a1792f6c8ecefe32cd1a0b443ec07</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_library</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>aed1a41f879ee8e899aebb79b6ac4cdb0</anchor>
      <arglist>(const char *library_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a87f27c12452478a3136c71c8be8e05c3</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_topic_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a21c7a2a72f48d20d3a85b5e3672af803</anchor>
      <arglist>(DDS_TopicQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_topic_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a537054c769b8cb09c73de64abce7ad61</anchor>
      <arglist>(const DDS_TopicQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_topic_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a1655d2d784ffc5d6c17e0f66a6344a7c</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_publisher_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a7220dec35922a06b23cf2dde4a81ff0b</anchor>
      <arglist>(DDS_PublisherQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_publisher_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ada8c9be16acb389be9a2a5759f2f9c30</anchor>
      <arglist>(const DDS_PublisherQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_publisher_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>acca7b7bdd6e9366f24ad5632069376d4</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_subscriber_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a4f914a8c3b962c97925b8999d9e69ef6</anchor>
      <arglist>(DDS_SubscriberQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_subscriber_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a230f256b05f50a6eed34a2caeda87cf5</anchor>
      <arglist>(const DDS_SubscriberQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_subscriber_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a9c153d8c3ecd947260c6b547bf0dc7af</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSPublisher *</type>
      <name>create_publisher</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ac26ec7419b4bfe047b9a89ab9a9b04cd</anchor>
      <arglist>(const DDS_PublisherQos &amp;qos, DDSPublisherListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSPublisher *</type>
      <name>create_publisher_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a79e652b33cd70928dc582dd997afa3db</anchor>
      <arglist>(const char *library_name, const char *profile_name, DDSPublisherListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_publisher</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ae4ccd860faa7c68fa85b3f21c02d5830</anchor>
      <arglist>(DDSPublisher *p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSSubscriber *</type>
      <name>create_subscriber</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a1e25e4a6559badb59b81308df58636a3</anchor>
      <arglist>(const DDS_SubscriberQos &amp;qos, DDSSubscriberListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSSubscriber *</type>
      <name>create_subscriber_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>aeb488d4b13c00bd9c66fdba391a84456</anchor>
      <arglist>(const char *library_name, const char *profile_name, DDSSubscriberListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_subscriber</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ac9eb541be08b93656033c2d3257a62f4</anchor>
      <arglist>(DDSSubscriber *s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publishers</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a1da6dc0967486132d15b540b836e6f84</anchor>
      <arglist>(DDSPublisherSeq &amp;publishers)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscribers</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>acc697915a7b7f287b8beea9d08762b68</anchor>
      <arglist>(DDSSubscriberSeq &amp;subscribers)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSTopic *</type>
      <name>create_topic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a7f249829f7ee94d1461d371800398a21</anchor>
      <arglist>(const char *topic_name, const char *type_name, const DDS_TopicQos &amp;qos, DDSTopicListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSTopic *</type>
      <name>create_topic_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>af59cddad8cb3fc3706a47811a60651b4</anchor>
      <arglist>(const char *topic_name, const char *type_name, const char *library_name, const char *profile_name, DDSTopicListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_topic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ae86a86830b38cd267d9d0cd7bd989478</anchor>
      <arglist>(DDSTopic *topic)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSContentFilteredTopic *</type>
      <name>create_contentfilteredtopic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a5fd57875fde174c8edc953c32fbd2073</anchor>
      <arglist>(const char *name, DDSTopic *related_topic, const char *filter_expression, const DDS_StringSeq &amp;expression_parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSContentFilteredTopic *</type>
      <name>create_contentfilteredtopic_with_filter</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a73efe56cf46148ad99d52c23f76f8da7</anchor>
      <arglist>(const char *name, DDSTopic *related_topic, const char *filter_expression, const DDS_StringSeq &amp;expression_parameters, const char *filter_name=DDS_SQLFILTER_NAME)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contentfilteredtopic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>aa3027042906c798b7e7c565658ccb4ac</anchor>
      <arglist>(DDSContentFilteredTopic *a_contentfilteredtopic)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSMultiTopic *</type>
      <name>create_multitopic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a4ef9725dd3ec81da819c8c505f3010bf</anchor>
      <arglist>(const char *name, const char *type_name, const char *subscription_expression, const DDS_StringSeq &amp;expression_parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_multitopic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a6bfa4bb25f6f180971bf55a02c48d19d</anchor>
      <arglist>(DDSMultiTopic *a_multitopic)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSTopic *</type>
      <name>find_topic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a4495ca19a7c63f82c21a4f07c8200cd9</anchor>
      <arglist>(const char *topic_name, const DDS_Duration_t &amp;timeout)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSTopicDescription *</type>
      <name>lookup_topicdescription</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a33b285799bcc1f5383ff990f3c43a1db</anchor>
      <arglist>(const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSFlowController *</type>
      <name>create_flowcontroller</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a6f427f0d2601df0999d12760bf5b669a</anchor>
      <arglist>(const char *name, const DDS_FlowControllerProperty_t &amp;prop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_flowcontroller</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a91e367ab7cbb78c112179f9b228bf4bd</anchor>
      <arglist>(DDSFlowController *fc)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSFlowController *</type>
      <name>lookup_flowcontroller</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a58ae35e4337a07c41fdb7a68dd0ca895</anchor>
      <arglist>(const char *name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSSubscriber *</type>
      <name>get_builtin_subscriber</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>af5bd9db8c78d0529f7d524c2af9a3fa7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>ignore_participant</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a4784ca9fb1962b8c98ac5b6eac1b7ae7</anchor>
      <arglist>(const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>ignore_topic</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a05d79ef7690e67eadc0c382ea0cc327f</anchor>
      <arglist>(const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>ignore_publication</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ac4db7a0eca6090713162499916acfd0d</anchor>
      <arglist>(const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>ignore_subscription</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ad9b1a187eabf36e2c370bbe1b87f76b0</anchor>
      <arglist>(const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_DomainId_t</type>
      <name>get_domain_id</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a20fcbdbab0107fbe78b9443f442917de</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_current_time</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a02ef8d2fa30233e2581e21ec9daacf45</anchor>
      <arglist>(DDS_Time_t &amp;current_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>register_durable_subscription</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a63b72d66e674e9c70bab7a8b4b1c4fe5</anchor>
      <arglist>(const DDS_EndpointGroup_t &amp;group, const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_durable_subscription</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a7cdc14cccb0e3f8e24c1a2f65cd6645e</anchor>
      <arglist>(const DDS_EndpointGroup_t &amp;group)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a38271f0e046ef131a994dab7f255b2be</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>resume_endpoint_discovery</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a3317aa6a834d3b59c543671609b59959</anchor>
      <arglist>(const DDS_InstanceHandle_t &amp;remote_participant_handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a2a2363401aff0bae9db29b3e4caadaa6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_discovered_participants</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ae4aa63a4df14beb2543f7806a2404a3a</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;participant_handles)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_discovered_participant_data</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a497e71975c2af0b18a984338cffccb7e</anchor>
      <arglist>(struct DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;participant_handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_discovered_topics</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a408b46e0b68d488764ec8a885360be9d</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;topic_handles)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_discovered_topic_data</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a3b5a68b8ea8cd604ecba912a72d1c231</anchor>
      <arglist>(struct DDS_TopicBuiltinTopicData &amp;topic_data, const DDS_InstanceHandle_t &amp;topic_handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>contains_entity</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a33b02bc34b130ec6e1a9960c3c6cef7b</anchor>
      <arglist>(const DDS_InstanceHandle_t &amp;a_handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>afd325a74b01eb3198d3bf4b12275b1cc</anchor>
      <arglist>(const DDS_DomainParticipantQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a8e8ca58b14ab43b4fda670e0fbcf2120</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>acfbcc38598b22d5571e19a7736bc633a</anchor>
      <arglist>(DDS_DomainParticipantQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>add_peer</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ac63c7850346eddd00dbd0e4ea2d3c37f</anchor>
      <arglist>(const char *peer_desc_string)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>remove_peer</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a504359578e3cc0f4c2fba9b0c45c0fcc</anchor>
      <arglist>(const char *peer_desc_string)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a391ea0cda46e2e3b6f806a1395e2728b</anchor>
      <arglist>(DDSDomainParticipantListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipantListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ad40170b5b9d90acd3e6ee384d724e5a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSPublisher *</type>
      <name>get_implicit_publisher</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a5dd357e6acefde027f0a1c70035e4fc5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSSubscriber *</type>
      <name>get_implicit_subscriber</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a41f92202ea2e2ec25c8d53b047af7911</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>create_datawriter</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a22d1dd39f39cd30cc45d8f1aede8c515</anchor>
      <arglist>(DDSTopic *topic, const DDS_DataWriterQos &amp;qos, DDSDataWriterListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>create_datawriter_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a60a5b0b2ff9b0a087283cf704575e1e5</anchor>
      <arglist>(DDSTopic *topic, const char *library_name, const char *profile_name, DDSDataWriterListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_datawriter</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a7abbdbb7425859e46cbfddde7cbfacbc</anchor>
      <arglist>(DDSDataWriter *a_datawriter)=0</arglist>
      <docanchor file="classDDSDomainParticipant">ParticipantDeleteDataWriter_warning</docanchor>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>create_datareader</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>ac0e5f00a45b4f39a96441a19d9d88a0d</anchor>
      <arglist>(DDSTopicDescription *topic, const DDS_DataReaderQos &amp;qos, DDSDataReaderListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>create_datareader_with_profile</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a1dfc973d55df91133acf38dae69963ad</anchor>
      <arglist>(DDSTopicDescription *topic, const char *library_name, const char *profile_name, DDSDataReaderListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_datareader</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a215a50c7f0dc149f196948a728b33a9e</anchor>
      <arglist>(DDSDataReader *a_datareader)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSPublisher *</type>
      <name>lookup_publisher_by_name</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a150669d4e542186281d794dedd204387</anchor>
      <arglist>(const char *publisher_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSSubscriber *</type>
      <name>lookup_subscriber_by_name</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>a01b3bb2c556a44a7f0212b0f684996fd</anchor>
      <arglist>(const char *subscriber_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>lookup_datawriter_by_name</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>aeeae26c301d79bbf4168bea556473960</anchor>
      <arglist>(const char *datawriter_full_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>lookup_datareader_by_name</name>
      <anchorfile>classDDSDomainParticipant.html</anchorfile>
      <anchor>afd7916ab6bf1353d06dcb55c9cf5ee6a</anchor>
      <arglist>(const char *datareader_full_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a72a6282c6d45e23a9f5d5aa0a90ddbed</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a5f66ca58a9e7493d02c49cd555d297e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>afee81334bd94a0bbe327c98d0a90310d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a05b50d86b5b05f8a0f4824217e015d6e</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDomainParticipantFactory</name>
    <filename>classDDSDomainParticipantFactory.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_participant_qos</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a7d49038837faab3bfb2bbb9563e0cd23</anchor>
      <arglist>(const DDS_DomainParticipantQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_participant_qos_with_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>abd37e4dcecfd58beb084f2243d24d78d</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_participant_qos</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aecde5c37b697121e10701fe8e1b0b4d0</anchor>
      <arglist>(DDS_DomainParticipantQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_library</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a07a31c819899980f4f85ce76cc62ce3e</anchor>
      <arglist>(const char *library_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_library</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>ae9c52e2a58036e55be036f248dffcba3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aa1c4653ba644686ce8cdf1689f48dc0c</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a463f957f0618147d62aacb0ef25b98cd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile_library</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>acc18376e3356d82ec5e4547a2a28bac5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_participant_factory_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a5bd4430671462f97863bb15a34c55086</anchor>
      <arglist>(DDS_DomainParticipantFactoryQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_participant_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a41e28fa351a8e9388d6017b339a7b1d8</anchor>
      <arglist>(DDS_DomainParticipantQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publisher_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a19688c4156f812b208c2228f90790900</anchor>
      <arglist>(DDS_PublisherQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscriber_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>ac90b048be74ca63cecf785ad39dec62b</anchor>
      <arglist>(DDS_SubscriberQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aa0f64912d3fb078c00ef50b6cc231b33</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_qos_from_profile_w_topic_name</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a3a23c4a3e7db4ae84662ac9e42bc8e47</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos, const char *library_name, const char *profile_name, const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>ab42e44d372415c4c8439ecfcc9e064ec</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_qos_from_profile_w_topic_name</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a77c8efa4d4c36d614e7dd2917908bbf1</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos, const char *library_name, const char *profile_name, const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_topic_qos_from_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a2d6edc45e992b010d77190c03ffb4efe</anchor>
      <arglist>(DDS_TopicQos &amp;qos, const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_topic_qos_from_profile_w_topic_name</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a0515a614f52f8db204e773a0bd0570ec</anchor>
      <arglist>(DDS_TopicQos &amp;qos, const char *library_name, const char *profile_name, const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos_profile_libraries</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aa3a1c186f455c607ed88a168c6845c8b</anchor>
      <arglist>(struct DDS_StringSeq &amp;library_names)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos_profiles</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aab3596da3655971f5fb7ef50deaa2e18</anchor>
      <arglist>(struct DDS_StringSeq &amp;profile_names, const char *library_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>create_participant</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>af7c7137eccd41ffa9351d577fb088417</anchor>
      <arglist>(DDS_DomainId_t domainId, const DDS_DomainParticipantQos &amp;qos, DDSDomainParticipantListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>create_participant_with_profile</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aad7a4692724d1c877db6355a0b5644c7</anchor>
      <arglist>(DDS_DomainId_t domainId, const char *library_name, const char *profile_name, DDSDomainParticipantListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_participant</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>ae89241fd811cf98c3569d09467e0143a</anchor>
      <arglist>(DDSDomainParticipant *a_participant)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>lookup_participant</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a318366c484e9694f0c46dbd6efa49eef</anchor>
      <arglist>(DDS_DomainId_t domainId)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a3e2791363e7f8443ac98a7796c75dfc0</anchor>
      <arglist>(const DDS_DomainParticipantFactoryQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aa87fd11d0ed0e085a6437a343a76f110</anchor>
      <arglist>(DDS_DomainParticipantFactoryQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>load_profiles</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a6bdb9f81b98d26f3b50f03ecc0a94ce1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>reload_profiles</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>aee3dcac874af1744839c44826360d379</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unload_profiles</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a2501772f69d07d4b5196d83eac83787b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_thread</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a7f4849f9ac67430639cb22588f88708a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>create_participant_from_config</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>ab73f4fe10560f69a16cdf311a2b5c2fb</anchor>
      <arglist>(const char *configuration_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>create_participant_from_config_w_params</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a530f0f20820a46838a22affe0256e267</anchor>
      <arglist>(const char *configuration_name, const DDS_DomainParticipantConfigParams_t &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>lookup_participant_by_name</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a188f89649a36d117538d12c56d1f737e</anchor>
      <arglist>(const char *participant_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>register_type_support</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a9089940646624eb92f0440d07104aae3</anchor>
      <arglist>(DDSDomainParticipantFactory_RegisterTypeFunction register_type_fcn, const char *type_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_participants</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a03e0c775fb281846ae3b5a336ecf4660</anchor>
      <arglist>(DDSDomainParticipantSeq &amp;participants)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_thread_factory</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>abe49d0b60a00c5ba6eb2e9dab3d0a4f1</anchor>
      <arglist>(DDSThreadFactory *thread_factory)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSDomainParticipantFactory *</type>
      <name>get_instance</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>a58d2fd9c6190b7fbdbbbe4b035a15554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>finalize_instance</name>
      <anchorfile>classDDSDomainParticipantFactory.html</anchorfile>
      <anchor>abd28c0c81cd123c1363f5c8efd13a381</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDomainParticipantListener</name>
    <filename>classDDSDomainParticipantListener.html</filename>
    <base virtualness="virtual">DDSTopicListener</base>
    <base virtualness="virtual">DDSPublisherListener</base>
    <base virtualness="virtual">DDSSubscriberListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_inconsistent_topic</name>
      <anchorfile>classDDSTopicListener.html</anchorfile>
      <anchor>a8b67442b9d82dd89c99db1e449bf2c31</anchor>
      <arglist>(DDSTopic *topic, const DDS_InconsistentTopicStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a1c1723bb81c548264780d8b22c406849</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>ae60da4bf340932692394b89489e84893</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>aaa46c2b3a743f9ec8473ba99e1c71554</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>ab7b1ca573cb1be49aeda49846cc20b8d</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a5be4242a16ca4dfd27d0add4edf4d925</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>aa4d34ce27b8ff0d2614cddcfa7b7d2bf</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a971e52d216b2bcee066ac14de8bec972</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_application_acknowledgment</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a9eea859908c72901e17c7825f95e01b1</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_AcknowledgmentInfo &amp;info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_data_on_readers</name>
      <anchorfile>classDDSSubscriberListener.html</anchorfile>
      <anchor>ac53dd0188773aee8fb89ef3592dbdff1</anchor>
      <arglist>(DDSSubscriber *sub)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDynamicDataReader</name>
    <filename>classDDSDynamicDataReader.html</filename>
    <base>DDSDataReader</base>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDynamicDataTypeSupport</name>
    <filename>classDDSDynamicDataTypeSupport.html</filename>
    <base>DDSTypeSupport</base>
    <member kind="function">
      <type>DDS_Boolean</type>
      <name>is_valid</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>adaa8a7dcfd0463eba464835748bc712a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>register_type</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a37f71943046a01de7d0c8117f0c80625</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name)</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>unregister_type</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a9bb10f92691704bbddab1114a126ff55</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a9aca411f55baf3e744dd702fd0534d6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DDS_TypeCode *</type>
      <name>get_data_type</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>aae8f3ae9a82c66acd7195f4d9f0ad691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DDS_DynamicData *</type>
      <name>create_data</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a28cc963adb8e3aebcb852bd505520d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>delete_data</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a8adfc82caf1680ed3c0b17058a82541d</anchor>
      <arglist>(DDS_DynamicData *a_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_data</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a89d7a6249cb090a33d3cda9b9ec0d4ca</anchor>
      <arglist>(const DDS_DynamicData *a_data) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_ReturnCode_t</type>
      <name>copy_data</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>a9e68a74793bfe3b1d670394be9d84176</anchor>
      <arglist>(DDS_DynamicData *dest, const DDS_DynamicData *source) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDSDynamicDataTypeSupport</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>ad106a84c94d9e8b50d8dfb7b7b6e89c7</anchor>
      <arglist>(const DDS_TypeCode *type, const struct DDS_DynamicDataTypeProperty_t &amp;props)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DDSDynamicDataTypeSupport</name>
      <anchorfile>classDDSDynamicDataTypeSupport.html</anchorfile>
      <anchor>abada5ef2b87ce28b6562cbf47248cfce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSDynamicDataWriter</name>
    <filename>classDDSDynamicDataWriter.html</filename>
    <base>DDSDataWriter</base>
    <base>DDSDataWriter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSEntity</name>
    <filename>classDDSEntity.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a72a6282c6d45e23a9f5d5aa0a90ddbed</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a5f66ca58a9e7493d02c49cd555d297e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>afee81334bd94a0bbe327c98d0a90310d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSEntity.html</anchorfile>
      <anchor>a05b50d86b5b05f8a0f4824217e015d6e</anchor>
      <arglist>()=0</arglist>
    </member>
    <docanchor file="classDDSEntity">Entity_abstract</docanchor>
    <docanchor file="classDDSEntity">Entity_set_qos</docanchor>
    <docanchor file="classDDSEntity">Entity_get_qos</docanchor>
    <docanchor file="classDDSEntity">Entity_set_listener</docanchor>
  </compound>
  <compound kind="class">
    <name>DDSFlowController</name>
    <filename>classDDSFlowController.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_property</name>
      <anchorfile>classDDSFlowController.html</anchorfile>
      <anchor>ac9b8d6e278211b59cb6a72a04a774866</anchor>
      <arglist>(const struct DDS_FlowControllerProperty_t &amp;prop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_property</name>
      <anchorfile>classDDSFlowController.html</anchorfile>
      <anchor>a0f77f6c02c34736c6959157d6fe097cb</anchor>
      <arglist>(struct DDS_FlowControllerProperty_t &amp;prop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>trigger_flow</name>
      <anchorfile>classDDSFlowController.html</anchorfile>
      <anchor>a88a1c99b465f67756855de3a07924b4e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_name</name>
      <anchorfile>classDDSFlowController.html</anchorfile>
      <anchor>aec49e8cae842284a4513aaff343c47a3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSFlowController.html</anchorfile>
      <anchor>a1f7e35cd0685e8c0fe6298e258143f0f</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSGuardCondition</name>
    <filename>classDDSGuardCondition.html</filename>
    <base>DDSCondition</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_Boolean</type>
      <name>get_trigger_value</name>
      <anchorfile>classDDSGuardCondition.html</anchorfile>
      <anchor>a724bae3e87934f50424a29e4c1bd92a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_trigger_value</name>
      <anchorfile>classDDSGuardCondition.html</anchorfile>
      <anchor>a06fddb6f12bfe9bdbce969e30f5df850</anchor>
      <arglist>(DDS_Boolean value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDSGuardCondition</name>
      <anchorfile>classDDSGuardCondition.html</anchorfile>
      <anchor>a970964517c6fedfdb3d077f19c040d2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DDSGuardCondition</name>
      <anchorfile>classDDSGuardCondition.html</anchorfile>
      <anchor>abaf5b71891161c95de1d8c0e4dee6f80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSKeyedOctetsDataReader</name>
    <filename>classDDSKeyedOctetsDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>ae6ec81f7cc581b42ad9de461c3ed50fc</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>adeb4db9fa0446c77a14f110a89bf3bf9</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_w_condition</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a3be04cf517ca17a8cb2dcccadcf44312</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_w_condition</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>ad87ed3c3a6e624b225a5904f322d89ca</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_sample</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>ad6923c817aa201455d7b972d2316a262</anchor>
      <arglist>(DDS_KeyedOctets &amp;received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_sample</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a1ccf254e956c9b536f7f2815c040efb7</anchor>
      <arglist>(DDS_KeyedOctets &amp;received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_instance</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a0fefd6d433e8f7058d7482ff60e722e3</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_instance</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a06d790b6045a2bc54c7caaea1517bdf2</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_instance_w_condition</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a63e25db2800c6f3a8504397299b308fe</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_instance_w_condition</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>aebcc0561aa49399e5db0053fd323b6fa</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_instance</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a82b59f2b3a7250a989577813d07163de</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_instance</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a295e84e943b3815693bdb9bbf8c23ba2</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_instance_w_condition</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>aaf073f09c02ca6c6d5f1870d90037cec</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_instance_w_condition</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>aa086126f850a6b3639139ba2649ae7a6</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>return_loan</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>ab23da53053a61f09895bae69790431d5</anchor>
      <arglist>(DDS_KeyedOctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a959c714e730e23422f697c200ef2ffe3</anchor>
      <arglist>(DDS_KeyedOctets &amp;key_holder, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>ae21b671fef01578a8777d7750396e9fa</anchor>
      <arglist>(char *key, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a57419cb92bfd78de14eba97066e26414</anchor>
      <arglist>(const DDS_KeyedOctets &amp;key_holder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a01d39d54fc5122db44995aedf58052bc</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSKeyedOctetsDataReader *</type>
      <name>narrow</name>
      <anchorfile>classDDSKeyedOctetsDataReader.html</anchorfile>
      <anchor>a0b833ac6401b0563506cab3905212075</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSKeyedOctetsDataWriter</name>
    <filename>classDDSKeyedOctetsDataWriter.html</filename>
    <base>DDSDataWriter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a67cdbb68f363d2f4b04d75ee64bddc0b</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a256a529ef16a28e191f615227cddde98</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a80e6952195a4967f27ff2da4be5ea976</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>acae7f94622cecb27e1e629fa5273f88c</anchor>
      <arglist>(const char *key, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a01cb5a0fb3307db077f3dfd2d53fe991</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a1b9fd3725fbf2e34dd8e787169dcc083</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a805d56922ce3f9bc1358ea3e0f70e1b2</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>aba051ccfe6c1efb766066b02c3e75f6e</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a1e27ef43511c1248ad023035437ae45b</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a76c31418168409b64c436a0cda915a20</anchor>
      <arglist>(const char *key, const unsigned char *octets, int length, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a5980615e15c4e868009706051cf82be2</anchor>
      <arglist>(const char *key, const DDS_OctetSeq &amp;octets, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a6179641b682fe26f3608fafff581f669</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>ac4456326aaa4ab5de6baccc981058374</anchor>
      <arglist>(const char *key, const unsigned char *octets, int length, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a0fdead692b9c83ae637d0fa6cb525b40</anchor>
      <arglist>(const char *key, const DDS_OctetSeq &amp;octets, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a87310ec6bd0f293c927d38040d79bd7c</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>ad5250ebe16852659fa00f9a11257eca2</anchor>
      <arglist>(const char *key, const unsigned char *octets, int length, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a21a3f6757917beef217bbba8aac8ec73</anchor>
      <arglist>(const char *key, const DDS_OctetSeq &amp;octets, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a65675bc7c2b4d87fe85f62c7a6ab407b</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a8f4246d0a95a0b6351041f4aee000906</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;instance_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a7284b7b98ff95ba05cd0f3b9a63f1949</anchor>
      <arglist>(const DDS_KeyedOctets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose_w_timestamp</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a4a0e8945ebc19ea011200eb6b9b6185c</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;instance_handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>af89d2215b7c12187204da5dd129211bc</anchor>
      <arglist>(DDS_KeyedOctets &amp;key_holder, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>aebad70889f2be7b5ff809f057e078ee3</anchor>
      <arglist>(char *key, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>a09208f5394094c724703f02e7bffe0ad</anchor>
      <arglist>(const DDS_KeyedOctets &amp;key_holder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>aeecd95920c0fe9a004de35bdd1c82cd7</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSKeyedOctetsDataWriter *</type>
      <name>narrow</name>
      <anchorfile>classDDSKeyedOctetsDataWriter.html</anchorfile>
      <anchor>ac6630793696d3d8322c136b1a9582760</anchor>
      <arglist>(DDSDataWriter *writer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSKeyedOctetsTypeSupport</name>
    <filename>classDDSKeyedOctetsTypeSupport.html</filename>
    <base>DDSTypeSupport</base>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>register_type</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>a00a52a937f80bc321123561c06a85ddf</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::KeyedOctets&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>unregister_type</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>a457893cf7057ca8eb2f460fc43777739</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::KeyedOctets&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>afae0aea64320e2bb9ece6356ee375163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>print_data</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>a1842f3f37edc5afcb768aec688653f3c</anchor>
      <arglist>(const DDS_KeyedOctets *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_TypeCode *</type>
      <name>get_typecode</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>ae261ad482a823199cd4537278dbad7b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>serialize_data_to_cdr_buffer</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>a28f29f0620be29d5027e4237520772f6</anchor>
      <arglist>(char *buffer, unsigned int &amp;length, const DDS_KeyedOctets *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>deserialize_data_from_cdr_buffer</name>
      <anchorfile>classDDSKeyedOctetsTypeSupport.html</anchorfile>
      <anchor>a707b325a4c65f0002ebc5e5c7fca5153</anchor>
      <arglist>(DDS_KeyedOctets *a_data, const char *buffer, unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSKeyedStringDataReader</name>
    <filename>classDDSKeyedStringDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a76721b7bc97b8c9f529446b982615178</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>ae092fab6cf234964344cbb5c4afc3213</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_w_condition</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a68fdefbd88e69595f6ec470ca73398c7</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_w_condition</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a1f9062b468fc675e0fc884952cffbdd8</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_sample</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>aa4bf576df3d0b6782b2cf859e9ba476e</anchor>
      <arglist>(DDS_KeyedString &amp;received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_sample</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>acc098744227041e84879178dfb98fddd</anchor>
      <arglist>(DDS_KeyedString &amp;received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_instance</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a72d779f056697fdde7f05dc5925a9608</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_instance</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a9d6dbf1d52a359854c77ea1c987fdccf</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_instance_w_condition</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a632778bef5702359f72d9a933bffabe3</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_instance_w_condition</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>ab7a57e43ee1cba1e02d20a943aac9cb0</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;a_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_instance</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>ae64764c677cd69c9dad4bb4647b5c7cf</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_instance</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>af0e058075a80ce0af3d23eac429cd128</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_instance_w_condition</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a2d613fad836158b085e4735aa25571a4</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_instance_w_condition</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a2b7f8be68e181b9887156d81c1704302</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, const DDS_InstanceHandle_t &amp;previous_handle=DDS_HANDLE_NIL, DDSReadCondition *condition=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>return_loan</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a1b48ca2319adc5953224ffa84db7fcff</anchor>
      <arglist>(DDS_KeyedStringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a1977121e73c27ade9682818602a1c74a</anchor>
      <arglist>(DDS_KeyedString &amp;key_holder, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>ad5928f5352371ce5b35a7331f75f21f9</anchor>
      <arglist>(char *key, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a0b781c80a561297371c374072a34a20a</anchor>
      <arglist>(const DDS_KeyedString &amp;key_holder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>a62819accc45ee55762397d9099be55a7</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSKeyedStringDataReader *</type>
      <name>narrow</name>
      <anchorfile>classDDSKeyedStringDataReader.html</anchorfile>
      <anchor>afc0fa5053cdf5228efd3518b2f1fa728</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSKeyedStringDataWriter</name>
    <filename>classDDSKeyedStringDataWriter.html</filename>
    <base>DDSDataWriter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a82b14c183db0a327fb27b42d13e4e558</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a05706922fa85e2d1f4d0098d35805634</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>abaa47f1ad790883000d1d7b72fa7b442</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>ae0b4e93769311944aeb48c6e6de2735a</anchor>
      <arglist>(const char *key, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a99f8a8ffb32695e50782bf61f092d2b1</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>ab875f8c7b6f17a98a7382ef6beb32f89</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a57ec906e8f39b53ee7bae241ebab4177</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a1dfc46044b9682107eb35c8cf3122bb0</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a2dec2f9acc2d0b0d19beb682b24a201c</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>accab7fea1e4d66927848302a043f5e80</anchor>
      <arglist>(const char *key, const char *str, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a8220614efabe10c6dc7941496495e626</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a2e35107e7589e59fa717dd7cf432df49</anchor>
      <arglist>(const char *key, const char *str, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a53b230a9b54e902a8db6ab47daef71b5</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a4a9206ca997c6e9da1e4771ef31fce5c</anchor>
      <arglist>(const char *key, const char *str, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a96be00faa66f4c3779b63fd5443f0ae6</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a2ec1467a35cf2c2b770b172187be92fb</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;instance_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>aefabf22ee9ae627bde335a5bd6ddae00</anchor>
      <arglist>(const DDS_KeyedString &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose_w_timestamp</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a6ce90e11035daab508478096a301b2d6</anchor>
      <arglist>(const char *key, const DDS_InstanceHandle_t &amp;instance_handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a67db389fc9fa89476fe9905e905d23b6</anchor>
      <arglist>(DDS_KeyedString &amp;key_holder, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>aa8307b2d3c8058e72ab156bec79fd8b6</anchor>
      <arglist>(char *key, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>ae75c9df82c22bab5f69b8b06732b8b53</anchor>
      <arglist>(const DDS_KeyedString &amp;key_holder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>a0c6271b3ec6fae9ba622781eaf4e9045</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSKeyedStringDataWriter *</type>
      <name>narrow</name>
      <anchorfile>classDDSKeyedStringDataWriter.html</anchorfile>
      <anchor>ac0304e0a26ce0c9feccd44161499da86</anchor>
      <arglist>(DDSDataWriter *writer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSKeyedStringTypeSupport</name>
    <filename>classDDSKeyedStringTypeSupport.html</filename>
    <base>DDSTypeSupport</base>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>register_type</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>a7ef367c3be80bfeef99859ac99ea2bd9</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::KeyedString&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>unregister_type</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>ae43601e55eded48258b184d42a6b6093</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::KeyedString&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>a63869506062379634b6f85c241669d18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>print_data</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>a407b999bf989725263d3ba52659b89dc</anchor>
      <arglist>(const DDS_KeyedString *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_TypeCode *</type>
      <name>get_typecode</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>a94c8bae7ca4b398b14c110d13f17b0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>serialize_data_to_cdr_buffer</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>a0e4c40d81e4529c234cfd634b28cbe3d</anchor>
      <arglist>(char *buffer, unsigned int &amp;length, const DDS_KeyedString *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>deserialize_data_from_cdr_buffer</name>
      <anchorfile>classDDSKeyedStringTypeSupport.html</anchorfile>
      <anchor>a950f2000bf9298f2021339f83e67ebca</anchor>
      <arglist>(DDS_KeyedString *a_data, const char *buffer, unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSListener</name>
    <filename>classDDSListener.html</filename>
    <docanchor file="classDDSListener">Listener_plain</docanchor>
    <docanchor file="classDDSListener">Listener_read</docanchor>
    <docanchor file="classDDSListener">SharedEACallbackRules</docanchor>
  </compound>
  <compound kind="class">
    <name>DDSMultiTopic</name>
    <filename>classDDSMultiTopic.html</filename>
    <base>DDSTopicDescription</base>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_subscription_expression</name>
      <anchorfile>classDDSMultiTopic.html</anchorfile>
      <anchor>a0cc1f1c7a92e18bf99d7b57a7ad4e928</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_expression_parameters</name>
      <anchorfile>classDDSMultiTopic.html</anchorfile>
      <anchor>a92c789c973a3e93b0dbcc932b4c8a8f0</anchor>
      <arglist>(DDS_StringSeq &amp;parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_expression_parameters</name>
      <anchorfile>classDDSMultiTopic.html</anchorfile>
      <anchor>ab653f10c71a784e1bcf05d72c235dc73</anchor>
      <arglist>(const DDS_StringSeq &amp;parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a90b53a1c114b40e674e51b5ae9221881</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a1aaa018434f6a8dab450ac8c89f6bf65</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>ae2bf787bb77f8764976c97c4364e53e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSMultiTopic *</type>
      <name>narrow</name>
      <anchorfile>classDDSMultiTopic.html</anchorfile>
      <anchor>a1085b46858bfc8ca2906dbd73f460574</anchor>
      <arglist>(DDSTopicDescription *topic_description)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSOctetsDataReader</name>
    <filename>classDDSOctetsDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>a545cfa1bc6dbdaad7df58b48615a5bda</anchor>
      <arglist>(DDS_OctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>a190aa40787a7751d9dc062810b8abac4</anchor>
      <arglist>(DDS_OctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_w_condition</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>afc187a81514068be08dff76fc7929ac3</anchor>
      <arglist>(DDS_OctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_w_condition</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>a78960999ca69443e3be3ca9b4b50554d</anchor>
      <arglist>(DDS_OctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_sample</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>ac0a60bcf2afca7b001f7dabd6107ff39</anchor>
      <arglist>(DDS_Octets &amp;received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_sample</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>aeb3a5e895571d9e302d3f71ceff94c31</anchor>
      <arglist>(DDS_Octets &amp;received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>return_loan</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>a5d40bc2ead738cd17bedc8d1d83c1370</anchor>
      <arglist>(DDS_OctetsSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSOctetsDataReader *</type>
      <name>narrow</name>
      <anchorfile>classDDSOctetsDataReader.html</anchorfile>
      <anchor>ae4e8a7f96a1340050edc784808ed7207</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSOctetsDataWriter</name>
    <filename>classDDSOctetsDataWriter.html</filename>
    <base>DDSDataWriter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a714f7d93754ef229bbf4f49c5d84e89c</anchor>
      <arglist>(const DDS_Octets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a30fc84db417c41fc8722594bd9a17532</anchor>
      <arglist>(const unsigned char *octets, int length, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a054a46bbd2ff4697d7773aceee8d49cb</anchor>
      <arglist>(const DDS_OctetSeq &amp;octets, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a413c8d933943c37b27c7c4a626b42d00</anchor>
      <arglist>(const DDS_Octets &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>af593033275dba1c47f436c59f8251e8c</anchor>
      <arglist>(const unsigned char *octets, int length, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>ab71015a4aae0fcab63db2ed9fb0ead01</anchor>
      <arglist>(const DDS_OctetSeq &amp;octets, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a72aca2906849d740a2bb436773339f08</anchor>
      <arglist>(const DDS_Octets &amp;instance_data, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a0962ba168eb3932acd5cf27873e3fa5c</anchor>
      <arglist>(const unsigned char *octets, int length, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a7f04073731168bb382cdb05715b40053</anchor>
      <arglist>(const DDS_OctetSeq &amp;octets, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSOctetsDataWriter *</type>
      <name>narrow</name>
      <anchorfile>classDDSOctetsDataWriter.html</anchorfile>
      <anchor>a0b65070d09025a3fde7278a626b27fab</anchor>
      <arglist>(DDSDataWriter *writer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSOctetsTypeSupport</name>
    <filename>classDDSOctetsTypeSupport.html</filename>
    <base>DDSTypeSupport</base>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>register_type</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>ae38eb87d79f253fd9887c5c577eb623a</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::Octets&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>unregister_type</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>a3c9bf8fad1e27f1778203ca58290d289</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::Octets&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>a4ede8f1e13174a541ba753e4bb641bc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>print_data</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>aaf4bcb7db31e3d5213a5c7ea784c9584</anchor>
      <arglist>(const DDS_Octets *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_TypeCode *</type>
      <name>get_typecode</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>ab7f8fb8a62904f78b4ef6ccc30444f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>serialize_data_to_cdr_buffer</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>a545b87070b44aa832174733fc2357343</anchor>
      <arglist>(char *buffer, unsigned int &amp;length, const DDS_Octets *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>deserialize_data_from_cdr_buffer</name>
      <anchorfile>classDDSOctetsTypeSupport.html</anchorfile>
      <anchor>af323b0df68852b0b9a7be38b1db355e2</anchor>
      <arglist>(DDS_Octets *a_data, const char *buffer, unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSParticipantBuiltinTopicDataDataReader</name>
    <filename>classDDSParticipantBuiltinTopicDataDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSParticipantBuiltinTopicDataTypeSupport</name>
    <filename>classDDSParticipantBuiltinTopicDataTypeSupport.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSPropertyQosPolicyHelper</name>
    <filename>classDDSPropertyQosPolicyHelper.html</filename>
    <member kind="function" static="yes">
      <type>static DDS_Long</type>
      <name>get_number_of_properties</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga3be8800428109b6ca1aac5ff41b1e1d5</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>assert_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga82c89cbede7fcc9fd5cfd523c26f4ef1</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const char *value, DDS_Boolean propagate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>add_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>gaaa0a6e88624631d9558ab3a0153fa287</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const char *value, DDS_Boolean propagate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>assert_pointer_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga9765e9ca3de7b8d9c11513aa7f2e5af1</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const void *pointer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>add_pointer_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga2ce1555f7c51496156b4441ebbf5dd2d</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name, const void *pointer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static struct DDS_Property_t *</type>
      <name>lookup_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga2e48c8cd73cc00cd13dd26173054deae</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>remove_property</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga9acb767b17df7b2ccaa506c9b3a32a65</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>get_properties</name>
      <anchorfile>group__DDSPropertyQosModule.html</anchorfile>
      <anchor>ga1666b0317e288a81339cb99f8dbf6b13</anchor>
      <arglist>(DDS_PropertyQosPolicy &amp;policy, struct DDS_PropertySeq &amp;properties, const char *name_prefix)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSPublicationBuiltinTopicDataDataReader</name>
    <filename>classDDSPublicationBuiltinTopicDataDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSPublicationBuiltinTopicDataTypeSupport</name>
    <filename>classDDSPublicationBuiltinTopicDataTypeSupport.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSPublisher</name>
    <filename>classDDSPublisher.html</filename>
    <base>DDSDomainEntity</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_datawriter_qos</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a70d9b16d3e2790dd39618474a561dfb7</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datawriter_qos</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a8cc568d900274ab8547f77cd3d46ebb8</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datawriter_qos_with_profile</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a86189eeb52ee0dc18a76d140206e4b78</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_library</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a5f050c96ebbfb6ef75e81d35831fd0a8</anchor>
      <arglist>(const char *library_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_library</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a3234ba71c127316545642ddccf7ef25e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_profile</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a4e318992fee648af318ce1966026b93b</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a39da96b4acb000faa909f1c94bd44e4a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile_library</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a82a3ec527876d47b4ae40e53c73e7a4d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>create_datawriter</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>ab74a880831deac3df78f8c0f735d3052</anchor>
      <arglist>(DDSTopic *topic, const DDS_DataWriterQos &amp;qos, DDSDataWriterListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>create_datawriter_with_profile</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>ab7898867e7255a6958eedde428507895</anchor>
      <arglist>(DDSTopic *topic, const char *library_name, const char *profile_name, DDSDataWriterListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_datawriter</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>af28a8d9e3661d8c4abb88fb580d79747</anchor>
      <arglist>(DDSDataWriter *a_datawriter)=0</arglist>
      <docanchor file="classDDSPublisher">PublisherDeleteDataWriter_warning</docanchor>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>lookup_datawriter</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a568fbd64c5afc0e863689a8d4772f4b0</anchor>
      <arglist>(const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_all_datawriters</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>aacddf1a11f1d45a476b9b52473f02e0f</anchor>
      <arglist>(DDSDataWriterSeq &amp;writers)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>suspend_publications</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>ab17d8e2c34bc711013a056bab9c0e7b0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>resume_publications</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>aeafb334b559b8e43ca09abaa8e3a4549</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>begin_coherent_changes</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>ad835641a60770fa1037e319fba3a1496</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>end_coherent_changes</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a89904b6a5ad4394495b795f8f25532d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>aaec611d9bf30e40a3d53347d080ee9f9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>ace892918ed8357649dc927583f8939ef</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>copy_from_topic_qos</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>ae14524d4f1783911cd0866557ae019a2</anchor>
      <arglist>(DDS_DataWriterQos &amp;a_datawriter_qos, const DDS_TopicQos &amp;a_topic_qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a1991d2239dc4fc958ab0521770fd1541</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a9e3221df2509a92cb2f32718a09a71be</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a10b103b79ad1f6463291a8b8189572fb</anchor>
      <arglist>(const DDS_PublisherQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a95eab8e826d3396c97190e354b1780aa</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>af88aa677f382d12519bac53cfd6756bd</anchor>
      <arglist>(DDS_PublisherQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a3f73a61b7f99e2ca6922c1a538cc1c4a</anchor>
      <arglist>(DDSPublisherListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSPublisherListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a7616e6fed94a541c5ac745fbe1649677</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataWriter *</type>
      <name>lookup_datawriter_by_name</name>
      <anchorfile>classDDSPublisher.html</anchorfile>
      <anchor>a9098db60e7adf548c357fcd77e4e485d</anchor>
      <arglist>(const char *datawriter_name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSPublisherListener</name>
    <filename>classDDSPublisherListener.html</filename>
    <base virtualness="virtual">DDSDataWriterListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_deadline_missed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a1c1723bb81c548264780d8b22c406849</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_lost</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>ae60da4bf340932692394b89489e84893</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offered_incompatible_qos</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>aaa46c2b3a743f9ec8473ba99e1c71554</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_publication_matched</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>ab7b1ca573cb1be49aeda49846cc20b8d</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_writer_cache_changed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a5be4242a16ca4dfd27d0add4edf4d925</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_reliable_reader_activity_changed</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>aa4d34ce27b8ff0d2614cddcfa7b7d2bf</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_instance_replaced</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a971e52d216b2bcee066ac14de8bec972</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_application_acknowledgment</name>
      <anchorfile>classDDSDataWriterListener.html</anchorfile>
      <anchor>a9eea859908c72901e17c7825f95e01b1</anchor>
      <arglist>(DDSDataWriter *writer, const DDS_AcknowledgmentInfo &amp;info)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSPublisherSeq</name>
    <filename>classDDSPublisherSeq.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSQueryCondition</name>
    <filename>classDDSQueryCondition.html</filename>
    <base>DDSReadCondition</base>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_query_expression</name>
      <anchorfile>classDDSQueryCondition.html</anchorfile>
      <anchor>a6098c494bbadad1beb7085ce74f53037</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_query_parameters</name>
      <anchorfile>classDDSQueryCondition.html</anchorfile>
      <anchor>a8143a2dcc0502afce4519da9813673e3</anchor>
      <arglist>(DDS_StringSeq &amp;query_parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_query_parameters</name>
      <anchorfile>classDDSQueryCondition.html</anchorfile>
      <anchor>ab95622aaeade115ed29de26960987c7e</anchor>
      <arglist>(const DDS_StringSeq &amp;query_parameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_SampleStateMask</type>
      <name>get_sample_state_mask</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>ab7d54ada278ee781f2ae2f27ccf61537</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ViewStateMask</type>
      <name>get_view_state_mask</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>aec106b11e2136cf9da7704d5b385f1e0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceStateMask</type>
      <name>get_instance_state_mask</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>aa6f72661de99f64dc90797bddf26d8cb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>get_datareader</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>a1151377477746f27e5fcd0291211caeb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>get_trigger_value</name>
      <anchorfile>classDDSCondition.html</anchorfile>
      <anchor>a2a9ddc4cd969dca7f9fffd50a1df0af8</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSReadCondition</name>
    <filename>classDDSReadCondition.html</filename>
    <base>DDSCondition</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_SampleStateMask</type>
      <name>get_sample_state_mask</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>ab7d54ada278ee781f2ae2f27ccf61537</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ViewStateMask</type>
      <name>get_view_state_mask</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>aec106b11e2136cf9da7704d5b385f1e0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceStateMask</type>
      <name>get_instance_state_mask</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>aa6f72661de99f64dc90797bddf26d8cb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>get_datareader</name>
      <anchorfile>classDDSReadCondition.html</anchorfile>
      <anchor>a1151377477746f27e5fcd0291211caeb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>get_trigger_value</name>
      <anchorfile>classDDSCondition.html</anchorfile>
      <anchor>a2a9ddc4cd969dca7f9fffd50a1df0af8</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSStatusCondition</name>
    <filename>classDDSStatusCondition.html</filename>
    <base>DDSCondition</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_StatusMask</type>
      <name>get_enabled_statuses</name>
      <anchorfile>classDDSStatusCondition.html</anchorfile>
      <anchor>ae222dd050d3883010e3d115964fb081b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_enabled_statuses</name>
      <anchorfile>classDDSStatusCondition.html</anchorfile>
      <anchor>a4e20693c032c35490a7a7e459f8d025b</anchor>
      <arglist>(DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSEntity *</type>
      <name>get_entity</name>
      <anchorfile>classDDSStatusCondition.html</anchorfile>
      <anchor>a01b0f61cc5ac2bfdc6c4a893ad63fd4b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>get_trigger_value</name>
      <anchorfile>classDDSCondition.html</anchorfile>
      <anchor>a2a9ddc4cd969dca7f9fffd50a1df0af8</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSStringDataReader</name>
    <filename>classDDSStringDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>a956edda9136d17164a82a6faed1c882c</anchor>
      <arglist>(DDS_StringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>aceeb16be7a2dd942c05f84260fa31050</anchor>
      <arglist>(DDS_StringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples=DDS_LENGTH_UNLIMITED, DDS_SampleStateMask sample_states=DDS_ANY_SAMPLE_STATE, DDS_ViewStateMask view_states=DDS_ANY_VIEW_STATE, DDS_InstanceStateMask instance_states=DDS_ANY_INSTANCE_STATE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_w_condition</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>aee0b60b29c07e9c6a5004ea7c63059c4</anchor>
      <arglist>(DDS_StringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_w_condition</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>aa204ecfbea16e060f7e945bfce4a12e0</anchor>
      <arglist>(DDS_StringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_sample</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>a7696430e7f58132c066b3509f30765c7</anchor>
      <arglist>(char *received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_sample</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>a3a8959c8ecde637c9fd3dc7c09e64e98</anchor>
      <arglist>(char *received_data, DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>return_loan</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>ade6721c59f027c7faec7f786cfa33805</anchor>
      <arglist>(DDS_StringSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSStringDataReader *</type>
      <name>narrow</name>
      <anchorfile>classDDSStringDataReader.html</anchorfile>
      <anchor>adb78681961c8335c59c02061ed97aded</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSStringDataWriter</name>
    <filename>classDDSStringDataWriter.html</filename>
    <base>DDSDataWriter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>classDDSStringDataWriter.html</anchorfile>
      <anchor>a9a80fb86450f510aa5687ea29efcda79</anchor>
      <arglist>(const char *instance_data, const DDS_InstanceHandle_t &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>classDDSStringDataWriter.html</anchorfile>
      <anchor>a29db6691d7d1409b39a6398199bf6844</anchor>
      <arglist>(const char *instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>classDDSStringDataWriter.html</anchorfile>
      <anchor>ae788e80a48d609f2488ab2a0962221fa</anchor>
      <arglist>(const char *instance_data, DDS_WriteParams_t &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSStringDataWriter *</type>
      <name>narrow</name>
      <anchorfile>classDDSStringDataWriter.html</anchorfile>
      <anchor>a551e720931be756b596d8bad50a84e8d</anchor>
      <arglist>(DDSDataWriter *writer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSStringTypeSupport</name>
    <filename>classDDSStringTypeSupport.html</filename>
    <base>DDSTypeSupport</base>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>register_type</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>af70f729740462b956843b0e6772b0286</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::String&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>unregister_type</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>a609f3c187f546e0194a4a1f82459e8eb</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name=&quot;DDS::String&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>a15e46d60ba1a74d1384e2d836e668926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>print_data</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>a146e5cb15345b65bac17ebdd4dfb687d</anchor>
      <arglist>(const char *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_TypeCode *</type>
      <name>get_typecode</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>aaf8d6e8d3b016608f75f189fee87c933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>serialize_data_to_cdr_buffer</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>a6fee3ca88983d10a9c23f75769472321</anchor>
      <arglist>(char *buffer, unsigned int &amp;length, const char *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>deserialize_data_from_cdr_buffer</name>
      <anchorfile>classDDSStringTypeSupport.html</anchorfile>
      <anchor>a89842a1d82315265fb7b826c336dd6e8</anchor>
      <arglist>(char **a_data, const char *buffer, unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSSubscriber</name>
    <filename>classDDSSubscriber.html</filename>
    <base>DDSDomainEntity</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_default_datareader_qos</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a04d43ea1ba0f27b6868be97980cd0f34</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datareader_qos</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a64c411c5b8c29594c0e4fa3f7e592c95</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_datareader_qos_with_profile</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>aedea697079599758671916a7669299b0</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_library</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>aced2eb1e0f8df06ae03c92b5aa8252de</anchor>
      <arglist>(const char *library_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_library</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>ad958617207a232441991be932a04208f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_default_profile</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a05bf08a6828c9eee5dcc109e52659bbf</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a0a2b84aa254424488c2497cfa01ec3f4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_default_profile_library</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a00f9a3d1a5a906a03ac0ec6a0247d6d1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>create_datareader</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>ab31ddab06242f40d17c0aa256d18844d</anchor>
      <arglist>(DDSTopicDescription *topic, const DDS_DataReaderQos &amp;qos, DDSDataReaderListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>create_datareader_with_profile</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a8b41b0d4a8bad492d1a2253587de8eac</anchor>
      <arglist>(DDSTopicDescription *topic, const char *library_name, const char *profile_name, DDSDataReaderListener *listener, DDS_StatusMask mask)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_datareader</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a5dbe420933d7ab3b9d6bf1d2abd6c904</anchor>
      <arglist>(DDSDataReader *a_datareader)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a84a62949544b56d16be800aabb795e6b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>lookup_datareader</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a2f002987b1860a6803311821510363fe</anchor>
      <arglist>(const char *topic_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>begin_access</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>abc8b33850dd73bd7f2aad6bf33b30d18</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>end_access</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>aed0ef987907931023b9cdc92a07b472c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareaders</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>ab06d2117f91f0af6df923d71a8d4b261</anchor>
      <arglist>(DDSDataReaderSeq &amp;readers, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_all_datareaders</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a88a264a1613c851b4c1ea76ca5592db2</anchor>
      <arglist>(DDSDataReaderSeq &amp;readers)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>notify_datareaders</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a8118ee7fc8abe7fe981925f594d5d225</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a6c5378a2496735ee18a43b3bca4d43c0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>copy_from_topic_qos</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a5325be4fb2172556749b642603bfbf54</anchor>
      <arglist>(DDS_DataReaderQos &amp;datareader_qos, const DDS_TopicQos &amp;topic_qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a96e16e85eafba3460ff09984123045ee</anchor>
      <arglist>(const DDS_SubscriberQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a2b65993f8342c2fbf56e3b1214df6401</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>adf31ff9f56ee66ece9c11e853c7acf52</anchor>
      <arglist>(DDS_SubscriberQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a85377865d0bcffce90347b180658a4e9</anchor>
      <arglist>(DDSSubscriberListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSSubscriberListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a99793fe2f65544c1f15c2bd755b3d35b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDataReader *</type>
      <name>lookup_datareader_by_name</name>
      <anchorfile>classDDSSubscriber.html</anchorfile>
      <anchor>a60732c7b931a338f6b187a2dbfc8fd02</anchor>
      <arglist>(const char *datareader_name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSSubscriberListener</name>
    <filename>classDDSSubscriberListener.html</filename>
    <base virtualness="virtual">DDSDataReaderListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_data_on_readers</name>
      <anchorfile>classDDSSubscriberListener.html</anchorfile>
      <anchor>ac53dd0188773aee8fb89ef3592dbdff1</anchor>
      <arglist>(DDSSubscriber *sub)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_requested_deadline_missed</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a9af69ce52e0af0b3683725539c1d0856</anchor>
      <arglist>(DDSDataReader *reader, const DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_liveliness_changed</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a1345f9c3b35805f3d2f6566009ed8ab3</anchor>
      <arglist>(DDSDataReader *reader, const DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_requested_incompatible_qos</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a40633c2ba81a49466ba4cc1bbc22e521</anchor>
      <arglist>(DDSDataReader *reader, const DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sample_rejected</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a993e451eb838555c1f351de97fc4a7c8</anchor>
      <arglist>(DDSDataReader *reader, const DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_data_available</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a2bf93bed2f7bdb7b654489010386cd8f</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sample_lost</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>ad40c2dbb69d8ca9640cd20660eb26a8a</anchor>
      <arglist>(DDSDataReader *reader, const DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_subscription_matched</name>
      <anchorfile>classDDSDataReaderListener.html</anchorfile>
      <anchor>a6f83d0704634023dd8e1a66f83f3e022</anchor>
      <arglist>(DDSDataReader *reader, const DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSSubscriberSeq</name>
    <filename>classDDSSubscriberSeq.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSSubscriptionBuiltinTopicDataDataReader</name>
    <filename>classDDSSubscriptionBuiltinTopicDataDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSSubscriptionBuiltinTopicDataTypeSupport</name>
    <filename>classDDSSubscriptionBuiltinTopicDataTypeSupport.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSThreadFactory</name>
    <filename>classDDSThreadFactory.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>create_thread</name>
      <anchorfile>classDDSThreadFactory.html</anchorfile>
      <anchor>a6f6ea78bd698c9d66e0f4665e6d441fa</anchor>
      <arglist>(const char *thread_name, const struct DDS_ThreadSettings_t &amp;settings, DDSThreadFactory_OnSpawnedFunction on_spawned, void *thread_param)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>delete_thread</name>
      <anchorfile>classDDSThreadFactory.html</anchorfile>
      <anchor>af08b3b89f981b3d052e155e5f922d443</anchor>
      <arglist>(void *thread)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSTopic</name>
    <filename>classDDSTopic.html</filename>
    <base>DDSDomainEntity</base>
    <base>DDSTopicDescription</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_inconsistent_topic_status</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>ae69dcb44f7088f46475fe6c720ce841b</anchor>
      <arglist>(DDS_InconsistentTopicStatus &amp;status)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>af3a24b93543f7a2f351e28c60b663cd7</anchor>
      <arglist>(const DDS_TopicQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>a352b327bdc5197b3753b1ccd44956e16</anchor>
      <arglist>(const char *library_name, const char *profile_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>ac5e4aa18fb18ec7725e189b3f3e48c8e</anchor>
      <arglist>(DDS_TopicQos &amp;qos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>a3eba701369ad074801cf4ce3b938024f</anchor>
      <arglist>(DDSTopicListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSTopicListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>a0a515b347b24582830cbf3f891b29d16</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a90b53a1c114b40e674e51b5ae9221881</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a1aaa018434f6a8dab450ac8c89f6bf65</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>ae2bf787bb77f8764976c97c4364e53e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDSTopic *</type>
      <name>narrow</name>
      <anchorfile>classDDSTopic.html</anchorfile>
      <anchor>a02f0663ae86869054a8cce2a8d4e136a</anchor>
      <arglist>(DDSTopicDescription *topic_description)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSTopicBuiltinTopicDataDataReader</name>
    <filename>classDDSTopicBuiltinTopicDataDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSTopicBuiltinTopicDataTypeSupport</name>
    <filename>classDDSTopicBuiltinTopicDataTypeSupport.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSTopicDescription</name>
    <filename>classDDSTopicDescription.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_type_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a90b53a1c114b40e674e51b5ae9221881</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get_name</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>a1aaa018434f6a8dab450ac8c89f6bf65</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDSDomainParticipant *</type>
      <name>get_participant</name>
      <anchorfile>classDDSTopicDescription.html</anchorfile>
      <anchor>ae2bf787bb77f8764976c97c4364e53e3</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSTopicListener</name>
    <filename>classDDSTopicListener.html</filename>
    <base virtualness="virtual">DDSListener</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_inconsistent_topic</name>
      <anchorfile>classDDSTopicListener.html</anchorfile>
      <anchor>a8b67442b9d82dd89c99db1e449bf2c31</anchor>
      <arglist>(DDSTopic *topic, const DDS_InconsistentTopicStatus &amp;status)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDSTypeSupport</name>
    <filename>classDDSTypeSupport.html</filename>
  </compound>
  <compound kind="class">
    <name>DDSWaitSet</name>
    <filename>classDDSWaitSet.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>acf4f30344c6341439d8f498c00313d97</anchor>
      <arglist>(DDSConditionSeq &amp;active_conditions, const DDS_Duration_t &amp;timeout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>attach_condition</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>a781eb572176daae45a7bdca2d26f07d4</anchor>
      <arglist>(DDSCondition *cond)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>detach_condition</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>a2cc98c16ca6b862be73b38eaf2b810c6</anchor>
      <arglist>(DDSCondition *cond)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_conditions</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>aa19a9a232fe508ab281b4831a2581cc0</anchor>
      <arglist>(DDSConditionSeq &amp;attached_conditions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_property</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>a9ffee0550edc756288ad4b1acf6d76d9</anchor>
      <arglist>(const DDS_WaitSetProperty_t &amp;prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_property</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>ad41764717bc7db285ca0e3b3209119ef</anchor>
      <arglist>(DDS_WaitSetProperty_t &amp;prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DDSWaitSet</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>a1b6ba816f8b204b7f6e46ae396b15811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDSWaitSet</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>aeb75bc2c2ae15a008cff742af17d946e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDSWaitSet</name>
      <anchorfile>classDDSWaitSet.html</anchorfile>
      <anchor>af4f4e0e5d22b5776305d9acf4a6fc15d</anchor>
      <arglist>(const DDS_WaitSetProperty_t &amp;prop)</arglist>
    </member>
    <docanchor file="classDDSWaitSet">WaitSet_usage</docanchor>
    <docanchor file="classDDSWaitSet">WaitSet_trigger_status</docanchor>
    <docanchor file="classDDSWaitSet">WaitSet_trigger_read</docanchor>
    <docanchor file="classDDSWaitSet">WaitSet_trigger_guard</docanchor>
  </compound>
  <compound kind="class">
    <name>DDSWriterContentFilter</name>
    <filename>classDDSWriterContentFilter.html</filename>
    <base>DDSContentFilter</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>writer_compile</name>
      <anchorfile>classDDSWriterContentFilter.html</anchorfile>
      <anchor>afe8a142adadf1533e48358b099284223</anchor>
      <arglist>(void *writer_filter_data, DDS_ExpressionProperty *prop, const char *expression, const DDS_StringSeq *parameters, const DDS_TypeCode *type_code, const char *type_class_name, const DDS_Cookie_t *cookie)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual struct DDS_CookieSeq *</type>
      <name>writer_evaluate</name>
      <anchorfile>classDDSWriterContentFilter.html</anchorfile>
      <anchor>af9d3825168a7af082bac736c6eb9ee68</anchor>
      <arglist>(void *writer_filter_data, const void *sample, const DDS_FilterSampleInfo *meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_finalize</name>
      <anchorfile>classDDSWriterContentFilter.html</anchorfile>
      <anchor>a5c0b4d41663bc2f73013b31f5777a1da</anchor>
      <arglist>(void *writer_filter_data, const DDS_Cookie_t *cookie)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>writer_attach</name>
      <anchorfile>classDDSWriterContentFilter.html</anchorfile>
      <anchor>a8c5816713dfd5b572176d8a4cf6f7c3c</anchor>
      <arglist>(void **writer_filter_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_detach</name>
      <anchorfile>classDDSWriterContentFilter.html</anchorfile>
      <anchor>a41fc611e731be8e3d34a9e2494e757f3</anchor>
      <arglist>(void *writer_filter_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writer_return_loan</name>
      <anchorfile>classDDSWriterContentFilter.html</anchorfile>
      <anchor>a1fad7a235833124f6c58ca5b7709bd14</anchor>
      <arglist>(void *writer_filter_data, DDS_CookieSeq *cookies)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>compile</name>
      <anchorfile>classDDSContentFilter.html</anchorfile>
      <anchor>a63e32ab4238cac00b291c5b7ce669067</anchor>
      <arglist>(void **new_compile_data, const char *expression, const DDS_StringSeq &amp;parameters, const DDS_TypeCode *type_code, const char *type_class_name, void *old_compile_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_Boolean</type>
      <name>evaluate</name>
      <anchorfile>classDDSContentFilter.html</anchorfile>
      <anchor>aabc22210922ebc59257a79f984e7a2b2</anchor>
      <arglist>(void *compile_data, const void *sample, const struct DDS_FilterSampleInfo *meta_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classDDSContentFilter.html</anchorfile>
      <anchor>acf5c25a7d696c0ac5601b5be10b3d7b5</anchor>
      <arglist>(void *compile_data)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Foo</name>
    <filename>structFoo.html</filename>
  </compound>
  <compound kind="class">
    <name>FooDataReader</name>
    <filename>structFooDataReader.html</filename>
    <base>DDSDataReader</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a41ce9a810ae59dc0a73a71a3183f5eb1</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a61a138ab1a8aa7adf766dc4cbdab32dd</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
      <docanchor file="structFooDataReader">Data_and_sampleinfo_sequence</docanchor>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_w_condition</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>af5f7d5af52bbf7031395fb6725cebde9</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_w_condition</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>ad039152c4bc032476f5364335490d586</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, DDSReadCondition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_sample</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a6292f2087d9d8d65819f6c4ce52a954d</anchor>
      <arglist>(Foo &amp;received_data, DDS_SampleInfo &amp;sample_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_sample</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>ac538f464172c1ad2c5968f768f857a22</anchor>
      <arglist>(Foo &amp;received_data, DDS_SampleInfo &amp;sample_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_instance</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a72e63fa52da1bbc58a49c45533fb19c6</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;a_handle, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_instance</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>aacaecc262a2d9a45f3368b7c9a444157</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;a_handle, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_instance_w_condition</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>aff713a2d2068a2ae66f65c9b1c6a3c01</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;previous_handle, DDSReadCondition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_instance_w_condition</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a14baf43a7d8914cff13ec53e25bc696c</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;previous_handle, DDSReadCondition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_instance</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a7f946223aada6b5c51cdd6b8372ed4a4</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;previous_handle, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_instance</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a38f7058598e5ff204e2d4fbb1ac77d24</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;previous_handle, DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>read_next_instance_w_condition</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a087aaec59491e9ab4f1f1affd4b78b2c</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;previous_handle, DDSReadCondition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>take_next_instance_w_condition</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>aac651b332f63c8561959d486bb9a36e8</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq, DDS_Long max_samples, const DDS_InstanceHandle_t &amp;previous_handle, DDSReadCondition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>return_loan</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a9f142a4ee87d08e14a4c07325e1b13ea</anchor>
      <arglist>(FooSeq &amp;received_data, DDS_SampleInfoSeq &amp;info_seq)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a6340ca126652c2fd6f5c860544f5987b</anchor>
      <arglist>(Foo &amp;key_holder, const DDS_InstanceHandle_t handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>a9ff60acb96f02f71f59c15b276bdd1bf</anchor>
      <arglist>(const Foo &amp;key_holder)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSReadCondition *</type>
      <name>create_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a3932df2aec41a46f7b5ab6eccd021864</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSQueryCondition *</type>
      <name>create_querycondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e612e4d2705e18fb412eeb66ec52a5a</anchor>
      <arglist>(DDS_SampleStateMask sample_states, DDS_ViewStateMask view_states, DDS_InstanceStateMask instance_states, const char *query_expression, const struct DDS_StringSeq &amp;query_parameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_readcondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a1e808d4152eacac03d428aea78eb168d</anchor>
      <arglist>(DDSReadCondition *condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>delete_contained_entities</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ae075efea2fe45158e2e1e77d43547942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_historical_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad819b699998a94b961dad099af34e3df</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a4a832fc7e10305cfae4aa6f6a3ff49d0</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>addb81f2428663cb02e0559a32281b4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_sample</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a13a2e670007c6b7263ef0c6fa3b41f26</anchor>
      <arglist>(const DDS_SampleInfo &amp;sample_info, const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>acknowledge_all</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bfe912b96975b05a72dedcadd82d28e</anchor>
      <arglist>(const DDS_AckResponseData_t &amp;response_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publications</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adb759493c50162545c1985ce0ad7650e</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;publication_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a191852f51faa7594310824c698d26b52</anchor>
      <arglist>(DDS_PublicationBuiltinTopicData &amp;publication_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_participant_data</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>af67904bde43e74bf96106bf01eba13ee</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopicDescription *</type>
      <name>get_topicdescription</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad7f9b0e906b6923811d2a107830d33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSSubscriber *</type>
      <name>get_subscriber</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ab424cb782fa02f8a8b4706e198410dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_rejected_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a0c2d1e2c836f5eb519f5bdfe249789a4</anchor>
      <arglist>(DDS_SampleRejectedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_changed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a808d7fc28f90faa12a88b14580aed294</anchor>
      <arglist>(DDS_LivelinessChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_deadline_missed_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a052832b975f2ba6098bafe9f79dc5194</anchor>
      <arglist>(DDS_RequestedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_requested_incompatible_qos_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aab38cc87e6448aa50ead5ae09d1f57db</anchor>
      <arglist>(DDS_RequestedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_sample_lost_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>aa336ee08da0bfaf912ec43592e4e8076</anchor>
      <arglist>(DDS_SampleLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_subscription_matched_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ad24a9b24e96572097aa291c198ffd94b</anchor>
      <arglist>(DDS_SubscriptionMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_cache_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>ac11d1341ee2a425a70cd90edbb1f53c0</anchor>
      <arglist>(DDS_DataReaderCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a7bec4d84fc75624730636dcba375f138</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_publication_datareader_protocol_status</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abd20c5e299cf54507a5dad6f3d92d484</anchor>
      <arglist>(DDS_DataReaderProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;publication_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6af434525ff6b8b988e01228718942ea</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a943ef5db1e51d2f877c2d5a2e09331b2</anchor>
      <arglist>(DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abfa1b80e725ddde9df03e1579be979bd</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a05e28b9b292f8f5f3f07fb79eb51fa50</anchor>
      <arglist>(DDSDataReaderListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataReaderListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a2480064b630739d10c9450d78a03f63e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a6d57342f3991a11c257d02adfcf260b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>abe8d15de36febb4b985a873944336b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>adc28ec1ff1d2b1c996941af93a2e6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataReader.html</anchorfile>
      <anchor>a444b1b9ce22dc2ae7c8ced75aa4cf1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FooDataReader *</type>
      <name>narrow</name>
      <anchorfile>structFooDataReader.html</anchorfile>
      <anchor>ad3ed7d5fb2c1cfb83c49b351b5aa7ae8</anchor>
      <arglist>(DDSDataReader *reader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FooDataWriter</name>
    <filename>structFooDataWriter.html</filename>
    <base>DDSDataWriter</base>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a5a9c7ff3c6f5c559c56ee3481031ae3a</anchor>
      <arglist>(const Foo &amp;instance_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance_w_timestamp</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a9902b5ca96420eae58ff03b80b37f6eb</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_Time_t &amp;source_timestamp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>register_instance_w_params</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>ada0a43a5d97d70ded9872ee15d1b17fb</anchor>
      <arglist>(const Foo &amp;instance_data, DDS_WriteParams_t &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>aec82ad5e0bd1803708a48b9f1759822d</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance_w_timestamp</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a9e7fde03db3411eeced4faad2457ad92</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>unregister_instance_w_params</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a36d070878e7f5d485ca7654c38d11a32</anchor>
      <arglist>(const Foo &amp;instance_data, DDS_WriteParams_t &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>abb3770f202340bc819368463987eb055</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_timestamp</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a1cdd67e5676b2beb46055008deb47c6f</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_InstanceHandle_t &amp;handle, const DDS_Time_t &amp;source_timestamp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>write_w_params</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a9d6cc6a9442049c2385ad8ffffa1352f</anchor>
      <arglist>(const Foo &amp;instance_data, DDS_WriteParams_t &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a742a2c7fa2b6535df9d89fb8d1ae1009</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_InstanceHandle_t &amp;instance_handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose_w_timestamp</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a7fed98729f7a5f708d21a58e4c8366cb</anchor>
      <arglist>(const Foo &amp;instance_data, const DDS_InstanceHandle_t &amp;instance_handle, const DDS_Time_t &amp;source_timestamp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>dispose_w_params</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a4399bd4e67a4b98cec27232cb823cb2e</anchor>
      <arglist>(const Foo &amp;instance_data, DDS_WriteParams_t &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_key_value</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a37d2d43a4567d7ac4ba46caf9a086428</anchor>
      <arglist>(Foo &amp;key_holder, const DDS_InstanceHandle_t &amp;handle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>lookup_instance</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a070680bab3ab15ecad3186aae0ab346d</anchor>
      <arglist>(const Foo &amp;key_holder)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_liveliness_lost_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad6efe344690fb0cdf2e911841a91ea4c</anchor>
      <arglist>(DDS_LivelinessLostStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_deadline_missed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a2f7f9ba730c6f56e0a1b37acdae1c029</anchor>
      <arglist>(DDS_OfferedDeadlineMissedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_offered_incompatible_qos_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a82937eee5eea9ed3244ce150c3497f9b</anchor>
      <arglist>(DDS_OfferedIncompatibleQosStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_publication_matched_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aa07f06cfcf67e6df5848beaba2159601</anchor>
      <arglist>(DDS_PublicationMatchedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_writer_cache_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adf9d5fe9502b6479da1ba18253a085b1</anchor>
      <arglist>(DDS_ReliableWriterCacheChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_reliable_reader_activity_changed_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab0a2179e3b19158345a9a755f82061ba</anchor>
      <arglist>(DDS_ReliableReaderActivityChangedStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_cache_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae83dcec1be9730e9073d41305a6f0e91</anchor>
      <arglist>(DDS_DataWriterCacheStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ae31eeb1c0aed103e35387b2a3921932e</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a6ddae7be7cb7b32607ac6da32410bf48</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_datawriter_protocol_status_by_locator</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>afb87e5edb78ce4277876a7c88fa41492</anchor>
      <arglist>(DDS_DataWriterProtocolStatus &amp;status, const DDS_Locator_t &amp;locator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>assert_liveliness</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a29149f29597182f09d586d8351b1cc41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_locators</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a43a6d25cc575365356fca246bc4a4077</anchor>
      <arglist>(DDS_LocatorSeq &amp;locators)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscriptions</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a5152ed3f2f0db21f2cbce8375269c035</anchor>
      <arglist>(DDS_InstanceHandleSeq &amp;subscription_handles)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab06bc499b6a0e7cdb2739f637496ef54</anchor>
      <arglist>(DDS_SubscriptionBuiltinTopicData &amp;subscription_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_matched_subscription_participant_data</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>af9d9cd2e80c7479479e2460c74c1cbc8</anchor>
      <arglist>(DDS_ParticipantBuiltinTopicData &amp;participant_data, const DDS_InstanceHandle_t &amp;subscription_handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSTopic *</type>
      <name>get_topic</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aec7ea044b7ab1b7cc9d53c90635a4717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSPublisher *</type>
      <name>get_publisher</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab15c55a608128a9b8a0ca5032dbd5538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_acknowledgments</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a57db2fe3bff153b070463e62f9cc4925</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>is_sample_app_acknowledged</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a8d2828a057b0408c45f8be77f5d722b4</anchor>
      <arglist>(DDS_Boolean &amp;is_app_ack, const struct DDS_SampleIdentity_t &amp;identity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>wait_for_asynchronous_publishing</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad3c4be7eac0f7fa4aebb04799bfcba45</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adb117fa3f103a98425ff604389768044</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_qos_with_profile</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ad42d5d5007a0fda618c7b5cf4aacde7f</anchor>
      <arglist>(const char *library_name, const char *profile_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>get_qos</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>ab489d8253d2e24a0ab073dbd878eafdc</anchor>
      <arglist>(DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>set_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>acac162d0c9d714343a8e566d533d07e6</anchor>
      <arglist>(DDSDataWriterListener *l, DDS_StatusMask mask=DDS_STATUS_MASK_ALL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSDataWriterListener *</type>
      <name>get_listener</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>adcf0ad2316edfebe7a62abcff769222d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>flush</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a7c79afffa37deb8e4951e1521c23fd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_ReturnCode_t</type>
      <name>enable</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a4dfd78288627a8ed2fa1d056641509f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDSStatusCondition *</type>
      <name>get_statuscondition</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a0565d3ac5f00695143df14044b37227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_StatusMask</type>
      <name>get_status_changes</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>aee515556d47548a23e54dc68156e4e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DDS_InstanceHandle_t</type>
      <name>get_instance_handle</name>
      <anchorfile>classDDSDataWriter.html</anchorfile>
      <anchor>a41aa44c790be056d6cfe8e26aa2019d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FooDataWriter *</type>
      <name>narrow</name>
      <anchorfile>structFooDataWriter.html</anchorfile>
      <anchor>a7798d8e345898bd7642786288f7a8123</anchor>
      <arglist>(DDSDataWriter *writer)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FooSeq</name>
    <filename>structFooSeq.html</filename>
    <member kind="function">
      <type>FooSeq &amp;</type>
      <name>operator=</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a8244e65d7bce8f4555e62ba76b2db4ba</anchor>
      <arglist>(const struct FooSeq &amp;src_seq)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy_no_alloc</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a2c4b27e70d871276f5c0588337596524</anchor>
      <arglist>(const struct FooSeq &amp;src_seq)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>from_array</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a67f4f626f27b041eaf1fbbb7abd90fd7</anchor>
      <arglist>(const Foo array[], DDS_Long length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>to_array</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a34b2b38f46bb4b5aca744125627aeaac</anchor>
      <arglist>(Foo array[], DDS_Long length)</arglist>
    </member>
    <member kind="function">
      <type>Foo &amp;</type>
      <name>operator[]</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>aa7676bae9cf63f55e682b01e1fc9ef99</anchor>
      <arglist>(DDS_Long i)</arglist>
    </member>
    <member kind="function">
      <type>const Foo &amp;</type>
      <name>operator[]</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>ae5ba395790e24b580d935da5a53e784e</anchor>
      <arglist>(DDS_Long i) const </arglist>
    </member>
    <member kind="function">
      <type>DDS_Long</type>
      <name>length</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a2a38c15cdd9eceab96555fc2375952a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>length</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a218d5e2a15c320b52b2e6a9e532c9cbb</anchor>
      <arglist>(DDS_Long new_length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ensure_length</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>aecaba1c585095dcec0b975c4b4ceacb5</anchor>
      <arglist>(DDS_Long length, DDS_Long max)</arglist>
    </member>
    <member kind="function">
      <type>DDS_Long</type>
      <name>maximum</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>ad50736790ee5daee025e076caf2c3428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>maximum</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a1bca9891ed49e9d82e249b4c0d54c34d</anchor>
      <arglist>(DDS_Long new_max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loan_contiguous</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>ad6c6d9df78157a7077a6858db2d782a2</anchor>
      <arglist>(Foo *buffer, DDS_Long new_length, DDS_Long new_max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loan_discontiguous</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a54a116ece7d03d5b34ef5cdec1790839</anchor>
      <arglist>(Foo **buffer, DDS_Long new_length, DDS_Long new_max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unloan</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>aec103f89c5c2f118ca570b5cddce8bb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Foo *</type>
      <name>get_contiguous_buffer</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>ad9ac076c2beeb082392124a56cc0a6ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Foo **</type>
      <name>get_discontiguous_buffer</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a6088f780e12190965288a0ffe8e4f6ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>ab037e9d5ce513e8cc966603ffc0cecde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FooSeq</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>ae8ad8cfcb30ba3660fb421548938241a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FooSeq</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>a0a969ff34dda8abb6df316c569b7fcad</anchor>
      <arglist>(DDS_Long new_max=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FooSeq</name>
      <anchorfile>structFooSeq.html</anchorfile>
      <anchor>acf91df43a597f8f41ee973b8dcdea9c6</anchor>
      <arglist>(const struct FooSeq &amp;foo_seq)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FooTypeSupport</name>
    <filename>structFooTypeSupport.html</filename>
    <base>DDSTypeSupport</base>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>register_type</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a25b70f0c36cbb4ba95e6ef08e094e84c</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>unregister_type</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>af4334ac8c5ccfca30dd5a9bd808cb6bc</anchor>
      <arglist>(DDSDomainParticipant *participant, const char *type_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Foo *</type>
      <name>create_data</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>aca6e95f96bfd41d582268bdb728ecf3b</anchor>
      <arglist>(const DDS_TypeAllocationParams_t &amp;alloc_params=DDS_TYPE_ALLOCATION_PARAMS_DEFAULT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Foo *</type>
      <name>create_data_ex</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a6cbe25646eff7ca20c15f8acfafd2fa6</anchor>
      <arglist>(DDS_Boolean allocatePointers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>copy_data</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a5214c88930bb8d229aa93b7cf4285685</anchor>
      <arglist>(Foo *dst_data, const Foo *src_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>delete_data</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>ac7a7993f906f2778ab88360832190836</anchor>
      <arglist>(Foo *a_data, const DDS_TypeDeallocationParams_t &amp;dealloc_params=DDS_TYPE_DEALLOCATION_PARAMS_DEFAULT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>delete_data_ex</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a2ff5a1ddffefc5a13a7b9c602bf33cee</anchor>
      <arglist>(Foo *a_data, DDS_Boolean deletePointers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>initialize_data</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a90ed5db8ecd040b4b07615ca5287d3da</anchor>
      <arglist>(Foo *a_data, const DDS_TypeAllocationParams_t &amp;alloc_params=DDS_TYPE_ALLOCATION_PARAMS_DEFAULT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>initialize_data_ex</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a1b324aa54c1eaec577b9f08b5e182945</anchor>
      <arglist>(Foo *a_data, DDS_Boolean allocatePointers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>finalize_data</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a3d3e606b4b94797def074e07dc904b93</anchor>
      <arglist>(Foo *a_data, const DDS_TypeDeallocationParams_t &amp;dealloc_params=DDS_TYPE_DEALLOCATION_PARAMS_DEFAULT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>finalize_data_ex</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>abe60dc38491e73749c1f224952b6459b</anchor>
      <arglist>(Foo *a_data, DDS_Boolean deletePointers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>get_type_name</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>ac5233ac695b8969add4e8f3ee3aebbb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>print_data</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a1f2301d640990cccdcabd38a3dbd80de</anchor>
      <arglist>(const Foo *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>serialize_data_to_cdr_buffer</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a7b6d1dec0082d30804687c145f41c9c7</anchor>
      <arglist>(char *buffer, unsigned int &amp;length, const Foo *a_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>deserialize_data_from_cdr_buffer</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a37f444ad5463df70c2edaffcb82d5c80</anchor>
      <arglist>(Foo *sample, const char *buffer, unsigned int length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_TypeCode *</type>
      <name>get_typecode</name>
      <anchorfile>structFooTypeSupport.html</anchorfile>
      <anchor>a67c778ecc9f1645fd73d3591ff5b4c54</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Config_LibraryVersion_t</name>
    <filename>structNDDS__Config__LibraryVersion__t.html</filename>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>major</name>
      <anchorfile>structNDDS__Config__LibraryVersion__t.html</anchorfile>
      <anchor>abe7fc1a5ceaeaa8a1ad9077d0940b0a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>minor</name>
      <anchorfile>structNDDS__Config__LibraryVersion__t.html</anchorfile>
      <anchor>a6c1880eb584167302a16b352b38e6e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>release</name>
      <anchorfile>structNDDS__Config__LibraryVersion__t.html</anchorfile>
      <anchor>a510acf01b4a5e8c76ccf5ba8e98f2879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DDS_Long</type>
      <name>build</name>
      <anchorfile>structNDDS__Config__LibraryVersion__t.html</anchorfile>
      <anchor>a828905b47079ccb66c78c1cecefb28e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Config_LogMessage</name>
    <filename>structNDDS__Config__LogMessage.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>text</name>
      <anchorfile>structNDDS__Config__LogMessage.html</anchorfile>
      <anchor>ac3a943860a6dc24213dfb9b7e6195328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NDDS_Config_LogLevel</type>
      <name>level</name>
      <anchorfile>structNDDS__Config__LogMessage.html</anchorfile>
      <anchor>a22054bbcb04f0463f16d280ace77bc48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_Address_t</name>
    <filename>structNDDS__Transport__Address__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>network_ordered_value</name>
      <anchorfile>structNDDS__Transport__Address__t.html</anchorfile>
      <anchor>a9aae346aa5d7fd1a1fc2d11543149698</anchor>
      <arglist>[NDDS_TRANSPORT_ADDRESS_LENGTH]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_Property_t</name>
    <filename>structNDDS__Transport__Property__t.html</filename>
    <member kind="variable">
      <type>NDDS_Transport_ClassId_t</type>
      <name>classid</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>ad1801e5fd5ad7bb727c3c55cc4ee9096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>address_bit_count</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a5a2ee05f550b32ac32a3c9b520216202</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>properties_bitmap</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a9aa8b4998b2dde4cc303b44a0c458b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>gather_send_buffer_count_max</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a3e830e6ff13c82dc46ef39e7d6169be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>message_size_max</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a4ab89765aee4395142e2dabc7849a46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>allow_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a4fe78eb17d3113ab7b19666bdebc74b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>allow_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>aefb52fdb768c5dd345c6f80e59eaafd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>deny_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a5cdeaa8a2ef3a32cac477c487c0e2cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>deny_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a3df8a19f01b332cdacc2972cfbc687fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>allow_multicast_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a53edf45a5ba7a827ccbbc7ac244305dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>allow_multicast_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>ad21b2883cbff15f6b9a1a76ced37d2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>deny_multicast_interfaces_list</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>aee02ed299b471a0a09adf464ca467154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>deny_multicast_interfaces_list_length</name>
      <anchorfile>structNDDS__Transport__Property__t.html</anchorfile>
      <anchor>a6a8978297019dd39fc8eea1de70e0bb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_Shmem_Property_t</name>
    <filename>structNDDS__Transport__Shmem__Property__t.html</filename>
    <member kind="variable">
      <type>struct NDDS_Transport_Property_t</type>
      <name>parent</name>
      <anchorfile>structNDDS__Transport__Shmem__Property__t.html</anchorfile>
      <anchor>a853ea5a98b12128d51e220641328182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>received_message_count_max</name>
      <anchorfile>structNDDS__Transport__Shmem__Property__t.html</anchorfile>
      <anchor>a240f1296a35c1edb35b40e6902cffbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>receive_buffer_size</name>
      <anchorfile>structNDDS__Transport__Shmem__Property__t.html</anchorfile>
      <anchor>a5e4bdc80e1538c2ea1315504435f22b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_UDPv4_Property_t</name>
    <filename>structNDDS__Transport__UDPv4__Property__t.html</filename>
    <member kind="variable">
      <type>struct NDDS_Transport_Property_t</type>
      <name>parent</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a201b738f355a224f4adb1aa29481f748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a9d7af2209fbb1b7486e0161d57a47096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>recv_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>acb818edb0468929186920af27a811a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>unicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>adde305603e3b5ee7272355e57c6c8b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a4b51e81f4b886f1918ae41d62474fa81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_ttl</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a3a361973cfdc08952376a23792fbbc8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_loopback_disabled</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a6a63587ef07003924a3c5e97d642306b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_loopback_interface</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a1788423f895ef8fa42d4dc21d0e85651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_nonup_interfaces</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>aad52040f31d2683e45d798fb9b226dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_nonrunning_interfaces</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a838b2410350d165e2937a431e53a1b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>no_zero_copy</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a7b3dc6c7ab05e0273f55f6f0312a8a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_blocking</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a1f212bdbbb27abe3f53a6622c5dfad89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_UINT32</type>
      <name>transport_priority_mask</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a06eff9f2baf5f72185750b93c82cefeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_low</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>abae063f230c55683c852fa602b36b5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_high</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a2184e43d4efffcaf17a3b087f57afec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_ping</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a2599053c923aa49bc26d25a1b9d53fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_UINT32</type>
      <name>interface_poll_period</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a826c7e862521167b334ad2e6ecdcd118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>reuse_multicast_receive_resource</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>aca0942bfc07fdf62a5b70e0ae6314685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>protocol_overhead_max</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>aa9988933834b3017f865ab26a8833130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>public_address</name>
      <anchorfile>structNDDS__Transport__UDPv4__Property__t.html</anchorfile>
      <anchor>a4fda981516c74d50d31abe161d4f7381</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NDDS_Transport_UDPv6_Property_t</name>
    <filename>structNDDS__Transport__UDPv6__Property__t.html</filename>
    <member kind="variable">
      <type>struct NDDS_Transport_Property_t</type>
      <name>parent</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a4d5b6c414c527410f1eb5790561823d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a6357009ec696b2fafb93510964fd9e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>recv_socket_buffer_size</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a00da7fe0a40645d52864d91b1554c8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>unicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a423d55dac2537c8cbdedcabd26d644d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_enabled</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a901962012774ff31a11a188ee402f50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_ttl</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aab65f6ab0c21172ff233389b49fc5547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>multicast_loopback_disabled</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a26f5565a333f6d61812cbb9a7279a376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_loopback_interface</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a032b0e119dbb669056cca5e8f6858390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>ignore_nonrunning_interfaces</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>af34f95b839d60fbf10469c42200ea647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>no_zero_copy</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aba60da079070e98b18036f44bf6689a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>send_blocking</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aa5164dd6782181ff7f63752c58c9d00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>enable_v4mapped</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aa61d4ff6c732c9cbeb84b6f35e6f697a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_UINT32</type>
      <name>transport_priority_mask</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a300d65c0a3f8adfb9ad8416d49b2e006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_low</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>aa1bb5f930b7d612b9e1044f067a58102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RTI_INT32</type>
      <name>transport_priority_mapping_high</name>
      <anchorfile>structNDDS__Transport__UDPv6__Property__t.html</anchorfile>
      <anchor>a49f387a6f55a83cf9a3ff9ee1df34db0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NDDSConfigLogger</name>
    <filename>classNDDSConfigLogger.html</filename>
    <member kind="function">
      <type>NDDS_Config_LogVerbosity</type>
      <name>get_verbosity</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a9b6e26e6d7f916daec122d4a2af10b69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NDDS_Config_LogVerbosity</type>
      <name>get_verbosity_by_category</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a734d4c14cb3a3362c67b8d8ae806ba54</anchor>
      <arglist>(NDDS_Config_LogCategory category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_verbosity</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>ab840354d13677e21f44f73c6e4f44ef5</anchor>
      <arglist>(NDDS_Config_LogVerbosity verbosity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_verbosity_by_category</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a38c77e4dc81cee3e65592cfcc29b4500</anchor>
      <arglist>(NDDS_Config_LogCategory category, NDDS_Config_LogVerbosity verbosity)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>get_output_file</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a4cdbf776d1f4a7e05f91b39b7696bf3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_output_file</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a52c7e1fba7bb732cd9e392ba7d7f50d1</anchor>
      <arglist>(FILE *out)</arglist>
    </member>
    <member kind="function">
      <type>NDDSConfigLoggerDevice *</type>
      <name>get_output_device</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>aaf5272fafdc43fe9244de010f3ad0f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_output_device</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a36926d0d2aa28907f41ea4226e944590</anchor>
      <arglist>(NDDSConfigLoggerDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>NDDS_Config_LogPrintFormat</type>
      <name>get_print_format</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>af959cb78b6a6b5a35a7318b0d22f6c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_print_format</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>ac37b20ff2547e4ae2cb6d9f616593bdf</anchor>
      <arglist>(NDDS_Config_LogPrintFormat print_format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NDDSConfigLogger *</type>
      <name>get_instance</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a73e01989bb80eff16c8080803013a281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize_instance</name>
      <anchorfile>classNDDSConfigLogger.html</anchorfile>
      <anchor>a1cba02d7d1ccf2e7609f0221b3fb3d19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NDDSConfigLoggerDevice</name>
    <filename>classNDDSConfigLoggerDevice.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classNDDSConfigLoggerDevice.html</anchorfile>
      <anchor>ae147de8b1e7cca7d7c087202756025e9</anchor>
      <arglist>(const NDDS_Config_LogMessage *message)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>close</name>
      <anchorfile>classNDDSConfigLoggerDevice.html</anchorfile>
      <anchor>a5bb895d18df0ec5f392038365956b73e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NDDSConfigVersion</name>
    <filename>classNDDSConfigVersion.html</filename>
    <member kind="function">
      <type>const DDS_ProductVersion_t &amp;</type>
      <name>get_product_version</name>
      <anchorfile>classNDDSConfigVersion.html</anchorfile>
      <anchor>a996d356b69db6e93960b049c9376ce58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NDDS_Config_LibraryVersion_t &amp;</type>
      <name>get_cpp_api_version</name>
      <anchorfile>classNDDSConfigVersion.html</anchorfile>
      <anchor>abf42e3b8470b33a1026924d42b455ea3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NDDS_Config_LibraryVersion_t &amp;</type>
      <name>get_c_api_version</name>
      <anchorfile>classNDDSConfigVersion.html</anchorfile>
      <anchor>afd9ab1376d7e59d6b9ed7c45d386f3f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NDDS_Config_LibraryVersion_t &amp;</type>
      <name>get_core_version</name>
      <anchorfile>classNDDSConfigVersion.html</anchorfile>
      <anchor>a7b360bd9accc174509a291710714baf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>to_string</name>
      <anchorfile>classNDDSConfigVersion.html</anchorfile>
      <anchor>a95e0216f2108e9059e7b6ab64f1d96d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const NDDSConfigVersion &amp;</type>
      <name>get_instance</name>
      <anchorfile>classNDDSConfigVersion.html</anchorfile>
      <anchor>ac1e1c9f3b43efa4af357c7a7d3ad9368</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NDDSTransportSupport</name>
    <filename>classNDDSTransportSupport.html</filename>
    <member kind="function" static="yes">
      <type>static NDDS_Transport_Handle_t</type>
      <name>register_transport</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>a33c48b5a78c588643a24010e57521106</anchor>
      <arglist>(DDSDomainParticipant *participant_in, NDDS_Transport_Plugin *transport_in, const DDS_StringSeq &amp;aliases_in, const NDDS_Transport_Address_t &amp;network_address_in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NDDS_Transport_Handle_t</type>
      <name>lookup_transport</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>a850a3a7fe412ecc03315e439a313f23c</anchor>
      <arglist>(DDSDomainParticipant *participant_in, DDS_StringSeq &amp;aliases_out, NDDS_Transport_Address_t &amp;network_address_out, NDDS_Transport_Plugin *transport_in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>add_send_route</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>a729d3677ed14c39f2b6f87d9ffe377d8</anchor>
      <arglist>(const NDDS_Transport_Handle_t &amp;transport_handle_in, const NDDS_Transport_Address_t &amp;address_range_in, DDS_Long address_range_bit_count_in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>add_receive_route</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>a437c41cbc04eedc86e7df878519ebdee</anchor>
      <arglist>(const NDDS_Transport_Handle_t &amp;transport_handle_in, const NDDS_Transport_Address_t &amp;address_range_in, DDS_Long address_range_bit_count_in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>get_builtin_transport_property</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>ac20ec3f059e56a49628d69762546a7b4</anchor>
      <arglist>(DDSDomainParticipant *participant_in, DDS_TransportBuiltinKind builtin_transport_kind_in, struct NDDS_Transport_Property_t &amp;builtin_transport_property_inout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_ReturnCode_t</type>
      <name>set_builtin_transport_property</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>a750894e99659db42de12801b8c294469</anchor>
      <arglist>(DDSDomainParticipant *participant_in, DDS_TransportBuiltinKind builtin_transport_kind_in, const struct NDDS_Transport_Property_t &amp;builtin_transport_property_in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NDDS_Transport_Plugin *</type>
      <name>get_transport_plugin</name>
      <anchorfile>classNDDSTransportSupport.html</anchorfile>
      <anchor>a7f21c050c0769f4d6f63244510393a25</anchor>
      <arglist>(DDSDomainParticipant *participant_in, const char *alias_in)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NDDSUtility</name>
    <filename>classNDDSUtility.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sleep</name>
      <anchorfile>classNDDSUtility.html</anchorfile>
      <anchor>a69ac2ce5dbc445152dc07c9601487415</anchor>
      <arglist>(const struct DDS_Duration_t &amp;durationIn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>spin</name>
      <anchorfile>classNDDSUtility.html</anchorfile>
      <anchor>a3b308dd88254bfc81686469c3d00df99</anchor>
      <arglist>(DDS_UnsignedLongLong spinCount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DDS_UnsignedLongLong</type>
      <name>get_spin_per_microsecond</name>
      <anchorfile>classNDDSUtility.html</anchorfile>
      <anchor>ae0f59634da0c94b623b7a619a549ef0f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TransportAllocationSettings_t</name>
    <filename>structTransportAllocationSettings__t.html</filename>
  </compound>
  <compound kind="class">
    <name>connext::RuntimeException</name>
    <filename>classconnext_1_1RuntimeException.html</filename>
  </compound>
  <compound kind="class">
    <name>connext::LogicException</name>
    <filename>classconnext_1_1LogicException.html</filename>
  </compound>
  <compound kind="class">
    <name>connext::UnsupportedException</name>
    <filename>classconnext_1_1UnsupportedException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::BadParameterException</name>
    <filename>classconnext_1_1BadParameterException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::PreconditionNotMetException</name>
    <filename>classconnext_1_1PreconditionNotMetException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::ImmutablePolicyException</name>
    <filename>classconnext_1_1ImmutablePolicyException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::InconsistentPolicyException</name>
    <filename>classconnext_1_1InconsistentPolicyException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::NotEnabledException</name>
    <filename>classconnext_1_1NotEnabledException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::AlreadyDeletedException</name>
    <filename>classconnext_1_1AlreadyDeletedException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::IllegalOperationException</name>
    <filename>classconnext_1_1IllegalOperationException.html</filename>
    <base>connext::LogicException</base>
  </compound>
  <compound kind="class">
    <name>connext::TimeoutException</name>
    <filename>classconnext_1_1TimeoutException.html</filename>
    <base>connext::RuntimeException</base>
  </compound>
  <compound kind="class">
    <name>connext::OutOfResourcesException</name>
    <filename>classconnext_1_1OutOfResourcesException.html</filename>
    <base>connext::RuntimeException</base>
  </compound>
  <compound kind="class">
    <name>connext::Sample</name>
    <filename>classconnext_1_1Sample.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>a24377ebccd4a940a49ae0ae560a75537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>a9e0708f9e233ada5c5a4199ca53514dc</anchor>
      <arglist>(const Sample&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sample</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>a807e7a7df82cde9b4a877c8d60cd2a06</anchor>
      <arglist>(SampleRef&lt; T &gt; sample_ref)</arglist>
    </member>
    <member kind="function">
      <type>SampleIdentity_t</type>
      <name>identity</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>a68a483e1559e09ea7b0e49e3aef118ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SampleIdentity_t</type>
      <name>related_identity</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>aadbc4daf6ffce17c16f4316819b2ab77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>data</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>ab08edec72a1908ff797520be1555a0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SampleInfo &amp;</type>
      <name>info</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>ae6cd10a14f3e4a88f178fcf4a30a6f8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>data</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>a1f12239a5b3ee796664a2b6309b90210</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SampleInfo &amp;</type>
      <name>info</name>
      <anchorfile>classconnext_1_1Sample.html</anchorfile>
      <anchor>afccd233c6322acb0f39c8e637433ea3e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::SampleRef</name>
    <filename>classconnext_1_1SampleRef.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SampleRef</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>adf6a634d76081be77117cb278e2a47c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleRef</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a01aa0594cbf44893fd5c69bf0abc9b75</anchor>
      <arglist>(T *data, Info *info)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleRef</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a469641b3350669ba86350443b92b59e1</anchor>
      <arglist>(T &amp;data, Info &amp;info)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleRef</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a4c729c5bb8372b499fe00c7288e84f25</anchor>
      <arglist>(Sample&lt; T &gt; &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>SampleRef &amp;</type>
      <name>operator=</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a44c8f54eab13e0dd21f54ec38cb56d20</anchor>
      <arglist>(Sample&lt; T &gt; &amp;sample)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>data</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>aacf3d204d606a73f7677488e53ae0681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Info &amp;</type>
      <name>info</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a04efb3389734b0cc62c2ed92d24ee2ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T &amp;</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>ad153dfca51d5b4e169d582aacbf2a19a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>abd9d02cbc067ed23b9c04011bb056864</anchor>
      <arglist>(T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_info</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a703592ff0f3363c9545614a0d95aff8a</anchor>
      <arglist>(DDS_SampleInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil_data</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a49de5658dc37e77f5ca54191965ec3e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil_info</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a691f1beba0bcefb75d2641d18e7634d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SampleIdentity_t</type>
      <name>identity</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>ad5451fc38e4f9bd65f373330b4e4d977</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SampleIdentity_t</type>
      <name>related_identity</name>
      <anchorfile>classconnext_1_1SampleRef.html</anchorfile>
      <anchor>a60e1212dfbab4a0590dca4e044a64e7e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::WriteSample</name>
    <filename>classconnext_1_1WriteSample.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>WriteSample</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>a393dd81df22a9bde9b83f8ba6529ee75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WriteSample</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>af3ed1591878c8dd87e7cc7064baa2215</anchor>
      <arglist>(const WriteSample&lt; T &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WriteSample</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>adf6269a0b2044a767566c2d4282deca4</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WriteSample</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>af246a355feefdea624e0c6f9171335c6</anchor>
      <arglist>(WriteSampleRef&lt; T &gt; wsref)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>data</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>a6ab2e2935f6bba3b08d4074404552fbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WriteParams_t &amp;</type>
      <name>info</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>a3a074eda1914b8239ee4d14db35c5bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>data</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>aa0c41858647643e1119f5e5fb6be5177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WriteParams_t &amp;</type>
      <name>info</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>a4ce03958f57023f298f2732fe3b6fe62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SampleIdentity_t</type>
      <name>identity</name>
      <anchorfile>classconnext_1_1WriteSample.html</anchorfile>
      <anchor>a6b995ab363d43bff1e44aa741c66e840</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::WriteSampleRef</name>
    <filename>classconnext_1_1WriteSampleRef.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>WriteSampleRef</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>abb7300de07c1fc850f505a2fda364dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WriteSampleRef</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>afcea9b47b782cb4193ba6b5d2a621aaa</anchor>
      <arglist>(T &amp;data, WriteParams_t &amp;wparams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WriteSampleRef</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>a65052781bd984149d0dc0b5d2fe94694</anchor>
      <arglist>(WriteSample&lt; T &gt; &amp;ws)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>data</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>a002dde4d11cd943e3c3669a28dd03262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WriteParams_t &amp;</type>
      <name>info</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>a1a2ec0ed5ad46469f796f2aa7f875caa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>a1f53f7f4d4697485e76dee7bb9a9d469</anchor>
      <arglist>(T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_info</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>ac15fa330afd90ef19412fa7533b8ca42</anchor>
      <arglist>(WriteParams_t &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_nil_data</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>a1478b0b903f89c0a46c9aa5a5824fef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SampleIdentity_t</type>
      <name>identity</name>
      <anchorfile>classconnext_1_1WriteSampleRef.html</anchorfile>
      <anchor>acdef021380e043bc4c1ba5545e054761</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::IsValidSamplePredicate</name>
    <filename>classconnext_1_1IsValidSamplePredicate.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>connext::IsInvalidSamplePredicate</name>
    <filename>classconnext_1_1IsInvalidSamplePredicate.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>connext::IsReplyRelatedPredicate</name>
    <filename>classconnext_1_1IsReplyRelatedPredicate.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>IsReplyRelatedPredicate</name>
      <anchorfile>classconnext_1_1IsReplyRelatedPredicate.html</anchorfile>
      <anchor>aae8ed97651409625c4510793a8cd2600</anchor>
      <arglist>(const DDS::SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classconnext_1_1IsReplyRelatedPredicate.html</anchorfile>
      <anchor>ac653f7733dd6ee64f50ed3e8a3265523</anchor>
      <arglist>(SampleRef&lt; T &gt; sample)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::SampleIterator</name>
    <filename>classconnext_1_1SampleIterator.html</filename>
    <templarg></templarg>
    <templarg>IsConst</templarg>
  </compound>
  <compound kind="class">
    <name>connext::LoanedSamples</name>
    <filename>classconnext_1_1LoanedSamples.html</filename>
    <templarg>T</templarg>
    <class kind="struct">connext::LoanedSamples::LoanMemento</class>
    <member kind="typedef">
      <type>SampleIterator&lt; T, false &gt;</type>
      <name>iterator</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>addfe6e81acb199a6279a03fcacd7c5b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SampleIterator&lt; T, true &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a685bf1acb894aa19607db5c3c0e431dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoanedSamples</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a48acf0670eee45edead38ff3a99485e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>abccd62535be966f881fddedebacbdad3</anchor>
      <arglist>(TDataReader *&amp;reader_ptr, TSeq &amp;data_seq, SampleInfoSeq &amp;info_seq)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoanedSamples</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a091659a0d523e62f877fbd1e35e8267c</anchor>
      <arglist>(LoanMemento loan_memento)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LoanedSamples</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>ac648fb74954a8e44a29773bbf1ab1fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>operator[]</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a82f7e16d9d7d8ebe180b189b41b92b3e</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const_value_type</type>
      <name>operator[]</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>aefc4a16a15921ce836030eb8665aa519</anchor>
      <arglist>(size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a68f275c7416c0a3bda5acc53cd347be8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>return_loan</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>abc00cfb93d4b55861c1eebb3514bf5b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator LoanMemento</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a72bf58ca2784ab5135963f9f534f1c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a11cbbfc1ee5b46aa391d0ca3331ba2db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>a3f6c1bc4c31150bca3c2191b22744c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>aa65c01a2e247bb690db0a55d23cc127f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>ae89a15abad447941f6b9aa699db7c76b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LoanedSamples</type>
      <name>move_construct_from_loans</name>
      <anchorfile>classconnext_1_1LoanedSamples.html</anchorfile>
      <anchor>ab9122147cfea804d26d24d1f61f3162b</anchor>
      <arglist>(TDataReader *reader, TSeq &amp;data_seq, SampleInfoSeq &amp;info_seq)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>connext::LoanedSamples::LoanMemento</name>
    <filename>structconnext_1_1LoanedSamples_1_1LoanMemento.html</filename>
  </compound>
  <compound kind="class">
    <name>connext::Replier</name>
    <filename>classconnext_1_1Replier.html</filename>
    <templarg>TReq</templarg>
    <templarg>TRep</templarg>
    <member kind="typedef">
      <type>TReq</type>
      <name>Request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a55bcf02cb7e6b6e5cfd702717ccf03df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TRep</type>
      <name>Reply</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a27b4c80226f5cd51147a1cb893e45a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds_type_traits&lt; TRep &gt;::DataWriter</type>
      <name>ReplyDataWriter</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a636877992c24b0bd4edecf30d18ec3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds_type_traits&lt; TReq &gt;::DataReader</type>
      <name>RequestDataReader</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a45fe53272ff2ca467c7ccc0e998446c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Replier</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>afae9c2b29a53c6278b6e4ec0af855fd4</anchor>
      <arglist>(DDSDomainParticipant *participant, const std::string &amp;service_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Replier</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a9fc727c08d4e9370f7ad808af139790c</anchor>
      <arglist>(const ReplierParams&lt; TReq, TRep &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Replier</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a66f0423e21e812cbfe1d46ddd1182f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_reply</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>afb1ee88f0fabeb135cb8b4b18fa1f889</anchor>
      <arglist>(const URep &amp;reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_reply</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a3123c4673c13b239373fe86b473a8c76</anchor>
      <arglist>(WriteSample&lt; URep &gt; &amp;reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_reply</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a9e2947423eb66f2123f2bb6128fb7712</anchor>
      <arglist>(WriteSampleRef&lt; URep &gt; &amp;reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive_request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>abfdbd41f46b990989687fde89f7236a4</anchor>
      <arglist>(connext::Sample&lt; TReq &gt; &amp;request, const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive_request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>aee3e981165a70cc4e37f63fc21f25af4</anchor>
      <arglist>(connext::SampleRef&lt; TReq &gt; request, const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamplesType</type>
      <name>receive_requests</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>ac12e5b3f6c112e110a637416f1b00010</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamplesType</type>
      <name>receive_requests</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a3a201c8f0a1487eb22d53a49c3295b56</anchor>
      <arglist>(int min_request_count, int max_request_count, const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_for_requests</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>aae2d0bd052c182fd3fa7d1bda3b9c6c3</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_for_requests</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a39df9f6829003e10d87a8dfcfa702fe7</anchor>
      <arglist>(int min_count, const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take_request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a93d29eafb620123df8bce04258a41aa1</anchor>
      <arglist>(connext::Sample&lt; TReq &gt; &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take_request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>ad70fd39acf565203f594262006911578</anchor>
      <arglist>(connext::SampleRef&lt; TReq &gt; request)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamplesType</type>
      <name>take_requests</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a4ad067d5a9f4f9b2a43bfcc4f274f769</anchor>
      <arglist>(int max_samples=DDS_LENGTH_UNLIMITED)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a221c11837bfa3ce4a11a3558dbc7060e</anchor>
      <arglist>(connext::Sample&lt; TReq &gt; &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_request</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>acc63680b4ff421a5b3f550ae2c1fd74f</anchor>
      <arglist>(connext::SampleRef&lt; TReq &gt; request)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamplesType</type>
      <name>read_requests</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>a55b51bc0de98b9d5f105b0f3f5b02828</anchor>
      <arglist>(int max_samples=DDS_LENGTH_UNLIMITED)</arglist>
    </member>
    <member kind="function">
      <type>RequestDataReader *</type>
      <name>get_request_datareader</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>ac3f58fd6e3eaff1dfdff7ddbf3ef1ff6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReplyDataWriter *</type>
      <name>get_reply_datawriter</name>
      <anchorfile>classconnext_1_1Replier.html</anchorfile>
      <anchor>afcba2d60f5973444b702e1b6775526dc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::SimpleReplierListener</name>
    <filename>classconnext_1_1SimpleReplierListener.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual TRep *</type>
      <name>on_request_available</name>
      <anchorfile>classconnext_1_1SimpleReplierListener.html</anchorfile>
      <anchor>a0b7289c00f6de4862ef8c2eb20192c62</anchor>
      <arglist>(typename dds_type_traits&lt; TReq &gt;::SampleRefType request)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>return_loan</name>
      <anchorfile>classconnext_1_1SimpleReplierListener.html</anchorfile>
      <anchor>a40e2216d99c7fef4695397cb61f66ab4</anchor>
      <arglist>(TRep *reply)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::ReplierListener</name>
    <filename>classconnext_1_1ReplierListener.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_request_available</name>
      <anchorfile>classconnext_1_1ReplierListener.html</anchorfile>
      <anchor>a598782f9265513cf242edfddbb9bf0ed</anchor>
      <arglist>(Replier&lt; TReq, TRep &gt; &amp;replier)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::ReplierParams</name>
    <filename>classconnext_1_1ReplierParams.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ReplierParams</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>afbd6bfc18ba8d5344eced41ed5595867</anchor>
      <arglist>(DDS::DomainParticipant *participant)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>replier_listener</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a42d638e96bd5994336e75233b9acec45</anchor>
      <arglist>(ReplierListener&lt; TReq, TRep &gt; &amp;listener)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>service_name</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a0f4f2543384499e94debdb756b4ae9de</anchor>
      <arglist>(const std::string &amp;service_name)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>request_topic_name</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a3673c8b0f62c2fbfd8449854c9e6ec2e</anchor>
      <arglist>(const std::string &amp;req_topic)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>reply_topic_name</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>aa5e4cb6defa29df0518030c89aaa4d79</anchor>
      <arglist>(const std::string &amp;rep_topic)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>qos_profile</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a12f625dba91ee27ac9c795daa0f4ec05</anchor>
      <arglist>(const std::string &amp;qos_library_name, const std::string &amp;qos_profile_name)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>datawriter_qos</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a6b1167aa28f2026836c963dc706e9c02</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>datareader_qos</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a04ed9ba8ecc30db288024e1c7a282a0c</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>publisher</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>ac55843397b7cd72b6029ac48d61884ee</anchor>
      <arglist>(DDS::Publisher *publisher)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>subscriber</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>ad09588e6dab416ebd696130601bf2ddc</anchor>
      <arglist>(DDS::Subscriber *subscriber)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>request_type_support</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>ac52d97a2995cc1bf6e9dab3a042531a9</anchor>
      <arglist>(DDS::TypeSupport *type_support)</arglist>
    </member>
    <member kind="function">
      <type>ReplierParams &amp;</type>
      <name>reply_type_support</name>
      <anchorfile>classconnext_1_1ReplierParams.html</anchorfile>
      <anchor>a4eb17f24b51161e5c3efeee6d9b3cf66</anchor>
      <arglist>(DDS::TypeSupport *type_support)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::SimpleReplierParams</name>
    <filename>classconnext_1_1SimpleReplierParams.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SimpleReplierParams</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a4970bc709841db600f1476f589c5f74d</anchor>
      <arglist>(DDS::DomainParticipant *participant, SimpleReplierListener&lt; TReq, TRep &gt; &amp;listener)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>service_name</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a1b035f7ecf5ae25d54384fbf2162d19c</anchor>
      <arglist>(const std::string &amp;service_name)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>request_topic_name</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a6597113e5f3b4ce6c7cf27fecdeeefd6</anchor>
      <arglist>(const std::string &amp;req_topic)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>reply_topic_name</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a600e1057e79d9584ad3a0a04c28c856d</anchor>
      <arglist>(const std::string &amp;rep_topic)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>qos_profile</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>aa685f2c61c7633ea79583c73b5fc59df</anchor>
      <arglist>(const std::string &amp;qos_library_name, const std::string &amp;qos_profile_name)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>datawriter_qos</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a43c11c1a51264995b3a44b091769e8a8</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>datareader_qos</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a905251c7e2d5a9b30219e546b3721abb</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>publisher</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a7db53eaabcf05a1e2faf39090b54821c</anchor>
      <arglist>(DDSPublisher *publisher)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>subscriber</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>af2228105ae48d00ad4e311ab73ea3ff0</anchor>
      <arglist>(DDSSubscriber *subscriber)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>request_type_support</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>a6a034c390f4ef1e0ca87a134b65a9349</anchor>
      <arglist>(DDS::TypeSupport *type_support)</arglist>
    </member>
    <member kind="function">
      <type>SimpleReplierParams &amp;</type>
      <name>reply_type_support</name>
      <anchorfile>classconnext_1_1SimpleReplierParams.html</anchorfile>
      <anchor>ac62fbdfec108d7473d648bfb6d4f7302</anchor>
      <arglist>(DDS::TypeSupport *type_support)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::Requester</name>
    <filename>classconnext_1_1Requester.html</filename>
    <templarg>TReq</templarg>
    <templarg>TRep</templarg>
    <member kind="typedef">
      <type>TReq</type>
      <name>Request</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a901f30372425be2d01284268819db104</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TRep</type>
      <name>Reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a596e8204c03c01d492c5032154ce9613</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds_type_traits&lt; TReq &gt;::DataWriter</type>
      <name>RequestDataWriter</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ac7de8cc9ea9389fc3e0236d5f46e9c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds_type_traits&lt; TRep &gt;::DataReader</type>
      <name>ReplyDataReader</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a37525388ec1ac4dd43c0dddb8959d380</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds_type_traits&lt; TReq &gt;::TypeSupport</type>
      <name>RequestTypeSupport</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>aea0e6fad1d3266eafc0928f5e2400aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dds_type_traits&lt; TRep &gt;::TypeSupport</type>
      <name>ReplyTypeSupport</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a9bdb3ddc04f5c4ace99a74971758bcd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requester</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a1de4363900a1cbe7e2d7e6b83c85d1f3</anchor>
      <arglist>(DDSDomainParticipant *participant, const std::string &amp;service_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Requester</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a03bc68fc36a9729a146a3dbc439a12a7</anchor>
      <arglist>(const RequesterParams &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Requester</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a21134c0c3cc5b9cc185fb667b64194fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_request</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ab403a0b9bbfa155f7cb17a1ae3af1481</anchor>
      <arglist>(const UReq &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_request</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>aedd464eeabf05da706de155c7d0d36b7</anchor>
      <arglist>(WriteSample&lt; UReq &gt; &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_request</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ab059ad04536138799034f986f45e1942</anchor>
      <arglist>(WriteSampleRef&lt; UReq &gt; &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a578f7864fdcf784353523f11c74cc98b</anchor>
      <arglist>(Sample&lt; TRep &gt; &amp;reply, const DDS_Duration_t &amp;timeout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>receive_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a58fec89cf3c6713f615245fb9c98b2a5</anchor>
      <arglist>(SampleRef&lt; TRep &gt; reply, const DDS_Duration_t &amp;timeout)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>receive_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a2a8b064c1eca2913d5db27648c1d10aa</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>receive_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ad8d81a2fcb3782fbe6371439f3a75ebd</anchor>
      <arglist>(int min_count, int max_count, const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_for_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ad35fdf05f348e9e024acf3e7226f8df7</anchor>
      <arglist>(int min_count, const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_for_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a20303b826193cebeed6f41be0f345f07</anchor>
      <arglist>(const DDS_Duration_t &amp;max_wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_for_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a7cc0777612f60756813da59982d6d650</anchor>
      <arglist>(int min_count, const DDS_Duration_t &amp;max_wait, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ac8dd3e41f1872dc0e21ccf784a1e6d2d</anchor>
      <arglist>(Sample&lt; TRep &gt; &amp;reply)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>aba9b9143123bde530a516b05c29ad461</anchor>
      <arglist>(SampleRef&lt; TRep &gt; reply)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>take_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>aeccadc80d171a7ae6573369e9d9bfbbb</anchor>
      <arglist>(int max_count=DDS_LENGTH_UNLIMITED)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>aeed76905eff7176cc466766aeeb5e987</anchor>
      <arglist>(Sample&lt; TRep &gt; &amp;reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>take_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a262eacf581f8e69ad861c9db0001f257</anchor>
      <arglist>(SampleRef&lt; TRep &gt; reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>take_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a7301f3f48577fae6eae0592934676ec6</anchor>
      <arglist>(int max_count, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>take_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a8886cdd7a36236e597c5a30f6129d601</anchor>
      <arglist>(const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a24d9e88d60e7e193de7a587b76f26b4a</anchor>
      <arglist>(Sample&lt; TRep &gt; &amp;reply)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a0ff7c81cfa0b57cb2dceea31fee0f7bd</anchor>
      <arglist>(SampleRef&lt; TRep &gt; reply)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>read_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>afbbdbadb44f3440ba306bb555cc1479f</anchor>
      <arglist>(int max_count=DDS_LENGTH_UNLIMITED)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a540f3958d8bc5654d9325f82fd799875</anchor>
      <arglist>(Sample&lt; TRep &gt; &amp;reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_reply</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a8483ec34b87918a438bb122b6b71c5e1</anchor>
      <arglist>(SampleRef&lt; TRep &gt; reply, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>read_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a296c28267d6b82389da735f6af03acde</anchor>
      <arglist>(int max_count, const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>LoanedSamples&lt; TRep &gt;</type>
      <name>read_replies</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a6025a5a5d30ea8f6607af4af395f2797</anchor>
      <arglist>(const SampleIdentity_t &amp;related_request_id)</arglist>
    </member>
    <member kind="function">
      <type>RequestDataWriter *</type>
      <name>get_request_datawriter</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>a6c7db9ec0672203c9ea47dec764a6bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReplyDataReader *</type>
      <name>get_reply_datareader</name>
      <anchorfile>classconnext_1_1Requester.html</anchorfile>
      <anchor>ad946b34301e932e0cbc657693b603508</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::RequesterParams</name>
    <filename>classconnext_1_1RequesterParams.html</filename>
    <member kind="function">
      <type></type>
      <name>RequesterParams</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>ad4ffd55b0b9f8c56f22023a71281f18d</anchor>
      <arglist>(DomainParticipant *participant)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>service_name</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a0681afe20f3360efcb87c0a82cfe4560</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>request_topic_name</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a6ed5060659f1173171279af371ab6c30</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>reply_topic_name</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>ac79ba197f965646bc480322398bb12af</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>qos_profile</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a118a09065059da5129960137c0cf9b82</anchor>
      <arglist>(const std::string &amp;qos_library_name, const std::string &amp;qos_profile_name)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>datawriter_qos</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a1bb80f05193cc690bf049861743ad49a</anchor>
      <arglist>(const DDS_DataWriterQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>datareader_qos</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a88bbcd95942fc03f3f6a7aa60c9fa34a</anchor>
      <arglist>(const DDS_DataReaderQos &amp;qos)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>publisher</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>af837e4a03e590a680a7e4190394ee4b0</anchor>
      <arglist>(DDSPublisher *publisher)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>subscriber</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a15abe0187871f84aafb6318f863c8584</anchor>
      <arglist>(DDSSubscriber *subscriber)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>request_type_support</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>a8bd29eaa64c17f86c03fc9238101b665</anchor>
      <arglist>(TypeSupport *type_support)</arglist>
    </member>
    <member kind="function">
      <type>RequesterParams &amp;</type>
      <name>reply_type_support</name>
      <anchorfile>classconnext_1_1RequesterParams.html</anchorfile>
      <anchor>af46167de675bafce72d4a9af8ce8cf87</anchor>
      <arglist>(TypeSupport *type_support)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>connext::SimpleReplier</name>
    <filename>classconnext_1_1SimpleReplier.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SimpleReplier</name>
      <anchorfile>classconnext_1_1SimpleReplier.html</anchorfile>
      <anchor>ab8e0ab59ffb3eef1f2b0219129a128ea</anchor>
      <arglist>(DDSDomainParticipant *participant, const std::string &amp;service_name, SimpleReplierListener&lt; TReq, TRep &gt; &amp;listener)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleReplier</name>
      <anchorfile>classconnext_1_1SimpleReplier.html</anchorfile>
      <anchor>a1fd645f873561b83980622c122651594</anchor>
      <arglist>(const SimpleReplierParams&lt; TReq, TRep &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleReplier</name>
      <anchorfile>classconnext_1_1SimpleReplier.html</anchorfile>
      <anchor>a8fcc346905321efcdc29dc8e1dc03397</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>apis</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/apis/</path>
    <filename>dir_ca105911bd76fcbc54324aca597d2946.html</filename>
    <file>clock.dxx</file>
    <file>dcps.dxx</file>
    <file>main-apis.dxx</file>
    <file>memorymgmt.dxx</file>
    <file>multichannel.dxx</file>
    <file>ndds.dxx</file>
    <file>patterns.dxx</file>
    <file>persistence.dxx</file>
    <file>syntax.dxx</file>
    <file>system_properties.dxx</file>
    <file>xmlconfiguration.dxx</file>
  </compound>
  <compound kind="dir">
    <name>dds_c.1.0</name>
    <path>/home/build/rti/waveworks/ndds523/dds_c.1.0/</path>
    <filename>dir_2e775c2b02068ab8dfd69090dea4e47e.html</filename>
    <dir>interface</dir>
  </compound>
  <compound kind="dir">
    <name>dds_cpp.1.0</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.1.0/</path>
    <filename>dir_4c4b0e06a05c50cec5a9111a6cf8113a.html</filename>
    <dir>interface</dir>
    <dir>srcDoc</dir>
  </compound>
  <compound kind="dir">
    <name>dds_doc.1.0</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/</path>
    <filename>dir_9c84a248d15eee0c15ea87e990defc3b.html</filename>
    <dir>srcDoc</dir>
  </compound>
  <compound kind="dir">
    <name>dependencies</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/dependencies/</path>
    <filename>dir_2a2cafe8e4a5c9fb8d224dee89de83cb.html</filename>
    <file>main-dependencies.dxx</file>
  </compound>
  <compound kind="dir">
    <name>examples</name>
    <path>/home/build/rti/waveworks/ndds523/xmq_cpp.1.0/srcDoc/examples/</path>
    <filename>dir_20793f0a893ab754391a9f134b943b59.html</filename>
    <file>requestreply.dxx</file>
  </compound>
  <compound kind="dir">
    <name>examples</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/examples/</path>
    <filename>dir_40fbcaa9231388e418e7e961555807a8.html</filename>
    <file>customfilter.dxx</file>
    <file>entity.dxx</file>
    <file>helloWorld.dxx</file>
    <file>largedata.dxx</file>
    <file>main-examples.dxx</file>
    <file>dds_doc.1.0/srcDoc/examples/participant.dxx</file>
    <file>patterns_requestreply.dxx</file>
    <file>publication.dxx</file>
    <file>subscription.dxx</file>
    <file>transport.dxx</file>
  </compound>
  <compound kind="dir">
    <name>examples</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.1.0/srcDoc/examples/</path>
    <filename>dir_2acdf7e8876e1c7d5b81a3e5655658e9.html</filename>
    <file>controller.dxx</file>
    <file>filter.dxx</file>
    <file>dds_cpp.1.0/srcDoc/examples/participant.dxx</file>
    <file>publisher.dxx</file>
    <file>reader.dxx</file>
    <file>subscriber.dxx</file>
    <file>topic.dxx</file>
    <file>waitset.dxx</file>
    <file>writer.dxx</file>
  </compound>
  <compound kind="dir">
    <name>guides</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/guides/</path>
    <filename>dir_33609890c654fd3f832c2904d2136034.html</filename>
    <file>conventions-cpp2.dxx</file>
    <file>dev-guide.dxx</file>
    <file>doc-guide.dxx</file>
    <file>dotnet-languages-guide.dxx</file>
    <file>main-guides.dxx</file>
    <file>namespace-guide.dxx</file>
    <file>user-guide.dxx</file>
  </compound>
  <compound kind="dir">
    <name>interface</name>
    <path>/home/build/rti/waveworks/ndds523/xmq_cpp.1.0/interface/</path>
    <filename>dir_94b25bc4f667ac8ebd7c938c0f97ce01.html</filename>
    <file>xmq_cpp.1.0/interface/dll.ifcxx</file>
    <file>entity_params.ifcxx</file>
    <file>exception.ifcxx</file>
    <file>general_replier_details.ifcxx</file>
    <file>xmq_cpp.1.0/interface/infrastructure.ifcxx</file>
    <file>replier.ifcxx</file>
    <file>replier_details.ifcxx</file>
    <file>replier_listener.ifcxx</file>
    <file>replier_params.ifcxx</file>
    <file>replier_untyped.ifcxx</file>
    <file>requester.ifcxx</file>
    <file>requester_details.ifcxx</file>
    <file>requester_params.ifcxx</file>
    <file>requester_template.ifcxx</file>
    <file>simple_replier.ifcxx</file>
    <file>untyped_common.ifcxx</file>
  </compound>
  <compound kind="dir">
    <name>interface</name>
    <path>/home/build/rti/waveworks/ndds523/transport.1.0/interface/</path>
    <filename>dir_119063f357170ff42d2dce0e727c52c2.html</filename>
    <file>common_user.ifc</file>
    <file>interface_user.ifc</file>
    <file>shmem.ifc</file>
    <file>udpv4.ifc</file>
    <file>udpv6.ifc</file>
  </compound>
  <compound kind="dir">
    <name>interface</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.1.0/interface/</path>
    <filename>dir_59b3815af28d51260b7a062ead2a3c58.html</filename>
    <file>buildid.ifcxx</file>
    <file>builtin.ifcxx</file>
    <file>builtintypes.ifcxx</file>
    <file>data.ifcxx</file>
    <file>dds_cpp.1.0/interface/dll.ifcxx</file>
    <file>domain.ifcxx</file>
    <file>dynamicdata.ifcxx</file>
    <file>flowcontroller.ifcxx</file>
    <file>dds_cpp.1.0/interface/infrastructure.ifcxx</file>
    <file>license.ifcxx</file>
    <file>ndds_config_cpp.ifcxx</file>
    <file>ndds_cpp.ifcxx</file>
    <file>ndds_namespace_cpp.ifcxx</file>
    <file>ndds_transport_cpp.ifcxx</file>
    <file>ndds_utility_cpp.ifcxx</file>
    <file>ndds_writerhistory_cpp.ifcxx</file>
    <file>publication.ifcxx</file>
    <file>sequence.ifcxx</file>
    <file>subscription.ifcxx</file>
    <file>topic.ifcxx</file>
  </compound>
  <compound kind="dir">
    <name>interface</name>
    <path>/home/build/rti/waveworks/ndds523/dds_c.1.0/interface/</path>
    <filename>dir_c969f905fe4e2753262c16f9012a996a.html</filename>
    <file>buildid.ifc</file>
    <file>builtin.ifc</file>
    <file>builtin_impl.ifc</file>
    <file>builtintypes.ifc</file>
    <file>builtintypes_impl.ifc</file>
    <file>common.ifc</file>
    <file>data.ifc</file>
    <file>dll.ifc</file>
    <file>domain.ifc</file>
    <file>domain_impl.ifc</file>
    <file>dynamicdata.ifc</file>
    <file>dynamicdata_impl.ifc</file>
    <file>dynamicdata_java_impl.ifc</file>
    <file>dynamicdataformatter.ifc</file>
    <file>factory_plugin_impl.ifc</file>
    <file>flowcontroller.ifc</file>
    <file>infrastructure.ifc</file>
    <file>infrastructure_impl.ifc</file>
    <file>license.ifc</file>
    <file>log.ifc</file>
    <file>log_impl.ifc</file>
    <file>monitoring.ifc</file>
    <file>ndds_c.ifc</file>
    <file>ndds_config_c.ifc</file>
    <file>ndds_discovery_c.ifc</file>
    <file>ndds_transport_c.ifc</file>
    <file>ndds_utility_c.ifc</file>
    <file>ndds_version.ifc</file>
    <file>ndds_version.template.ifc</file>
    <file>ndds_writerhistory_c.ifc</file>
    <file>octet_buffer.ifc</file>
    <file>prifilter.ifc</file>
    <file>printformat.ifc</file>
    <file>publication.ifc</file>
    <file>publication_impl.ifc</file>
    <file>registry.ifc</file>
    <file>sequence.ifc</file>
    <file>sqlfilter.ifc</file>
    <file>string.ifc</file>
    <file>subscription.ifc</file>
    <file>subscription_impl.ifc</file>
    <file>test.ifc</file>
    <file>topic.ifc</file>
    <file>topic_impl.ifc</file>
    <file>typecode.ifc</file>
    <file>typecode_impl.ifc</file>
    <file>typeobject.ifc</file>
    <file>xml_impl.ifc</file>
  </compound>
  <compound kind="dir">
    <name>srcDoc</name>
    <path>/home/build/rti/waveworks/ndds523/xmq_cpp.1.0/srcDoc/</path>
    <filename>dir_b33ac55c5f30cf74f2aa447fdb640962.html</filename>
    <dir>examples</dir>
  </compound>
  <compound kind="dir">
    <name>srcDoc</name>
    <path>/home/build/rti/waveworks/ndds523/dds_cpp.1.0/srcDoc/</path>
    <filename>dir_a0aa3df8c289a5790ff8a60ca8dd61ce.html</filename>
    <dir>examples</dir>
  </compound>
  <compound kind="dir">
    <name>srcDoc</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/</path>
    <filename>dir_e2bf78b97bdf5cde158e47c8f1f73a94.html</filename>
    <dir>apis</dir>
    <dir>dependencies</dir>
    <dir>examples</dir>
    <dir>guides</dir>
    <dir>tools</dir>
    <file>main.dxx</file>
  </compound>
  <compound kind="dir">
    <name>tools</name>
    <path>/home/build/rti/waveworks/ndds523/dds_doc.1.0/srcDoc/tools/</path>
    <filename>dir_33ec2c40d1f3ae4f93e3d7eedfc91330.html</filename>
    <file>main-tools.dxx</file>
    <file>nddsgen.dxx</file>
    <file>nddsping.dxx</file>
    <file>nddsspy.dxx</file>
  </compound>
  <compound kind="dir">
    <name>transport.1.0</name>
    <path>/home/build/rti/waveworks/ndds523/transport.1.0/</path>
    <filename>dir_e86e738ce3c9053da9cc23f904e46611.html</filename>
    <dir>interface</dir>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>RTI Connext</title>
    <filename>index</filename>
    <docanchor file="index">main_support</docanchor>
    <docanchor file="index">main_toc</docanchor>
    <docanchor file="index">main_toc_pdfdocs</docanchor>
    <docanchor file="index">main_toc_htmldocs</docanchor>
  </compound>
</tagfile>
