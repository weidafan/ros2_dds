## $Id$
##
## (c) Copyright, Real-Time Innovations, Inc. 2001.  All rights reserved.
## No duplications, whole or partial, manual or electronic, may be made
## without prior written permission.  Any such copies, or
## revisions thereof, must display this notice unaltered.
## This code contains trade secrets of Real-Time Innovations, Inc.
##
## modification history:
## ---------------------
## 2.3,11aug15,eys PLATFORMS-664 Added Android 5 port using ndkr10e
## 2.3,13may15,gpc Added setting of NDDSHOME if undefined in environment
## 2.2,12aug14,vmg created
##========================================================================
#[[######################################################################]]#
#[[#]]# makefile_${global.idlFileName}_${global.architectureName}
#[[#]]#
#[[#]]# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
#[[#]]# No duplications, whole or partial, manual or electronic, may be made
#[[#]]# without express written permission.  Any such copies, or
#[[#]]# revisions thereof, must display this notice unaltered.
#[[#]]# This code contains trade secrets of Real-Time Innovations, Inc.
#[[#]]#
#[[#]]#
#[[#]]# This makefile was automatically generated by rtiddsgen.
#[[#]]#
#[[#]]# To compile, type:
#[[#]]# 	gmake -f makefile_${global.idlFileName}_${global.architectureName}
#[[#]]#
#[[#]]# Note: This makefile is only meant to build our example applications and
#[[#]]#       may require alterations to build on your system.
#[[#]]#
#[[#]]# Make sure that javac and java are in your path.
#[[######################################################################]]#

#[[#]]# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := ${global.nddsHome}
endif

TARGET_ARCH = ${global.architectureName}

JAVA_PATH = java
JAVAC_PATH = javac
JAR_PATH = jar

JAVA_SOURCES =#foreach($source in ${sourceFileList}) $source#end

CLASS_FILES  = #[[$]]#(JAVA_SOURCES:%.java=%.class)

JAR_FILE = ${exampleTypeClassPath}.jar

RTI_CLASSPATH := #[[$]]#(NDDSHOME)/lib/java/nddsjava${global.libSuffix}.jar

ifeq (#[[$]]#(OS),Windows_NT)
CP_SEP = ;
else
CP_SEP = :
endif

%.class : %.java
	#[[$]]#(JAVAC_PATH) ${compilerDebugFlag} -classpath .#[[$]]#(CP_SEP)#[[$]]#(RTI_CLASSPATH) $<

${exampleType}.jar : #[[$]]#(CLASS_FILES)
	#[[$]]#(JAR_PATH) cf #[[$]]#@ ${exampleTypeClassPath}*.class
 
all: #[[$]]#(CLASS_FILES) #[[$]]#(JAR_FILE)

#[[#]]#
#[[#]]# variables for android only
#[[#]]#

.SECONDARY:

ANDROID_PACKAGE_PREFIX = ${typePackage}

ANDROID_PUSH_DEST = /data/data/#[[$]]#(ANDROID_PACKAGE_PREFIX)

#[[#]]# replace TARGET_ID with the android platfrom that you want to use
#[[#]]# use "android list targets" to see the list of available targets
TARGET_ID = ${archMap.TARGET_ID}

#[[#]]# if you have more than 1 device connected, you may need to define this
#[[#]]# use "adb devices" to check which devices are connected
#[[#]]#DEVICE = -s emulator-5554

ANDROID_ABI = armeabi-v7a

NDDSLIBS = libnddscore.so libnddsc.so libnddsjava.so

ifeq (#[[$]]#(OS),Windows_NT)
ANDROID_CMD = android.bat
else
ANDROID_CMD = android
endif

#[[#]]#
#[[#]]# Convenient way to build a dex
#[[#]]#

${exampleType}.dex : ${exampleType}.jar
	dx --dex --output=${exampleType}.dex ${exampleType}.jar #[[$]]#(RTI_CLASSPATH)

#[[#]]#
#[[#]]# commands to copy and run with dex in shell as root on the device
#[[#]]#

#[[#]]# copy all necessary files to shell
${exampleType}.pushdex :
	adb #[[$]]#(DEVICE) shell mkdir #[[$]]#(ANDROID_PUSH_DEST)
	adb #[[$]]#(DEVICE) push ${exampleType}.dex #[[$]]#(ANDROID_PUSH_DEST)/${exampleType}.dex
	#[[$]]#(foreach lib, #[[$]]#(NDDSLIBS), \
		adb #[[$]]#(DEVICE) push #[[$]]#(NDDSHOME)/lib/#[[$]]#(TARGET_ARCH)/#[[$]]#(lib) #[[$]]#(ANDROID_PUSH_DEST)/#[[$]]#(lib) ; )
#[[#]]# optionally you can also use USER_QOS_PROFILES.xml for our example
#[[#]]#	adb #[[$]]#(DEVICE) push USER_QOS_PROFILES.xml #[[$]]#(ANDROID_PUSH_DEST)/USER_QOS_PROFILES.xml

#[[#]]# example commands for running
#[[#]]# > adb #[[$]]#(DEVICE) shell
#[[#]]# > cd #[[$]]#(ANDROID_PUSH_DEST)
#[[#]]# > export LD_LIBRARY_PATH=#[[$]]#(ANDROID_PUSH_DEST)
#[[#]]# running publisher
#[[#]]# > dalvikvm -cp ${exampleType}.dex ${exampleTypeClassPackage}Publisher #[[$]]#(ARGS)
#[[#]]# running subscriber
#[[#]]# > dalvikvm -cp ${exampleType}.dex ${exampleTypeClassPackage}Subscriber #[[$]]#(ARGS)
#[[#]]# > exit

#[[#]]#
#[[#]]# Convenient way to create projects
#[[#]]#

${exampleType}.projects : ${exampleType}Publisher/publisher \
		  	   ${exampleType}Subscriber/subscriber \
			   ${exampleType}Project.publisherlib \
			   ${exampleType}Project.subscriberlib ;

${exampleType}%/publisher ${exampleType}%/subscriber :
	#[[$]]#(ANDROID_CMD) update project -n ${exampleType}#[[$]]#* -t #[[$]]#(TARGET_ID) -p objs/#[[$]]#(TARGET_ARCH)/#[[$]]#(notdir #[[$]]#@)

${exampleType}Project.%lib :
	mkdir -p objs/#[[$]]#(TARGET_ARCH)/#[[$]]#*/libs
	cp #[[$]]#(NDDSHOME)/lib/java/nddsjava.jar objs/#[[$]]#(TARGET_ARCH)/#[[$]]#*/libs/
	mkdir -p objs/#[[$]]#(TARGET_ARCH)/#[[$]]#*/libs/#[[$]]#(ANDROID_ABI)
	#[[$]]#(foreach lib, #[[$]]#(NDDSLIBS), cp #[[$]]#(NDDSHOME)/lib/#[[$]]#(TARGET_ARCH)/#[[$]]#(lib) objs/#[[$]]#(TARGET_ARCH)/#[[$]]#*/libs/#[[$]]#(ANDROID_ABI)/ ; )

#[[#]]#
#[[#]]# Convenient way to build apks
#[[#]]#

#[[#]]# this command will work only if cygwin is installed
${exampleType}.apks : ${exampleType}Project.publisherjar \
		       ${exampleType}Project.subscriberjar
	cd objs/#[[$]]#(TARGET_ARCH)/publisher; ant debug
	cd objs/#[[$]]#(TARGET_ARCH)/subscriber; ant debug

${exampleType}Project.%jar: objs/#[[$]]#(TARGET_ARCH)/%/libs/${exampleType}.jar ;

objs/#[[$]]#(TARGET_ARCH)/%/libs/${exampleType}.jar : ${exampleType}.jar
	cp #[[$]]#< #[[$]]#@

#[[#]]#
#[[#]]# Installing apks to device
#[[#]]#

${exampleType}.installapks :
	adb #[[$]]#(DEVICE) install objs/#[[$]]#(TARGET_ARCH)/publisher/bin/${exampleType}Publisher-debug.apk
	adb #[[$]]#(DEVICE) install objs/#[[$]]#(TARGET_ARCH)/subscriber/bin/${exampleType}Subscriber-debug.apk
	
#[[#]]#
#[[#]]# Example to unistall apks on device
#[[#]]#

${exampleType}.uninstallapks :
	adb #[[$]]#(DEVICE) uninstall #[[$]]#(ANDROID_PACKAGE_PREFIX).publisher
	adb #[[$]]#(DEVICE) uninstall #[[$]]#(ANDROID_PACKAGE_PREFIX).subscriber	

#[[#]]#
#[[#]]# Example to capture logs
#[[#]]#

logcat:
	adb $(DEVICE) logcat
	
logcat.clear:
	adb $(DEVICE) logcat -c
	      
