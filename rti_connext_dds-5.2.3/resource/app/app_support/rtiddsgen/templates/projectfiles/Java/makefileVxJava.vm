## $Id$
##
## (c) Copyright, Real-Time Innovations, Inc. 2001.  All rights reserved.
## No duplications, whole or partial, manual or electronic, may be made
## without prior written permission.  Any such copies, or
## revisions thereof, must display this notice unaltered.
## This code contains trade secrets of Real-Time Innovations, Inc.
##
## modification history:
## ---------------------
## 2.3,13may15,gpc Added setting of NDDSHOME if undefined in environment
## 2.2,9jun14,vmg created
##========================================================================
#[[######################################################################]]#
#[[#]]# makefile_${global.idlFileName}_${global.architectureName}
#[[#]]#
#[[#]]# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
#[[#]]# No duplications, whole or partial, manual or electronic, may be made
#[[#]]# without express written permission.  Any such copies, or
#[[#]]# revisions thereof, must display this notice unaltered.
#[[#]]# This code contains trade secrets of Real-Time Innovations, Inc.
#[[#]]#
#[[#]]#
#[[#]]# This makefile was automatically generated by rtiddsgen.
#[[#]]#
#[[#]]# To compile, type:
#[[#]]# 	gmake -f makefile_${global.idlFileName}_${global.architectureName}
#[[#]]#
#[[#]]# Note: This makefile is only meant to build our example applications and
#[[#]]#       may require alterations to build on your system.
#[[#]]#
#[[#]]# Make sure the environment variable JAMAICA is set.
#[[#]]#
#[[#]]# Make sure that WIND_HOME, WIND_BASE and WIND_USR are set.
#[[#]]# Alternatively, run #[[$]]#(WIND_BASE)/wrenv.sh -p <subdir> to set all
#[[#]]# necessary WindRiver environment variables.
#[[#]]#
#[[######################################################################]]#

#[[#]]# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := ${global.nddsHome}
endif

TARGET_ARCH=${global.architectureName}

JAVAC_PATH = #[[$]]#(JAMAICA)/bin/jamaicac
JAMAICABUILDER_PATH = #[[$]]#(JAMAICA)/bin/jamaicabuilder

JAVA_SOURCES =#foreach($source in ${sourceFileList}) $source#end

CLASS_FILES  = #[[$]]#(JAVA_SOURCES:%.java=%.class)
RTI_CLASSPATH =#foreach($classPath in ${javaClasspath}) $classPath#end

RTI_LIBPATH =#foreach($libsDir in ${libsDirs}) $libsDir#end

RTI_STATICLIB = nddsjava${global.libSuffix}
DIRECTORIES   = objs.dir objs/#[[$]]#(TARGET_ARCH).dir
 
%.class : %.java
	#[[$]]#(JAVAC_PATH) -useTarget ${targetPlatform} ${compilerDebugFlag} -classpath .:#[[$]]#(RTI_CLASSPATH) #[[$]]#<
 
all: objs/#[[$]]#(TARGET_ARCH)/${exampleTypeClassPackage}Publisher objs/#[[$]]#(TARGET_ARCH)/${exampleTypeClassPackage}Subscriber

objs/#[[$]]#(TARGET_ARCH)/${exampleTypeClassPackage}Publisher: #[[$]]#(CLASS_FILES) #[[$]]#(DIRECTORIES)
	#[[$]]#(JAMAICABUILDER_PATH) -classpath=.:#[[$]]#(RTI_CLASSPATH) -includeJar=#[[$]]#(RTI_CLASSPATH) -XlibraryPaths+=#[[$]]#(RTI_LIBPATH) -XstaticLibraries="#[[$]]#(RTI_STATICLIB)" -setGraphics=none -interpret -target=${targetPlatform} -destination=#[[$]]#@ ${exampleTypeClassPackage}Publisher
 
objs/#[[$]]#(TARGET_ARCH)/${exampleTypeClassPackage}Subscriber: #[[$]]#(CLASS_FILES) #[[$]]#(DIRECTORIES)
	#[[$]]#(JAMAICABUILDER_PATH) -classpath=.:#[[$]]#(RTI_CLASSPATH) -includeJar=#[[$]]#(RTI_CLASSPATH) -XlibraryPaths+=#[[$]]#(RTI_LIBPATH) -XstaticLibraries="#[[$]]#(RTI_STATICLIB)" -setGraphics=none -interpret -target=${targetPlatform} -destination=#[[$]]#@ ${exampleTypeClassPackage}Subscriber

#[[#]]# Here is how we create those subdirectories automatically.
%.dir : 
	@echo "Checking directory #[[$]]#*"
	@if [ ! -d #[[$]]#* ]; then \
		echo "Making directory #[[$]]#*"; \
		mkdir -p #[[$]]#* ; \
	fi;
