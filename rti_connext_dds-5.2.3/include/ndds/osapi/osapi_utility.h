/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)osapi_utility.h    generated by: makeheader    Mon Apr 25 07:49:33 2016
 *
 *		built from:	utility.ifc
 */

#ifndef osapi_utility_h
#define osapi_utility_h


  #include <errno.h>
  #ifndef osapi_type_h
    #include "osapi/osapi_type.h"
  #endif
  #ifndef osapi_dll_h
    #include "osapi/osapi_dll.h"
  #endif

  #include <stdio.h>
  #include <stdarg.h>

#ifdef __cplusplus
    extern "C" {
#endif

extern RTIOsapiDllExport int RTIOsapiUtility_max(int l, int r);

extern RTIOsapiDllExport int RTIOsapiUtility_isWithinBound(
    int me, int lower, int upper);

extern RTIOsapiDllExport int RTIOsapiUtility_min(int l, int r);

extern RTIOsapiDllExport RTI_UINT16 RTIOsapiUtility_ntohs(RTI_UINT16 s);

extern RTIOsapiDllExport RTI_UINT32 RTIOsapiUtility_ntohl(RTI_UINT32 l);

extern RTIOsapiDllExport RTI_UINT16 RTIOsapiUtility_htons(RTI_UINT16 s);

extern RTIOsapiDllExport RTI_UINT32 RTIOsapiUtility_htonl(RTI_UINT32 l);

extern RTIOsapiDllExport 
void RTIOsapiUtility_hostToNetworkByteOrder(
    void *dst, 
    const void *src,
    RTI_UINT32 size);

extern RTIOsapiDllExport int RTIOsapiUtility_isDigit(int c);

extern RTIOsapiDllExport
RTI_INT32 RTIOsapi_removeFile(const char * fileName);

extern RTIOsapiDllExport
FILE * RTIOsapi_fileOpen(const char *filename, const char *type);

extern RTIOsapiDllExport
int RTIOsapi_fileClose(FILE *f);

extern RTIOsapiDllExport
RTIBool RTIOsapiUtility_fileExists(const char * fname);

extern RTIOsapiDllExport 
char* RTIOsapi_envVarOrFileGet(char *buffer, int bufferLen,
                                 const char *envVariableName,
                                 const char *fileName,
                                 char separator, 
                                 char commentchar);

extern RTIOsapiDllExport 
RTIBool RTIOsapiUtility_getUsername(char * username, 
                                    int maxNameLen);

extern RTIOsapiDllExport 
RTIBool RTIOsapiUtility_getExecutablePath(char * path, 
                                          int maxPathLen, 
                                          const char * executable);

extern RTIOsapiDllExport 
RTIBool RTIOsapiUtility_getSelfFullpath(char * path, int maxPathLen);

extern RTIOsapiDllExport 
RTIBool RTIOsapiUtility_getTarget(char * target, int maxTargetLen);

extern RTIOsapiDllExport 
RTIBool RTIOsapiUtility_getCreationTimestamp(char * buf /* Out */, 
                                             int maxBufLen);

extern RTIOsapiDllExport 
RTIBool RTIOsapiUtility_getExecutionTimestamp(char * buf /* Out */, 
                                             int maxBufLen);

extern RTIOsapiDllExport
RTIBool RTIOsapiUtility_normalizePath(char * path, 
                                      int maxPathLen, 
                                      const char * originalPath); 

extern RTIOsapiDllExport
RTIBool RTIOsapi_envVarSet(char * envVariable);

extern RTIOsapiDllExport
int RTIOsapiUtility_snprintf(char *str, int size, const char *format, ...);

extern RTIOsapiDllExport
int RTIOsapiUtility_vsnprintf(char *str, int size, const char *format, va_list args);

extern RTIOsapiDllExport
void RTIOsapiUtility_fprintf_llu(FILE *fp, RTI_UINT64 value);

extern RTIOsapiDllExport
void RTIOsapiUtility_fprintf_ll(FILE *fp, RTI_INT64 value);

extern RTIOsapiDllExport
RTIBool RTIOsapiUtility_strtoll(const char * str, RTI_INT64 * value);

extern RTIOsapiDllExport
RTIBool RTIOsapiUtility_strtoull(const char * str, RTI_UINT64 * value, int base);

extern RTIOsapiDllExport
RTIBool RTIOsapiUtility_strtoptr(const char * str,void ** value);


#define RTI_OSAPI_STRING_SEQ_STRING_MAX_SIZE (4096)

extern RTIOsapiDllExport
RTI_INT64 RTIOsapiUtility_gethrtime();

extern RTIOsapiDllExport
char * RTIOsapiUtility_strToken(char *s1, const char *delim, char **save);

extern RTIOsapiDllExport
unsigned int RTIOsapiUtility_pow2(int y);

extern RTIOsapiDllExport
unsigned int RTIOsapiUtility_log2(unsigned int x, char floor);

extern RTIOsapiDllExport
char *RTIOsapiUtility_strTrim(char *str);

extern RTIOsapiDllExport
int RTIOsapiUtility_rand(int rangeMin, int rangeMax);


#define RTI_OSAPI_ERROR_STRING_MAX_SIZE (128)
#define RTI_OSAPI_UNKNOWN_ERROR_STRING "Unknown error"


#if defined(RTI_WIN32) || defined(RTI_WINCE)
  #define RTIOsapiUtility_getError GetLastError
  #define RTIOsapiUtility_setError SetLastError
#else
  #ifdef RTI_VXWORKS
    #ifndef errno
      #define errno errnoGet()
    #endif
  #endif
  #define RTIOsapiUtility_getError() errno
  #define RTIOsapiUtility_setError(x) errno = (x)
#endif

extern RTIOsapiDllExport
const char * RTIOsapiUtility_getErrorString(
    char *buffer, size_t bufferSize, int errnum);


#ifdef __cplusplus
    }	/* extern "C" */
#endif

  #include "osapi/osapi_utility_impl.h"

#endif /* osapi_utility_h */
