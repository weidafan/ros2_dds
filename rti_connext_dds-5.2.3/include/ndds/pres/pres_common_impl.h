/* (c) Copyright 2003-2015, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)pres_common_impl.h    generated by: makeheader    Mon Apr 25 07:50:17 2016
 *
 *		built from:	common_impl.ifc
 */

#ifndef pres_common_impl_h
#define pres_common_impl_h


#ifdef __cplusplus
    extern "C" {
#endif



/* RTPS spec - PB + DG*domainId + dX */ 
#define PRESRtps_getWellKnownMulticastPort(domain_id, port_base, domain_id_gain, port_offset) \
    ((port_base) + ((domain_id_gain)*(domain_id)) + (port_offset))

/* RTPS spec - PB + DG*domainId + PG*participantId + dX */ 
#define PRESRtps_getWellKnownUnicastPort(domain_id, participant_id, port_base, domain_id_gain, participant_id_gain, port_offset) \
    ((port_base) + ((domain_id_gain)*(domain_id)) + ((participant_id_gain)*(participant_id)) + (port_offset))

/* --------------------------------------------------------- */
  #define PRESGroupSuffix_getRWType(osx) \
    (((osx) & 0x0F) == 0x08 ? MIG_RTPS_RW_TYPE_WRITER :  \
    (((osx) & 0x0F) == 0x09 ? MIG_RTPS_RW_TYPE_READER :  \
    (((osx) == PRES_GROUP_SUFFIX_NORMAL_USER_VIRTUAL_READER_GROUP) ? \
      MIG_RTPS_RW_TYPE_READER : MIG_RTPS_RW_TYPE_UNKNOWN)))

/* --------------------------------------------------------- */

  #define PRESTopicSuffix_isTopic(osx) \
    (((osx) == PRES_TOPIC_SUFFIX_NORMAL_USER_TOPIC   || \
        (osx) == PRES_TOPIC_SUFFIX_RESERVED_USER_TOPIC || \
        (osx) == PRES_TOPIC_SUFFIX_NORMAL_META_TOPIC   || \
        (osx) == PRES_TOPIC_SUFFIX_RESERVED_META_TOPIC || \
        (osx) == PRES_TOPIC_SUFFIX_NORMAL_USER_VIRTUAL_TOPIC) ? \
        RTI_TRUE : RTI_FALSE)
/* --------------------------------------------------------- */
  #define PRESIeeeTime_compare(time1, time2) \
    ((((time1).sec) > ((time2).sec)) ? 1 : \
     ((((time1).sec) < ((time2).sec)) ? -1 : \
      ((((time1).nanosec) > ((time2).nanosec)) ? 1 : \
       ((((time1).nanosec) < ((time2).nanosec)) ? -1 : 0))))

/* --------------------------------------------------------- */
  #define PRESEntity_isEnabled(entity) \
    ((entity).state == PRES_ENTITY_STATE_ENABLED)

/* --------------------------------------------------------- */
  #define PRESEntity_isDestroyed(entity) \
    ((entity).state == PRES_ENTITY_STATE_DESTROYED)

/* --------------------------------------------------------- */
  #define PRESResourceLimitQos_limitExceeded(maximal, x) \
    (((maximal) >= 0) && (((x) < 0) || ((x) > (maximal))))

/* --------------------------------------------------------- */
  #define PRESResourceLimitQos_limitReached(maximal, x) \
    (((maximal) >= 0) && (((x) < 0) || ((x) >= (maximal))))

/* --------------------------------------------------------- */
  #define PRESCookie_fromBuffer(cookie, buffer) \
      (cookie)->data._maximum = (buffer)->length; \
      (cookie)->data._length = (buffer)->length; \
      (cookie)->data._buffer = (RTICdrOctet *)((buffer)->pointer);

/* --------------------------------------------------------- */
  #define PRESCookie_toBuffer(cookie, buffer) \
     (buffer)->length = (cookie)->data._length; \
     (buffer)->pointer = (char *)((cookie)->data._buffer);

/* --------------------------------------------------------- */
  #define PRESAckResponse_fromBuffer(ackresp, buffer) \
      (ackresp)->data._maximum = (buffer)->length; \
      (ackresp)->data._length = (buffer)->length; \
      (ackresp)->data._buffer = (RTICdrOctet *)((buffer)->pointer);

/* --------------------------------------------------------- */
  #define PRESAckResponse_toBuffer(ackresp, buffer) \
     (buffer)->length = (ackresp)->data._length; \
     (buffer)->pointer = (char *)((ackresp)->data._buffer);



#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* pres_common_impl_h */
